<!-- 
  TODO
  - Implementar cluster marcadores
 -->

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <link rel="shortcut icon" type="image/x-icon" href="https://app.pedbox.co/assets/logos/logo_blanco.png"/>
  <title> Dashboard </title>

  <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet" />
  <link href="/css/nucleo-svg.css" rel="stylesheet" />
  <link href="/css/nucleo-icons.css" rel="stylesheet" />
  <link href="/css/nucleo-svg.css" rel="stylesheet" />
  <link id="pagestyle" href="/css/soft-ui-dashboard.css?v=1.0.3" rel="stylesheet" />
  <link rel="stylesheet" href="/css/jquery-ui.min.css">
  <link rel="stylesheet" href="/css/reports.css">

  <script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.1.0/socket.io.js" integrity="sha512-+l9L4lMTFNy3dEglQpprf7jQBhQsQ3/WvOnjaN/+/L4i0jOstgScV0q2TjfvRF4V+ZePMDuZYIQtg5T4MKr+MQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <script src="/js/jquery.js"></script>
  <script src="/js/helpers.js"></script>

  <!-- Color Page -->
  <%- include('./partials/colors.ejs') %> 

  <style>
    #cardsContainerDashboard>div{
      flex: 1 1 0px
    }  
    #cardsContainerDashboard p{
      margin: 0;
    }  
    #cardsContainerDashboard h4{
      font-size: 20px !important;
    }
    .dashboardNumberStyle{
      color: #344767 !important;
      font-weight: 700;
    }
    #cardsContainerDashboard h2{
      font-size: 25px !important;
    }
    #headerDashboard i{
      cursor: pointer;
    }
    .imgTable{
      max-width: 100%;
      max-height: 100%;
      border-radius: 50%;
      overflow: hidden;
    }
    .imgTableCont{
      width: 35px;
      height: 35px;
    }
    tr th a{
      text-align: center !important;
    }
    .dataTable-sorter::before {
      display: none !important;
    }
    .dataTable-sorter::after {
      display: none !important;
    }
    .cardDocumentsHover{
      transition: 0.3s;
      background-color: transparent
    }
    .cardDocumentsHover:hover{
      background-color: #e9ecef;
    }
    .cardVisitedClientsHover{
      transition: 0.3s;
    }
    .cardVisitedClientsHover:hover{
      background-color: #e9ecef;
    }
    .cardProductClient{
      transition: 0.3s;
    }
    .cardProductClient:hover{
      background-color: #e9ecef;
    }
    .detailRow{
      text-decoration: underline;
      color: #344767;
      cursor: pointer;
    }
    .dropdown-menu{
      box-shadow: 0 20px 27px 0 rgb(0 0 0 / 10%);
      top: -10px;
    }
    #dropdownMenuButton::after{
      display: none;
    }
    #selectRangeDate{
      top: 35px !important;
    }

    .sk-chase {
      width: 15px;
      height: 15px;
      position: relative;
      animation: sk-chase 2.5s infinite linear both;
      margin-left: 20px;
    }
    .sk-chase-dot {
      width: 100%;
      height: 100%;
      position: absolute;
      left: 0;
      top: 0; 
      animation: sk-chase-dot 2.0s infinite ease-in-out both; 
    }
    .sk-chase-dot:before {
      content: '';
      display: block;
      width: 25%;
      height: 25%;
      background-color: black;
      border-radius: 100%;
      animation: sk-chase-dot-before 2.0s infinite ease-in-out both; 
    }
    .sk-chase-dot:nth-child(1) { animation-delay: -1.1s; }
    .sk-chase-dot:nth-child(2) { animation-delay: -1.0s; }
    .sk-chase-dot:nth-child(3) { animation-delay: -0.9s; }
    .sk-chase-dot:nth-child(4) { animation-delay: -0.8s; }
    .sk-chase-dot:nth-child(5) { animation-delay: -0.7s; }
    .sk-chase-dot:nth-child(6) { animation-delay: -0.6s; }
    .sk-chase-dot:nth-child(1):before { animation-delay: -1.1s; }
    .sk-chase-dot:nth-child(2):before { animation-delay: -1.0s; }
    .sk-chase-dot:nth-child(3):before { animation-delay: -0.9s; }
    .sk-chase-dot:nth-child(4):before { animation-delay: -0.8s; }
    .sk-chase-dot:nth-child(5):before { animation-delay: -0.7s; }
    .sk-chase-dot:nth-child(6):before { animation-delay: -0.6s; }

    @keyframes sk-chase {
      100% { transform: rotate(360deg); } 
    }

    @keyframes sk-chase-dot {
      80%, 100% { transform: rotate(360deg); } 
    }

    @keyframes sk-chase-dot-before {
      50% {
        transform: scale(0.4); 
      } 100%, 0% {
        transform: scale(1.0); 
      } 
    }

    .navSectionsItemsAdmin{
      display: flex;
      background-color: #F8F9FA;
      flex-wrap: wrap;
      border-radius: 0.5rem;      
    }
    .navSectionsItemsAdmin>div{
      margin: 5px;
      padding: 5px;
      border-radius: 0.5rem;
      text-align: center;
      flex-grow: 1;
      flex-basis: 0;
      min-width: 0;
      font-weight: 600;
      cursor: pointer;
      width: min-content;
    }
    .activeNavitemAdmin{
      transition: 0.3s;
      background-color: white;
      box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);
    }
  </style>
</head>

<body class="g-sidenav-show bg-gray-100">

  <!-- Menu -->
  <%- include('./partials/menu.ejs') %> 

  <main class="main-content max-height-vh-100 h-100">

    <!-- Cabecera -->
    <%- include('./partials/header.ejs') %>
  
      <!-- Cotent -->
      <div class="p-4">

        <div id="headerDashboard" class="card mb-2 flex-row align-items-center" style="background-color: transparent; box-shadow: none;"> 
          <div class="w-50 ms-3 d-flex">
            
            <div>
              <div >
                <span id="currentViewDate" class="font-weight-bold" style="color: #344767; font-style: italic;"></span>
              </div>
            </div>

            <div>
              <div id="loadingViewDateContainer" style="display: none;">
                <div class="sk-chase">
                  <div class="sk-chase-dot"></div>
                  <div class="sk-chase-dot"></div>
                  <div class="sk-chase-dot"></div>
                  <div class="sk-chase-dot"></div>
                  <div class="sk-chase-dot"></div>
                  <div class="sk-chase-dot"></div>
                </div>
              </div>
              <div id="editViewDateContainer" style="position: relative" class="dropdown" data-bs-toggle="tooltip" data-bs-placement="top" title="Filtrar fecha">
                <i class="fas fa-filter ms-3 dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false" ></i>
                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="left: -20px;">
                  <li onclick="dateFilter(0)"><a class="dropdown-item" href="#">Hoy</a></li>
                  <li onclick="dateFilter(-1)"><a class="dropdown-item" href="#">Ayer</a></li>
                  <li onclick="dateFilter(30)"><a class="dropdown-item" href="#">Este mes</a></li>
                  <li onclick="dateFilter(-30)"><a class="dropdown-item" href="#">Mes anterior</a></li>
                  <li onclick="dateFilter('x')"><a class="dropdown-item" href="#">Personalizado</a></li>
                </ul>
                <div id="selectRangeDate" class="px-3 py-1" style="background-color: white; position: absolute; right: 0; top:55px; border-radius: 10px; box-shadow: 0 20px 27px 0 rgb(0 0 0 / 15%); display: none; z-index: 301111110;">
                  <div class="d-flex gap-2">  
                    <div>
                      <label for="date1">Desde</label> 
                      <input class="form-control" id="date1" type="date">
                    </div>
                    <div>
                      <label for="date2">Hasta</label> 
                      <input class="form-control"  id="date2" type="date">
                    </div>
                  </div>
                  <div class="mt-3  gap-2 d-flex justify-content-end align-items-center">
                    <button onclick="dateRange(1)" class="btn bg-gradient-secondary">Cancelar</button>
                    <button onclick="dateRange(2)" class="btn bg-gradient-primary">Enviar</button>
                  </div>
                </div>
              </div>
            </div>

            <i id="exportdashboardBtn" class="fas fa-download ms-3" data-toggle="tooltip" title="Exportar Dashboard" style="display: flex; align-items: center;"></i>
          </div>

          <div class="w-50 nav-wrapper position-relative end-0">
            <ul class="nav nav-pills nav-fill p-1 bg-transparent" role="tablist">
              <li onclick="$('.sectionDashboard').hide(); $('#sectionTablesDashboard').show()" class="nav-item">
                <a class="nav-link mb-0 px-0 py-1 active " data-bs-toggle="tab" href="javascript:;" role="tab" aria-selected="true">
                  <i class="fas fa-table"></i>
                  <span class="ms-1">Tablas</span>
                </a>
              </li>
              <li onclick="$('.sectionDashboard').hide(); $('#sectionGraphicsDashboard').show()" class="nav-item">
                <a class="nav-link mb-0 px-0 py-1 " data-bs-toggle="tab" href="javascript:;" role="tab" aria-selected="false">
                  <i class="fas fa-chart-bar"></i>
                  <span class="ms-1">Gr√°ficas</span>
                </a>
              </li>
              <li onclick="$('.sectionDashboard').hide(); $('#sectionMapsDashboard').show()" class="nav-item">
                <a class="nav-link mb-0 px-0 py-1 " data-bs-toggle="tab" href="javascript:;" role="tab" aria-selected="false">
                  <i class="fas fa-map-marked"></i>
                  <span class="ms-1">Mapas</span>
                </a>
              </li>
            </ul>
          </div>
        </div>

        <div id="sectionTablesDashboard" class="sectionDashboard">
          <div id="cardsContainerDashboard" class="d-flex">
            <div class="d-flex gap-3 justify-content-center px-1">
              <div class="card flex-fill " style="width: 25%; cursor: pointer">
                <div class=" h-100">
                  <div onclick="$('#tablesDashboard>div').hide(); $('#tableDocuments').show()" class="card-header p-3 pb-0 cardDocumentsHover">
                    <div class="d-flex justify-content-between">
                      <h6 class="mb-0">Ventas</h6>
                    </div>
                    <div class="text-center">
                      <h2 style="color: #03A9F4"> <span id="dsboardVentas">0</span></h2>
                      <h4>Total</h4>
                    </div> 
                  </div>
                  <div class="card-body p-3 py-1 d-flex justify-content-center align-items-center flex-column"  >
                    <div style="width: 100%; margin-top: 20px" >   
                      <div onclick="$('#tablesDashboard>div').hide(); $('#tableVisits').show()" class="border-top cardVisitedClientsHover" style="padding: 5px 10px">   
                        <p class="mt-1">Clientes visitados:  <span id="dsboardClientesVisitados" class="dashboardNumberStyle">0</span> </p>
                      </div>
                      <div onclick="$('#tablesDashboard>div').hide(); $('#tableProducts').show()" class="border-top cardProductClient" style="padding: 5px 10px">    
                        <p class="mt-1">Productos:  <span id="dsboardProducts" class="dashboardNumberStyle">0</span> </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
  
            <div onclick="$('#tablesDashboard>div').hide(); $('#tableRanking').show()" class="d-flex gap-3 justify-content-center px-1">
              <div class="card flex-fill  cardsButtons" style="width: 25%; cursor: pointer">
                <div class=" h-100">
                  <div class="card-header p-3 pb-0" style="background-color: transparent">
                    <div class="d-flex justify-content-between">
                      <h6 class="mb-0">Vendedores</h6>
                    </div>
                    <div class="text-center">
                      <h2 style="color: #388E3C"> <span id="dsboardVendedores">0</span></h2>
                      <h4>Activos</h4>
                    </div> 
                  </div>
                  <div class="card-body p-3 py-1 d-flex justify-content-center align-items-center flex-column"  >
                    <div style="width: 100%; margin-top: 20px" >   
                      <div class="border-top" style="padding: 5px 10px">   
                        <p class="mt-1">Registrados:  <span id="dsboardRegistered" class="dashboardNumberStyle">0</span> </p>
                      </div>
  
                      <div class="border-top" style="padding: 5px 10px">    
                        <p class="mt-1">Total ventas:  <span id="dsboardPromedioVentas" class="dashboardNumberStyle">0</span> </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
  
            <div onclick="$('#tablesDashboard>div').hide(); $('#tableDocuments').show()" class="d-flex gap-3 justify-content-center px-1">
              <div class="card flex-fill  cardsButtons" style="width: 25%; cursor: pointer">
                <div class=" h-100">
                  <div class="card-header p-3 pb-0" style="background-color: transparent">
                    <div class="d-flex justify-content-between">
                      <h6 class="mb-0">Documentos</h6>
                    </div>
                    <div class="text-center">
                      <h2 style="color: #FF9801"> <span id="dsboardDocuments">0</span></h2>
                      <h4>Cantidad</h4>
                    </div> 
                  </div>
                  <div class="card-body p-3 py-1 d-flex justify-content-center align-items-center flex-column"  >
                    <div style="width: 100%; margin-top: 20px" >   
                      <div class="border-top" style="padding: 5px 10px">   
                        <p class="mt-1">Pedidos:  <span id="dsboardPedidos" class="dashboardNumberStyle">0</span> </p>
                      </div>
                      <div class="border-top" style="padding: 5px 10px">    
                        <p class="mt-1">Facturas:  <span id="dsboardFacturas" class="dashboardNumberStyle">0</span> </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
  
          <div class="card mt-2 p-2">
            <div id="tablesDashboard">
  
              <div id="tableRanking">
                <h6 class="mb-0 ms-2">Ranking Vendedores</h6>
                <table id="tRanking">
                  <thead style="table-layout: fixed;">
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder"></th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Nombres</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Clientes</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Documentos</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Bodega</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Total</th>
                  </thead>
                  <tbody id="tBodyRanking"></tbody>
                </table>
              </div>
  
              <div id="tableDocuments" style="display: none;">
                <h6 class="mb-0 ms-2">Documentos</h6>
                <table id="tDocuments" >
                  <thead style="table-layout: fixed;">
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Vendedor</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Cliente</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Documento</th>
                    <th id="tableDocumentsPrice" class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Valor</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Fecha</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Tipo</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Nota</th>
                  </thead>
                  <tbody id="tBodyDocuments"></tbody>
                </table>
              </div>
  
              <div id="tableVisits" style="display: none;">
                <h6 class="mb-0 ms-2">Clientes Visitados</h6>
                <table id="tVisits">
                  <thead style="table-layout: fixed;">
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Nit</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Cliente</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Documentos</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Total</th>
                  </thead>
                  <tbody id="tBodyVisits"></tbody>
                </table>
              </div>
  
              <div id="tableProducts" style="display: none;">
                <h6 class="mb-0 ms-2">Productos</h6>
                <table id="tProducts">
                  <thead style="table-layout: fixed;">
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Producto</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Descripci√≥n</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Cantidad</th>
                  </thead>
                  <tbody id="tBodyProducts"></tbody>
                </table>
              </div>
  
            </div>
          </div>
        </div>

        <div id="sectionGraphicsDashboard" class="sectionDashboard" style="display: none;">

            <div class="card my-1 p-2">
              <h6 class="ms-1">Top 10 Vendedores</h6>
              <div style="height: 300px;" class="p-2">
                <canvas id="chartRanking" width="400" height="120"></canvas>
              </div>
            </div>

            <div class="d-flex gap-2">

              <div class="card my-1 p-2 w-50">
                <h6 class="ms-1">Top 10 Productos</h6>
                <div style="position: relative; height: 400px; width:400px; margin: 0 auto">
                  <canvas id="chartProducts" width="100%" height="100%"></canvas>
                </div>
              </div>
  
              <div class="card my-1 p-2 w-50">
                <h6 class="ms-1">Total Documentos</h6>
                <div style="position: relative; height: 400px; width:400px; margin: 0 auto">
                  <canvas id="chartTotalDocuments" width="100%" height="100%"></canvas>
                </div>
              </div>
            </div>

        </div>

        <div id="sectionMapsDashboard" class="sectionDashboard" style="display: none;">
          <div class="card p-3">

            <div class="navSectionsItemsAdmin mb-2 w-50" style="margin: auto;">
              <div id="navMapsSeller" onclick="" class="activeNavitemAdmin">Vendedores</div>
              <div id="navMapsSales" onclick="" >Ventas</div>
            </div>

            <div id="geolocalizacion_bb" style="width: 100%; height: 600px; position: relative; overflow: hidden;"></div>
          </div>
        </div>

      </div>

      <!-- Modales -->
      <div id="modalTablesDocuments" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document" style="min-width: 80vw !important;">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="modalTitleDocuments">a</h5>
              <div class="d-flex justify-content-center align-items-center gap-2">
                <button onclick="$('#modalTablesDocuments').modal('hide')" type="button" class="btn-close rounded-circle me-1" style="background-color: gray"></button>
              </div>
            </div>
            <div class="modal-body">
              
              <div id="tableDocumentsModal">
                <table id="tDocumentsModal">
                  <thead style="table-layout: fixed;">
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Vendedor</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Cliente</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Documento</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Valor</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Fecha</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Tipo</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Nota</th>
                  </thead>
                  <tbody id="tBodyDocumentsModal"></tbody>
                </table>
              </div>

            </div>
          </div>
        </div>
      </div>

      <div id="modalTablesClients" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document" style="min-width: 80vw !important;">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="modalTitleClients">a</h5>
              <div class="d-flex justify-content-center align-items-center gap-2">
                <button onclick="$('#modalTablesClients').modal('hide')" type="button" class="btn-close rounded-circle me-1" style="background-color: gray"></button>
              </div>
            </div>
            <div class="modal-body">
              
              <div id="tableClientsModal">
                <table id="tClientsModal">
                  <thead style="table-layout: fixed;">
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Nit</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Cliente</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Documentos</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Total</th>
                  </thead>
                  <tbody id="tBodyClientsModal"></tbody>
                </table>
              </div>

            </div>
          </div>
        </div>
      </div>


      <div id="modalTableDetailClient" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document" style="min-width: 80vw !important;">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="modalTitleDetailClient">a</h5>
              <div class="d-flex justify-content-center align-items-center gap-2">
                <button onclick="$('#modalTableDetailClient').modal('hide')" type="button" class="btn-close rounded-circle me-1" style="background-color: gray"></button>
              </div>
            </div>
            <div class="modal-body">
              
              <div id="tableClientDetailModal">
                <table id="tClientsdetailModal">
                  <thead style="table-layout: fixed;">
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Vendedor</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Documento</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Valor</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Fecha Pedido</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Fecha Sincronizaci√≥n</th>
                  </thead>
                  <tbody id="tBodyClientsDetailModal"></tbody>
                </table>
              </div>

            </div>
          </div>
        </div>
      </div>

      <div id="modalTableDetailOrder" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document" style="min-width: 80vw !important;">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="modalTitleTableDetailOrder">a</h5>
              <div class="d-flex justify-content-center align-items-center gap-2">
                <div id="mailDocument" class="me-2 d-flex"> <i class="fas fa-envelope" style="font-size: 26px; cursor: pointer;" data-toggle="tooltip" title="Enviar Correo del Documento" ></i> </div>
                <button onclick="$('#modalTableDetailOrder').modal('hide')" type="button" class="btn-close rounded-circle me-1" style="background-color: gray"></button>
              </div>
            </div>
            <div class="modal-body">
              
              <div id="tableDetailOrderModal">
                <table id="tDetailOrderModal">
                  <thead style="table-layout: fixed;">
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Producto</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Descripci√≥n</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Cantidad</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Precio</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Iva</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Desc. 1</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Desc. 2</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder">Total</th>
                  </thead>
                  <tbody id="tBodyDetailModal"></tbody>
                </table>
              </div>

            </div>
          </div>
        </div>
      </div>

      <!-- preloader -->
      <%- include('./partials/preloader.ejs') %> 
      
  </main>


  <!-- Scripts -->
  <script src="/js/core/popper.min.js"></script>
  <script src="/js/core/bootstrap.min.js"></script>
  <script src="/js/plugins/perfect-scrollbar.min.js"></script>
  <script src="/js/plugins/smooth-scrollbar.min.js"></script>
  <script src="/js/plugins/choices.min.js"></script>
  <script src="/js/soft-ui-dashboard.min.js?v=1.0.3"></script>
  <script src="/js/plugins/dragula/dragula.min.js"></script>
  <script src="/js/plugins/jkanban/jkanban.js"></script>
  <script src="/js/jquery-ui.min.js"></script>
  <script src="/js/plugins/datatables.js"></script>
  <script src="/js/plugins/chartjs.min.js"></script>
  <script src="/js/underscore-min.js"></script>
  <script src="/js/menu.js"></script>
  <script src="/js/sweetalert2.all.min.js"></script>

  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBTBRrWPJMw8oEnVWZATb0Xmr7hIeS99iE" async defer></script>

  <script>
    let startDateDashboard = new Date().toISOString().split("T")[0].replaceAll("-", "");
    let endDateDashboard = new Date().toISOString().split("T")[0].replaceAll("-", "");
    let dataDashboard;
    let dataSellers;
    let dataProducts;
    let personsCompany;
    let dataSellersVisits;

    let mapLoaded = false;

    const getData = (user) => {
      let userID = user || 0;
      fetch(`/dashboard/data/${startDateDashboard}/${endDateDashboard}/${userID}`)
      .then(res => res.json())
      .then(res => {

        dataDashboard = res[0];
        dataSellers = res[1];
        dataProducts = res[2];
        personsCompany = res[3].result.persons;
        dataSellersVisits = res[4];

        printDataReports(dataDashboard.result.report[0])

        // Tablas
        printTableRanking(dataDashboard.result.detail)
        printTableDocuments(dataSellers.result.report)
        printTablevisits(dataSellersVisits.result.report)
        printTableProducts(dataProducts.result.report)

        // Graficas
        printChartRanking();
        printChartProducts();
        printChartDocuments();

        // Mapas
        getDocumentsMap();
        if (!mapLoaded) { // Mapa de vendedores no se actualiza con el cambio de rango de fehcas
          getGeolocalisationData();
          mapLoaded = true;
        }

        $("#editViewDateContainer").show();
        $("#loadingViewDateContainer").hide();
      })
    };

    let getDocumentsSeller = (user, name) => {
      fetch(`/dashboard/reportSeller/${startDateDashboard}/${endDateDashboard}/${user}`)
      .then(res => res.json())
      .then(res => {
        if (!res.result.success) return
        
        printTableDocumentsModal(res.result.report);

        $("#modalTitleDocuments").html("Documentos realizados por "+name)
        $("#modalTablesDocuments").modal("show")
      })
    }

    let mapSalesInfo = null;
    let getDocumentsMap = () => { // documents = sale
      fetch(`/dashboard/reportSeller/${startDateDashboard}/${endDateDashboard}/0`)
      .then(res => res.json())
      .then(res => {
        if (!res.result.success) return

        mapSalesInfo = res.result.report

        if ($("#navMapsSales").hasClass("activeNavitemAdmin")){ // Actualizar marcadores si la opci√≥n de ventas est√° seleccionada
          clearMarkers();
          showMarkersSales(mapSalesInfo);
        }
      })
    }

    let getClientsSeller = (user, name) => {
      fetch(`/dashboard/clientsSeller/${startDateDashboard}/${endDateDashboard}/${user}`)
      .then(res => res.json())
      .then(res => {
        if (!res.result.success) return
        
        printTableClientsModal(res.result.report);

        $("#modalTitleClients").html("Clientes de "+name)
        $("#modalTablesClients").modal("show")
      })
    }

    let currentDocument = null;
    let currentClient = null;
    let getDocumentDetail = (pedido, name) => {
      currentDocument = pedido;
      currentClient = name;

      fetch(`/dashboard/detailOrder/${pedido}/P`)
      .then(res => res.json())
      .then(res => {
        if (!res.result.success) return
        
        printTableDetailOrderModal(res.result.report);

        $("#modalTitleTableDetailOrder").html(pedido +" - "+name)
        $("#modalTableDetailOrder").modal("show")
      })
    }

    let getDocumentClient = (nit, name) => { //TODO
      fetch(`/dashboard/detailClient/${startDateDashboard}/${endDateDashboard}/${nit}`)
      .then(res => res.json())
      .then(res => {
        if (!res.result.success) return
        
        printTableDetailDocumentClient(res.result.report);

        $("#modalTitleDetailClient").html(nit + (name == "-" ? ""  : " - "+name))
        // $("#modalTablesClients").modal("hide")
        $("#modalTableDetailClient").modal("show")
      })
    }

    const printDataReports = (data) => {
      $("#dsboardVentas").html(nvFormatCash(data.ventas).split(".")[0])
      $("#dsboardClientesVisitados").html(data.clientes)
      $("#dsboardProducts").html(numberWithCommas(data.productos))
      $("#dsboardVendedores").html(data.vendedores)
      $("#dsboardRegistered").html(data.registrados)
      $("#dsboardPromedioVentas").html(nvFormatCash(data.ventas).split(".")[0]) 
      $("#dsboardDocuments").html(data.documentos)
      $("#dsboardPedidos").html(data.pedidos)
      $("#dsboardFacturas").html(data.facturas)
    }

    let tblRanking;
    const printTableRanking = (data) => {
      data = _.sortBy(data, function(o) { return o.valor; }).reverse()

      try {
        tblRanking.destroy();
      } catch (error) {}
      $("#tBodyRanking").html("")

      for (let i = 0; i < data.length; i++) {
        let user = _.findWhere(personsCompany, {num_identification: data[i].nit});

        let element = `
          <tr>
            <td class="text-center">#${i+1}</td>
            <td class="text-center">
              <div class="d-flex gap-2 align-items-center">
                <div class="imgTableCont"><img src="${(user.photo ? "https://api.pedbox.co:8590"+user.photo : "https://app.pedbox.co/assets/images/avatars/profile.jpg")}" alt="" class="imgTable"></div>
                ${user.name_person}
              </div>  
            </td>
            <td class="text-center detailRow" onclick="getClientsSeller('${data[i].nit}', '${user.name_person}')">${data[i].clientes || "-"}</td>
            <td class="text-center detailRow" onclick="getDocumentsSeller('${data[i].nit}', '${user.name_person}')">${data[i].cantidad || "-"}</td>
            <td class="text-center">${data[i].bodega || "-"}</td>
            <td class="text-center">${nvFormatCash(data[i].valor).split(".")[0] || "-"}</td>
          </tr>
        `;
        $("#tBodyRanking").append(element)
      }

      tblRanking = new simpleDatatables.DataTable("#tRanking", {
        perPageSelect: false
      });

      $("#preloader").hide();
    }

    let tblDocuments;
    const printTableDocuments = (data) => {
      try {
        tblDocuments.destroy();
      } catch (error) {}
      $("#tBodyDocuments").html("")

      for (let i = 0; i < data.length; i++) {
        let user = _.findWhere(personsCompany, {num_identification: data[i].vendedor});

        let element = `
          <tr>
            <td class="text-center">${user.name_person}</td>
            <td class="text-center">${data[i].cliente || "-"}</td>
            <td onclick="getDocumentDetail('${data[i].documento}', '${data[i].cliente}')" class="text-center detailRow">${data[i].documento}</td>
            <td class="text-center">${nvFormatCash(data[i].valor).split(".")[0] || "-"}</td>
            <td class="text-center">${new Date(data[i].fecha).toLocaleString() || "-"}</td>
            <td class="text-center">${data[i].tipo_doc}</td>
            <td class="text-center">${data[i].nota || "-"}</td>
          </tr>
        `;
        $("#tBodyDocuments").append(element)
      }

      tblDocuments = new simpleDatatables.DataTable("#tDocuments", {
        perPageSelect: false
      });

      $("#tableDocumentsPrice").attr("style", "width: 15%")
    }

    let tblDocumentsModal;
    const printTableDocumentsModal = (data) => {
      try {
        tblDocumentsModal.destroy();
      } catch (error) {}
      $("#tBodyDocumentsModal").html("")

      for (let i = 0; i < data.length; i++) {
        let user = _.findWhere(personsCompany, {num_identification: data[i].vendedor});

        let element = `
          <tr>
            <td class="text-center">${user.name_person}</td>
            <td class="text-center">${data[i].cliente || "-"}</td>
            <td onclick="getDocumentDetail('${data[i].documento}', '${data[i].cliente}')"  class="text-center detailRow">${data[i].documento}</td>
            <td class="text-center">${data[i].valor || "-"}</td>
            <td class="text-center">${new Date(data[i].fecha).toLocaleString() || "-"}</td>
            <td class="text-center">${data[i].tipo_doc}</td>
            <td class="text-center">${data[i].nota || "-"}</td>
          </tr>
        `;
        $("#tBodyDocumentsModal").append(element)
      }

      tblDocumentsModal = new simpleDatatables.DataTable("#tDocumentsModal", {
        perPageSelect: false
      });
    };

    let tblClientsModal;
    const printTableClientsModal = (data) => { 
      try {
        tblClientsModal.destroy();
      } catch (error) {}
      $("#tBodyClientsModal").html("")

      for (let i = 0; i < data.length; i++) {
        let element = `
          <tr>
            <td class="text-center">${data[i].nit}</td>
            <td class="text-center">${data[i].cliente || "-"}</td>
            <td onclick="getDocumentClient('${data[i].nit}', '${data[i].cliente ? data[i].cliente : "-"}')" class="text-center detailRow">${data[i].documentos}</td>
            <td class="text-center">${nvFormatCash(data[i].total).split(".")[0]  || "-"}</td>
          </tr>
        `;
        $("#tBodyClientsModal").append(element)
      }

      tblClientsModal = new simpleDatatables.DataTable("#tClientsModal", {
        perPageSelect: false
      });
    };

    let tblDetailOrderModal;
    const printTableDetailOrderModal = (data) => { 
      try {
        tblDetailOrderModal.destroy();
      } catch (error) {}
      $("#tBodyDetailModal").html("")

      for (let i = 0; i < data.length; i++) {
        let el = `
          <tr>
            <td class="text-center">${data[i].producto}</td>
            <td class="text-center">${data[i].descripcion}</td>
            <td class="text-center">${data[i].cantidad || "-"}</td>
            <td class="text-center">${nvFormatCash(data[i].precio).split(".")[0]}</td>
            <td class="text-center">${data[i].porcentaje_iva}%</td>
            <td class="text-center">${data[i].desc1}%</td>
            <td class="text-center">${data[i].desc2}%</td>
            <td class="text-center">${nvFormatCash(data[i].total).split(".")[0]}</td>
          </tr>
        `;
        $("#tBodyDetailModal").append(el)
      }

      tblDetailOrderModal = new simpleDatatables.DataTable("#tDetailOrderModal", {
        perPageSelect: false
      });
    };

    let tblDetailClientDocument;
    const printTableDetailDocumentClient = (data) => { 
      try {
        tblDetailClientDocument.destroy();
      } catch (error) {}
      $("#tBodyClientsDetailModal").html("")

      for (let i = 0; i < data.length; i++) {
        let el = `
          <tr>
            <td class="text-center">${data[i].nombre_vendedor}</td>
            <td onclick="getDocumentDetail('${data[i].documento}', '${data[i].cliente}')" class="text-center detailRow">${data[i].documento}</td>
            <td class="text-center">${nvFormatCash(data[i].valor).split(".")[0]}</td>
            <td class="text-center">${data[i].fecha_pedido.split("T")[0]}</td>
            <td class="text-center">${data[i].fecha.split("T")[0]}</td>
          </tr>
        `;
        $("#tBodyClientsDetailModal").append(el)
      }

      tblDetailClientDocument = new simpleDatatables.DataTable("#tClientsdetailModal", {
        perPageSelect: false
      });
    };

    let tblvisits;
    const printTablevisits = (data) => {
      try {
        tblvisits.destroy();
      } catch (error) {}
      $("#tBodyVisits").html("")

      for (let i = 0; i < data.length; i++) {
        let element = `
          <tr>
            <td class="text-center">${data[i].nit || "-"}</td>
            <td class="text-center">${data[i].cliente || "-"}</td>
            <td onclick="getDocumentClient('${data[i].nit}', '${data[i].cliente ? data[i].cliente : "-"}')" class="text-center detailRow">${data[i].documentos  || "-"}</td>
            <td class="text-center">${nvFormatCash(data[i].total).split(".")[0] || "-"}</td>
          </tr>
        `;
        $("#tBodyVisits").append(element)
      }

      tblvisits = new simpleDatatables.DataTable("#tVisits", {
        perPageSelect: false
      });
    }

    let tblProducts;
    const printTableProducts = (data) => {
      try {
        tblProducts.destroy();
      } catch (error) {}
      $("#tBodyProducts").html("")

      for (let i = 0; i < data.length; i++) {
        let element = `
          <tr>
            <td class="text-center">${data[i].producto || "-"}</td>
            <td class="text-center">${data[i].descripcion || "-"}</td>
            <td class="text-center">${data[i].cantidad  || "-"}</td>
          </tr>
        `;
        $("#tBodyProducts").append(element)
      }

      tblProducts = new simpleDatatables.DataTable("#tProducts", {
        perPageSelect: false
      });
    };

    const dateFilter = function (date) {
      if (date == "x") { // Rango de fechas
        $("#selectRangeDate").fadeIn("fast");
        return
      }

      if (date == 0) { // Hoy
        startDateDashboard = new Date().toISOString().split("T")[0].replaceAll("-", "");
        endDateDashboard = new Date().toISOString().split("T")[0].replaceAll("-", "");
        
        $("#currentViewDate").html(nvFormatDate(new Date(), "mmmm DD del YYYY"));

        $("#editViewDateContainer").hide();
        $("#loadingViewDateContainer").show();
        return getData();
      }

      if (date == -1) { // Ayer
        s = new Date();
        s.setDate(s.getDate() - 1);

        $("#currentViewDate").html(nvFormatDate(s, "mmmm DD del YYYY"));

        s = s.toISOString().split("T")[0].replaceAll("-", "")

        startDateDashboard = s;
        endDateDashboard = s;
        
        $("#editViewDateContainer").hide();
        $("#loadingViewDateContainer").show();
        return getData();
      }

      if (date == 30) { // Este mes
        s = new Date();
        currentMonth = s.getMonth() + 1;
        firstDayMont = s.getFullYear() + "/" + (currentMonth < 10 ? "0"+currentMonth : currentMonth) + "/01";
        
        $("#currentViewDate").html(nvFormatDate(firstDayMont, "mmmm DD del YYYY")+ " - " + nvFormatDate(new Date(), "mmmm DD del YYYY"));

        startDateDashboard = firstDayMont.replaceAll("/", "");
        endDateDashboard = new Date().toISOString().split("T")[0].replaceAll("-", "");
    
        $("#editViewDateContainer").hide();
        $("#loadingViewDateContainer").show();
        return getData();
      }

      if (date == -30) { // Mes anterior
        s = new Date();
        let currentMonth = s.getMonth() + 1;
        let currentYear = s.getFullYear();

        if (currentMonth == 1) {
          currentMonth = 12;
          currentYear = currentYear - 1;
        } else {
          currentMonth = currentMonth - 1;
        }

        currentMonth = currentMonth < 10 ? "0"+currentMonth : currentMonth;

        startDateDashboard = currentYear + "" + currentMonth + "01";
        endDateDashboard = currentYear + "" + currentMonth + "31";

        let startDateDashboardF = currentYear + "/" + currentMonth + "/01";
        let endDateDashboardF = currentYear + "/" + currentMonth + "/31";

        $("#currentViewDate").html(nvFormatDate(startDateDashboardF, "mmmm DD del YYYY")+ " - " + nvFormatDate(endDateDashboardF, "mmmm DD del YYYY"));
        
        $("#editViewDateContainer").hide();
        $("#loadingViewDateContainer").show();
        return getData();
      }
    }

    const dateRange = function (x) {
      if (x == 1) {
        $("#selectRangeDate").fadeOut("fast");
      }
      if (x == 2) {
        let dateStart = $("#date1").val();
        let dateEnd = $("#date2").val();

        if (!dateStart || !dateEnd) {
          $("#selectRangeDate").fadeOut("fast");
          return Swal.fire({
            title: 'Seleccione rango de fechas antes de enviar',
            confirmButtonText: 'Continuar',
          })
        }

        startDateDashboard = new Date($("#date1").val()).toISOString().split("T")[0].replaceAll("-", "");
        endDateDashboard = new Date($("#date2").val()).toISOString().split("T")[0].replaceAll("-", "");

        $("#selectRangeDate").fadeOut("fast");

        $("#currentViewDate").html(nvFormatDate($("#date1").val(), "mmmm DD del YYYY")+ " - " + nvFormatDate($("#date2").val(), "mmmm DD del YYYY"));

        $("#editViewDateContainer").hide();
        $("#loadingViewDateContainer").show();

        return getData();
      }
    }

    let generatePastelColor = () => {
      let R = Math.floor((Math.random() * 127) + 127);
      let G = Math.floor((Math.random() * 127) + 127);
      let B = Math.floor((Math.random() * 127) + 127);
      
      let rgb = (R << 16) + (G << 8) + B;
      return `#${rgb.toString(16)}`;      
    }

    let charRanking;
    const printChartRanking = () => {
      let data = dataDashboard.result.detail;
          data = _.sortBy(data, function(o) { return o.valor; }).reverse();

      let usersLabels = [];
      let usersData = [];
      let colors = [];

      for (let i = 0; i < data.length; i++) {
        usersLabels.push(data[i].vendedor)
        usersData.push(data[i].valor)
        colors.push(generatePastelColor())
      }

      try { // Cuando se intenta crear una grafica que ya existe arroja error, en ese caso se actualizan los datos
        charRanking = new Chart(document.getElementById('chartRanking').getContext('2d'), {
          type: 'bar',
          data: {
            labels: usersLabels,
            datasets: [{
              label: 'Ranking Vendedores',
              data: usersData,
              backgroundColor: colors,
            }]
          }
        })
      } catch (error) {
        charRanking.data.labels = usersLabels;
        charRanking.data.datasets[0].data = usersData;
        charRanking.data.datasets[0].backgroundColor = colors;
        charRanking.update();
      }
    }

    let charProducts;
    const printChartProducts = () => {
      let data = dataProducts.result.report;

      let productLabel = [];
      let productData = [];
      let colors = [];

      for (let i = 0; i < 10; i++) {
        productLabel.push(data[i].descripcion)
        productData.push(data[i].cantidad)
        colors.push(generatePastelColor())
      }

      try {
        charProducts = new Chart(document.getElementById('chartProducts').getContext('2d'), {
          type: 'pie',
          data: {
            labels: productLabel,
            datasets: [{
              label: 'Ranking Productos',
              data: productData,
              backgroundColor: colors,
            }]
          },
          options: { plugins: { legend: { display: true, position: 'right' }}}
        })
      } catch (error) {
        charProducts.data.labels = productLabel;
        charProducts.data.datasets[0].data = productData;
        charProducts.data.datasets[0].backgroundColor = colors;
        charProducts.update();
      }
    };

    let chartDocuments
    const printChartDocuments = () => {
      let data = dataDashboard.result.detail;
          data = _.sortBy(data, function(o) { return o.valor; }).reverse();

      let usersLabels = [];
      let usersData = [];
      let colors = [];

      for (let i = 0; i < data.length; i++) {
        usersLabels.push(data[i].vendedor)
        usersData.push(data[i].valor)
        colors.push(generatePastelColor())
      }

      try {
        chartDocuments = new Chart(document.getElementById('chartTotalDocuments').getContext('2d'), {
          type: 'pie',
          data: {
            labels: usersLabels,
            datasets: [{
              label: 'Ranking Productos',
              data: usersData,
              backgroundColor: colors,
            }]
          },
          options: { plugins: { legend: {  display: true, position: 'right' } }
          }
        })
      } catch (error) {
        chartDocuments.data.labels = usersLabels;
        chartDocuments.data.datasets[0].data = usersData;
        chartDocuments.data.datasets[0].backgroundColor = colors;
        chartDocuments.update();
      }
    }
    
    let mapSellersInfo = null;
    const getGeolocalisationData = () => {
      let usersId = [];
      for (let i = 0; i < personsCompany.length; i++) {
        if (personsCompany[i].status == 1 && personsCompany[i].id_type_user == "2") {
          usersId.push(personsCompany[i].num_identification)
        }
      };

      fetch(`/dashboard/sellersMap/${usersId.toString()}`)
      .then(res => res.json())
      .then(res => {
        if (!res.result.success) return

        mapSellersInfo = res.result.persons;
        showMarkersSellers(mapSellersInfo);
      })
    }

    var map;
    var drawMap = function() {
      var styles = [{
        "stylers": [
          { "saturation": -100 },
          { "gamma": 1.07 }
        ]}
      ];
      // End Styles
      var mapa = new google.maps.LatLng(5.2445497,-72.4879592);
      var styledMap = new google.maps.StyledMapType(styles,{name: "Styled Map"});
      var mapOptions = {
        zoom: 6,
        center: mapa,
        mapTypeId: google.maps.MapTypeId.ROADMAP,
        mapTypeControlOptions: {
          mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'map_style']
        }
      }

      map = new google.maps.Map($("#geolocalizacion_bb")[0], mapOptions);
      map.mapTypes.set('map_style', styledMap);
      map.setMapTypeId('map_style');

      var currentPlace = null;
      var info = $('#placeDetails');
      infowindow = new google.maps.InfoWindow();
    };

    let markers = [];
    var showMarkersSellers = function(data) {
      markers = [];
      for (let i = 0; i < data.length; i++) {
        let detail = `
          <div class="d-flex flex-column justify-content-center">
            <h6 class="mb-0">Geolocalizaci√≥n de ${data[i].name_person}</h6>
            <span class="text-center">Ultimo registro: ${data[i].last_location || data[i].date_last_connection}</span>
            <span class="text-center"><a href="" style="pointer-events: none">Ver recorrido</a></span>
          </div>
        `;

        marker = new google.maps.Marker({
          position: new google.maps.LatLng(data[i].latitude, data[i].longitude),
          map: map,
          icon: "https://app.pedbox.co/assets/images/avatars/profile-maps.png",
        });
        markers.push(marker);
        bindInfoWindow(marker, map, detail);
      };
    };

    var showMarkersSales = function(data) {
      markers = [];
      for (let i = 0; i < data.length; i++) {
        if (!data[i].latitud || !data[i].longitud) continue

        let detail = `
          <div class="d-flex flex-column justify-content-center">
            <h6 class="mb-0">Vendedor ${data[i].nombre_vendedor} </h6>
            <label class="m-0">Documento: <span style="color: #6c757d">${data[i].documento} </span></label>
            <label class="m-0">Cliente: <span style="color: #6c757d">${data[i].cliente || " - "} </span></label>
            <label class="m-0">Tipo: <span style="color: #6c757d">${data[i].tipo_doc} </span></label>
            <label class="m-0">Valor: <span style="color: #6c757d">${nvFormatCash(data[i].valor)} </span></label>
            <label class="m-0">Fecha Pedido: <span style="color: #6c757d">${nvFormatDate(data[i].fecha_pedido, "mmmm DD del YYYY")} </span></label>
          </div>
        `;

        marker = new google.maps.Marker({
          position: new google.maps.LatLng(data[i].latitud, data[i].longitud),
          map: map,
          icon: "https://app.pedbox.co/assets/images/icons-maps/shopping-cart.png",
        });
        markers.push(marker);
        bindInfoWindow(marker, map, detail);
      };
    }

    var bindInfoWindow = function(marker, map, description) {
      google.maps.event.addListener(marker, 'click', function() {
        infowindow.setContent(description);
        infowindow.open(map, marker);
      });
    };

    var clearMarkers = function() {
      for (var i = 0; i < markers.length; i++ ) {
        markers[i].setMap(null);
      }
      markers = [];
    };

    $(".navSectionsItemsAdmin>div").on("click", function () {
      $(".navSectionsItemsAdmin>div").removeClass("activeNavitemAdmin")
      $(this).addClass("activeNavitemAdmin");

      clearMarkers();

      if ($(this).attr("id") == "navMapsSeller") {
        showMarkersSellers(mapSellersInfo);
      } else {
        showMarkersSales(mapSalesInfo)        
      }
    })

    $("#exportdashboardBtn").on("click", function () {
      window.open(`https://pedbox.co:8531/dashboardexportar?id_company=${session.user.id_company}&date_begin=${startDateDashboard}&date_end=${endDateDashboard}&user=0`);
    })

    $("#mailDocument").on("click", function () {
      Swal.fire({
        title: `¬øDesea enviar el correo del documento ${currentDocument} al cliente ${currentClient}?`,
        showDenyButton: true,
        confirmButtonText: 'Aceptar',
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`https://api.pedbox.co:8590/mail/order?path=orders/mail.order1&id_company=${session.user.id_company}&order=${currentDocument}`)
          .then(res => res.json())
          .then(res => {
            console.log(res)
          })
        }
      })
    })

    $(document).ready(function () {
      $('[data-toggle="tooltip"]').tooltip();
      $("#menuDashboard").addClass("activeNav");

      $("#date2").attr("max", new Date().toISOString().split("T")[0]); // Limit date to custom date range
      $("#currentViewDate").html(nvFormatDate(new Date(), "mmmm DD del YYYY"));

      getData();
      drawMap();
    })
  </script>

</body>
</html>