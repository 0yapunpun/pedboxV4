<!-- 
  Catalogo hecho para Grulla&Wellco (id_company 20) 
  La funcionalidad de esta vista es ligeramente diferente al catalogo original
-->

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <link rel="shortcut icon" type="image/x-icon" href="https://app.pedbox.co/assets/logos/logo_blanco.png"/>
  <title>Cat√°logo</title>

  <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet" />
  <link href="/css/nucleo-svg.css" rel="stylesheet" />
  <link href="/css/nucleo-icons.css" rel="stylesheet" />
  <link href="/css/nucleo-svg.css" rel="stylesheet" />
  <link id="pagestyle" href="/css/soft-ui-dashboard.css?v=1.0.3" rel="stylesheet" />
  <link rel="stylesheet" href="/css/jquery-ui.min.css">
  <link rel="stylesheet" href="/css/reports.css">
  <link rel="stylesheet" href="/css/splide.min.css">

  <script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.1.0/socket.io.js" integrity="sha512-+l9L4lMTFNy3dEglQpprf7jQBhQsQ3/WvOnjaN/+/L4i0jOstgScV0q2TjfvRF4V+ZePMDuZYIQtg5T4MKr+MQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <script src="/js/jquery.js"></script>
  <script src="/js/helpers.js"></script>

  <!-- Color Page -->
  <%- include('./partials/colors.ejs') %> 

  <style>
    .tags {
      padding: 0.55em 0.9em;
      font-size: 0.75em;
      font-weight: 700;
      line-height: 1;
      color: #fff;
      text-align: center;
      white-space: nowrap;
      vertical-align: baseline;
      border-radius: 0.45rem;
      transition: 0.5s;
      cursor: pointer;
    }
    .tags:hover {
      background-color: #8392ab;
    }
    #tagsContainer .closeTag{
      display: none;
    }
    #appliedFilters .tags{
      padding-left: 5px;
    }
    /* Libreria choice JS, Estilos para quitar padding indeseado del combobox */
    .choices{
      margin: 0;
      min-width: 150px;
    }
    .choices__list--dropdown {
      z-index: 1000;
    }
    .choices__list--dropdown .choices__item--selectable:after {
      display: none !important;
    }
    .choices__list--dropdown .choices__item--selectable {
      padding-right: 0 !important;
    }
    .choices__input{
      display: none !important;
    }

    .selectVer .choices__list--single {
      padding-left: 20%;
    }
    .selectOrdenar .choices__list--single {
      padding-left: 40%;
    }

    .iconsHover{
      width: 45px;
      height: 45px;
      border-radius: 50%;
      padding: 5px;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .iconsHover:hover{
      background-color: #e9ecef;
    }

    .sidebarDropMenu{
      margin: 5px;
    }

    .cardItemHover:hover{
      background-color: #e9ecef;
      transform: scale(1.05,1.05);
      transition: 0.8s;
    }

    #modalAddedToCart{
      position: fixed;
      width: 300px;
      min-height: 200px;
      top: 15%;
      right: 2%;
      background-color: white;
      border-radius: 1rem;
      box-shadow: 0 20px 27px 0 rgba(0, 0, 0, 20%);
      transition: 0.5s;
    }
    .alertsStyle{
      position: fixed; 
      color: white; 
      bottom: 0%;
      left: 50%;
    }
    .noSorter .dataTable-sorter::after{
      opacity: 0;
    }
    .noSorter .dataTable-sorter::before{
      opacity: 0;
    }
    .choices{
      width: 100% !important;
    }
    #productsContainer .card-text{
      text-align: center;
    }
    .iconsCatalog {
      animation: cssAnimation 0s 1s forwards;
      visibility: hidden;
    }
    @keyframes cssAnimation {
      to   { visibility: visible; }
    }

    .pagesList a{
      border-radius: 50%;
      width: 35px;
      height: 35px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .imgsDetailCaontainer>div{
      min-width: 100px;
      width: 100px;
      height: 100px;
      cursor: pointer;
    }
    .imgsDetailCaontainer img{
      max-width: 100%;
      max-height: 100%;
    }

    #img-zoom-effect {
      width: 250px;
      height: 250px;
      background: url('http://api.pedbox.co:7777/imagenes_catalogo/20/13001-1.jpg') no-repeat #FFF;
      box-shadow: 0 5px 10px -2px rgba(0,0,0,0.3);
      pointer-events: none;
      position: absolute;
      opacity: 0;
      border: 4px solid whitesmoke;
      z-index: 99;
      border-radius: 100%;
      display: block;
      transition: opacity .2s;
    }

    /* .js-image-zoom__zoomed-image{
      z-index: 3000;
      max-width: 200px;
      max-height: 200px;
    } */

    .sk-chase {
      width: 15px;
      height: 15px;
      position: relative;
      animation: sk-chase 2.5s infinite linear both;
    }
    .sk-chase-dot {
      width: 100%;
      height: 100%;
      position: absolute;
      left: 0;
      top: 0; 
      animation: sk-chase-dot 2.0s infinite ease-in-out both; 
    }
    .sk-chase-dot:before {
      content: '';
      display: block;
      width: 25%;
      height: 25%;
      background-color: black;
      border-radius: 100%;
      animation: sk-chase-dot-before 2.0s infinite ease-in-out both; 
    }
    .sk-chase-dot:nth-child(1) { animation-delay: -1.1s; }
    .sk-chase-dot:nth-child(2) { animation-delay: -1.0s; }
    .sk-chase-dot:nth-child(3) { animation-delay: -0.9s; }
    .sk-chase-dot:nth-child(4) { animation-delay: -0.8s; }
    .sk-chase-dot:nth-child(5) { animation-delay: -0.7s; }
    .sk-chase-dot:nth-child(6) { animation-delay: -0.6s; }
    .sk-chase-dot:nth-child(1):before { animation-delay: -1.1s; }
    .sk-chase-dot:nth-child(2):before { animation-delay: -1.0s; }
    .sk-chase-dot:nth-child(3):before { animation-delay: -0.9s; }
    .sk-chase-dot:nth-child(4):before { animation-delay: -0.8s; }
    .sk-chase-dot:nth-child(5):before { animation-delay: -0.7s; }
    .sk-chase-dot:nth-child(6):before { animation-delay: -0.6s; }

    @keyframes sk-chase {
      100% { transform: rotate(360deg); } 
    }

    @keyframes sk-chase-dot {
      80%, 100% { transform: rotate(360deg); } 
    }

    @keyframes sk-chase-dot-before {
      50% {
        transform: scale(0.4); 
      } 100%, 0% {
        transform: scale(1.0); 
      } 
    }

    .preloaderProductDetail{
      position: absolute; 
      width: 100%; 
      height: 100%; 
      border-radius: 1rem; 
      background-color: white;
      background-color: rgb(0,0, 0, 0.7)
    }
    .preloaderProductDetail .sk-chase-dot:before{
      background-color: white;
    }
    .preloaderProductDetail .sk-chase{
      width: 20px;
      height: 20px;
    }
    #paginator li{
      cursor: pointer;
    }
  </style>
</head>

<body class="g-sidenav-show bg-gray-100">

  <!-- Menu -->
  <%- include('./partials/menu.ejs') %> 

  <main class="main-content max-height-vh-100 h-100">

    <!-- Cabecera -->
    <%- include('./partials/header.ejs') %>

    <div class="container-fluid my-3 py-3">
      <div class="row mb-5">

        <div class="col-lg-12">
          <div class="card card-body" >
            <div class="row justify-content-center align-items-center">
              <div class="col-md-3" style="position: relative;">
                <input id="searchField" class="form-control" placeholder="Buscar..." style="padding-left: 30px;">
                <div style="position: absolute; top: 8px; left: 22px; cursor: pointer;" onclick="filterSearchField()">
                  <i class="fas fa-search" ></i>
                </div>
              </div>
              <div class="col-md-3 selectOrdenar" style="position: relative;">
                <select class="form-control" id="selectByPrice">
                  <option value="0" selected>Por Defecto</option>
                  <option value="1">Precio Menor</option>
                  <option value="2">Precio Mayor</option>
                </select>
                <span style="position: absolute; top: 15%; left: 10%"><h6>Ordenar:</h6></span>
              </div>
              <div class="col-md-3 selectVer" style="position: relative;">
                <select class="form-control" id="selectNumberRange">
                  <option value="9" selected>9</option>
                  <option value="15">15</option>
                  <option value="30">30</option>
                </select>
                <span style="position: absolute; top: 15%; left: 10%"><h6>Ver:</h6></span>
              </div>

              <div class="col-md-3 d-flex justify-content-end gap-3 iconsCatalog">

                <div class="d-flex justify-content-center align-items-center gap-5 mt-1" >
                  <div class=" icon icon-shape icon-sm bg-gradient-primary shadow text-center border-radius-lg selectView" style="cursor: pointer; position: relative;">
                    <div id="iconSelectView">
                      <i class="fas fa-table" style="font-size: 15px" title="vista en tabla"></i>
                    </div>
                  </div>
                </div>

                <div class="d-flex justify-content-center align-items-center gap-5 mt-1" >
                  <div>
                    <div class="icon icon-shape icon-sm bg-gradient-primary shadow text-center border-radius-lg" style="cursor: pointer; position: relative;" onclick='window.location.href = "/carrito-compras"'>
                      <i class="fas fa-shopping-cart" style="font-size: 15px" title="Carrito de compra"></i>
                      <div id="cartIndicator" class="badge badge-sm badge-circle badge-floating badge-primary border-white" style="position: absolute; bottom: -25%; border: solid; color: white; padding: 10px !important;"></div>
                    </div>
                  </div>
                </div>

                <div class="d-flex justify-content-center align-items-center gap-5 mt-1" >
                  <div id="iconCarritoFacturas">
                    <div class=" icon icon-shape icon-sm bg-gradient-primary shadow text-center border-radius-lg" style="cursor: pointer; position: relative;" onclick='window.location.href = "/carrito-facturas"'>
                      <i class="fas fa-dollar-sign" style="font-size: 15px" title="Carrito de Facturas"></i>
                      <div id="invoicesIndicator" class="badge badge-sm badge-circle badge-floating badge-primary border-white" style="position: absolute; bottom: -25%; border: solid; color: white; padding: 10px !important;"></div>
                    </div>
                  </div>
                </div>
              </div>

            </div>
          </div>
        </div>

        <div class="col-lg-3 mt-4 ">
          <div id="appliedFiltersContainer" class="card p-2  mb-4" style="display: none;">
            <div class="d-flex flex-column" style="overflow: hidden;"> 
              <h6>Filtros:</h6>
              <div id="appliedFilters">
              </div>
            </div>
          </div>
          <div id="collapseContainer" class="card p-3" style="min-height: 100px;"> 
            <!-- contenido dinamico -->
          </div>
          <div class="card p-2 mt-4" style="min-height: 150px;">
            <div id="tagsContainer" class="overflow-hidden">
              <!-- contenido dinamico -->
            </div>
          </div>
        </div>

        <!-- Vista catalogo -->
        <div class="col-lg-9 mt-lg-0 mt-4" id="catalogview" >
          <div id="productsContainer" class="d-flex flex-wrap justify-content-center gap-3 mt-4">
            <!-- Contenido dinamico -->
          </div>
        </div>

        <!-- Vista Tabla -->
        <div class="col-lg-9 mt-lg-0 mt-4" id="tableView" style="display: none;">
          <div class="card mt-4 p-3" id="tableContainer">

            <table style="table-layout: fixed; width:100%">
              <thead>
                <tr>
                  <td style="width:12%" class="imgCol text-uppercase text-secondary text-xxs text-center font-weight-bolder opacity-7 noSorter">Imagen</td>
                  <td class="productCol text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Producto</td>
                  <td class="atributesCol text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Atributos</td>
                  <td style="width: 10%" class="stockCol text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Stock</td>
                  <td class="text-uppercase text-secondary text-xxs text-center font-weight-bolder opacity-7 noSorter">A√±adir</td>
                </tr>
              </thead>
              <tbody id="tableBody"></tbody>
            </table>
            <!-- contenido dinamico -->
          </div>
        </div>

        <div id="paginator" class="d-flex justify-content-center mt-4">
          <nav class="dataTable-pagination w-50" style="position: relative; left: 13%">
            <ul class="dataTable-pagination-list d-flex justify-content-center consolepaginatorUl">
              <li class="pager" onclick="paginator('res')"><a  data-page="1" >‚Äπ</a></li>
                <!-- contenido dinamico -->
              <li class="pager" id="paginatorInsertBefore" onclick="paginator('sum')"><a  data-page="2">‚Ä∫</a></li>
            </ul>
          </nav>
        </div>

        <div class="d-flex">
          <i id="repairCatalog" class="fas fa-hammer" style="margin-left: auto; cursor: pointer;" data-bs-toggle="tooltip" data-bs-placement="top" title="¬øNo puede ver el c√°talogo?" ></i>
        </div>
      </div>
    </div>



    <!-- Modal detalle  -->
    <div class="modal fade" id="modalDetalle">
      <div class="modal-dialog modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <div class="w-100 d-flex justify-content-between align-items-center">
              <h5 class="modal-title" id="exampleModalLabel">Detalle</h5>
              <div id="loaderImagesDetailProduct" style="display: none;">
                <div class="d-flex justify-content-center">
                  <div class="sk-chase">
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                    <div class="sk-chase-dot"></div>
                  </div>
                </div>
                <span style="color: black; font-size: 12px;" class="mt-1">Cargando Im√°genes ...</span>
              </div>
              <button type="button" class="btn-close m-0" data-bs-dismiss="modal" aria-label="Close" style="background-color: gray; border-radius: 50%;"></button>
            </div>
          </div>
          <div class="modal-body">
            <div class="w-100 d-flex flex-column">

              <div class="d-flex">
                <div class="w-50 d-flex flex-column justify-content-between">
                  <div id="img-zoomer-box" style="max-height: 300px">

                    <img id="modalDetalleImg" src="https://cdn.pixabay.com/photo/2020/03/21/19/27/sea-4955005_960_720.jpg" alt="" style="max-width: 100%; max-height: 100%;">

                    <!-- <img id="modalDetalleImg" src="https://upload.wikimedia.org/wikipedia/commons/d/da/Imagen_no_disponible.svg" alt="" style="max-width: 100%; max-height: 100%;"> -->

                  </div>
  
                </div>
                <div class="w-50 p-5 pt-1 pe-1 pb-2">
                  <div>
                    <div>
                      <h6 id="modalDetalleN">a</h6>
                    </div>
                    <div>
                      <h5 id="modalDetalleP">$ 0,0</h5>
                    </div>
  
                    <div class="d-flex align-items-center justify-content-between gap-1">
                      <div>
                        <label for="">Talla</label>
                        <select name="" id="selectSizeProduct" class="form-control">
                          <option value="-1" selected>Seleccionar</option>
                        </select>
                      </div>
                      <div>
                        <label for="">Color</label>
                        <select name="" id="selectColorProduct" class="form-control">
                          <option value="-1" selected>Seleccionar</option>
                        </select>
                      </div>
                      <div style="width: 33%;">
                        <label for="">Cantidad</label>
                        <input class="form-control" type="number" name="" id="numberProductsD" minlength="1" value="1" style="padding-left: 50px;">
                      </div>
                    </div>
  
                    <div class="mt-3 d-flex flex-column w-100 align-items-center justify-content-center">
                      <button onclick="addProductCart()" id="idProductD" class="btn btn-primary m-0 d-flex align-items-center" style="font-size: 10px; height: 39px;" codigo="">
                        <i class="fas fa-shopping-cart me-1" style="font-size: 20px" title="Carrito de compra" aria-hidden="true"></i><span class="sr-only">Carrito de compra</span>
                        AGREGAR AL CARRITO
                      </button>
                    </div>
  
                    <hr>
                    <div id="datilProductItems">
                      <div class="d-flex gap-2">
                        <h6 class="m-0" style="text-transform: capitalize;">grupo: </h6>
                        <h6 class="text-secondary text-break" id="modalDetalleG">MOTOR</h6>
                      </div>
                    
                      <div class="d-flex gap-2">
                        <h6 class="m-0" style="text-transform: capitalize;">subgrupo: </h6>
                        <h6 class="text-secondary text-break" id="modalDetalleG">CADENAS/GUIAS DE CADENA</h6>
                      </div>
                    
                      <div class="d-flex gap-2">
                        <h6 class="m-0" style="text-transform: capitalize;">linea: </h6>
                        <h6 class="text-secondary text-break" id="modalDetalleG">MAXTOP</h6>
                      </div>
                    
                      <div class="d-flex gap-2">
                        <h6 class="m-0" style="text-transform: capitalize;">modelo: </h6>
                        <h6 class="text-secondary text-break" id="modalDetalleG">LUV - </h6>
                      </div>
                    
                      <div class="d-flex gap-2">
                        <h6 class="m-0" style="text-transform: capitalize;">marca: </h6>
                        <h6 class="text-secondary text-break" id="modalDetalleG">CHEVROLET - </h6>
                      </div>
                    </div>
                    <div class="text-end mt-4" style=" font-style: italic;">
                      <a class="btn btn-primary mb-0" href="#" onclick='window.location.href = "/carrito-compras"'>Ver carrito</a>
                    </div>
                  </div>
                </div>

              </div>

              <hr class="horizontal dark my-1">
              <div class="splide my-3" aria-label="splideImages">
                <div class="splide__track">
                  <div id="imgsDetailCaontainer" class="imgsDetailCaontainer d-flex gap-2 justify-content-center mt-2 splide__list">
                    <!-- <div>
                      <img src="https://upload.wikimedia.org/wikipedia/commons/d/da/Imagen_no_disponible.svg" alt="">
                    </div> -->
                  </div>
                </div>
              </div>

            
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- modal productos agregados -->
    <div id="modalAddedToCart" class="border modalAddedToCart" style="display: none;">
      <div class="d-flex flex-column p-2 text-center">
        <h6 style="margin: 5px;">Reci√©n agregados a tu carrito de compras</h5>
        <hr>
        <div id="addedToCartItems" style="max-height: 280px; overflow-y: scroll; overflow-x: hidden"> </div>
        <hr class="mb-0">
        <div class="d-flex flex-column p-3" style="font-size: 13px;">
          <button class="btn btn-primary" style="margin: 3px; padding: 5px;" onclick='window.location.href = "/carrito-compras"'>Ver Carrito</button>
          <a href="#" onclick="$('#modalAddedToCart').css('display', 'none')" >Seguir Comprando</a>
        </div>
      </div>
    </div>

    <!-- preloader -->
    <%- include('./partials/preloader.ejs') %> 

  </main>

  <!-- Scripts -->
  <script src="/js/core/popper.min.js"></script>
  <script src="/js/core/bootstrap.min.js"></script>
  <script src="/js/plugins/perfect-scrollbar.min.js"></script>
  <script src="/js/plugins/smooth-scrollbar.min.js"></script>
  <script src="/js/plugins/choices.min.js"></script>
  <script src="/js/soft-ui-dashboard.min.js?v=1.0.3"></script>
  <script src="/js/plugins/dragula/dragula.min.js"></script>
  <script src="/js/plugins/jkanban/jkanban.js"></script>
  <script src="/js/jquery-ui.min.js"></script>
  <script src="/js/plugins/datatables.js"></script>
  <script src="/js/plugins/chartjs.min.js"></script>
  <script src="/js/underscore-min.js"></script>
  <script src="/js/menu.js"></script>
  <script src="/js/splide.min.js"></script>
  <script src="/js/sweetalert2.all.min.js"></script>
  <script src="/js/plugins/jquery.zoom.min.js"></script>

  <script>
    let cartName = "storeCart" + session.user.id;
    let cartInvoiceName = "storeInvoice" + session.user.id;
    let catalogName = "storeCatalog" + session.user.id;
    let currentView = "tarjetas";

    let filters = ["grupo","subgrupo","linea","modelo","marca"]; //Default filterts
    
    let hasCustomFilters = session.user.permission.map(e => e.code).lastIndexOf("8050_MANEJA_FILTROS_DINAMICOS");
    let otherFilters = session.user.permission.map(e => e.code).lastIndexOf("8045_SHOW_OTHER_RELATED_FILTERS");

    let dataProductsComplete;
    let dataProductsPrint ;
    let dataSidebar = {};
    let dataSidebarMaster = {};
    let dataTagsObjectName = "Sectores";

    let colorsProducts;
    let currentProductDetail = null;


    const choicesPrice = new Choices($('#selectByPrice')[0]);
    const choicesItems = new Choices($('#selectNumberRange')[0]);
    
    // *** Events Bind 
    // Tags
    $(document).on('click','#tagsContainer .tags',function(){
      $("#appliedFiltersContainer").show("fast");
      $("#tagsContainer").parent().hide("fast");

      tagText = $(this).text().trim()

      filterTags(tagText);
      filterCollapse(dataTagsObjectName, tagText);
    });

    $(document).on('click','#appliedFilters .removeFilterTag',function(){
      $(this).parent().remove();
      
      if($('#appliedFilters').children().length == 0){
        $("#tagsContainer").parent().show("fast");
        $("#appliedFiltersContainer").hide();
        dataProductsPrint = dataProductsComplete;
        selectView(0, 8)
        printPaginator();
        getAttributesCatalog();
      } else {
        getSelectedFilters()
        selectView(0, 8)
        printPaginator();
      }
    });

    // Buscador
    $(document).on("keyup", "#searchField", function (e) {
      valueFilter = $("#searchField").val();    

      if (e.which == 13) {
        filterSearchField()
      };

      if (valueFilter.length == 0) {
        filterSearchField()
      };
    })

    // Collapse 
    $(document).on("click", ".collapseProduct", function (e) {
      $("#tagsContainer").parent().fadeOut("fast");

      let key = $(this).attr("value");
      let value = $(this).find("p").text();

      filterCollapse(key, value);
    })

    // Modales
    $(document).on("click", ".productCard", async function (e) {
      appendPreloaderProduct($(this))

      $("#modalDetalleT").html("");
      $("#numberProductsD").val(1);
      $("#selectSizeProduct").val(-1);
      $("#selectColorProduct").val(-1);

      let obj = JSON.parse($(this).attr("data-object"))

      currentProductDetail = obj;

      let img = obj.imagen || obj.image;
      let name = obj.descripcion || obj.description;
      let price = obj.format_precio;
      let codigo = obj.codep || obj.code;

      $("#imgsDetailCaontainer").html("")
      if (obj.image_array) {

        let imagesIdString = obj.image_array;
        if (obj.image_array.indexOf("[") != -1) { // I know this code it's shit 
          imagesIdString = obj.image_array.slice(1, -1)
        }

        let responseService = await fetch("/catalogo/imagesAttachment/"+imagesIdString); 
            responseService = await responseService.json();
          
        for (let i = 0; i < responseService.result.length; i++) {
          let el = `
            <div class="splide__slide">
              <img src="${responseService.result[i]}" alt="">
            </div>
          `;
          $("#imgsDetailCaontainer").append(el)
        }

        var splide = new Splide( '.splide', {
          type   : 'loop',
          perPage: 3,
          rewind: false,
          focus  : 'center',
          pagination: false,
        } );

        splide.mount();
      }

      $("#datilProductItems").html("")
      for (const key in dataSidebarMaster) {
        if (obj[key] != "") {
          if (key == "Color" || key == "Talla") { continue }
          let element = `
            <div class="d-flex gap-2">
              <h6 class="m-0" style="text-transform: capitalize;">${key.replace("_", " ").replace("x002F_", " ")}: </h6>
              <h6 class="text-secondary text-break" id="modalDetalleG">${(obj[key]) || " -"}</h6>
            </div>
          `;
          $("#datilProductItems").append(element)
        }
      }

      $("#modalDetalleImg").attr("src", img)
      $("#img-zoom-effect").attr("style", `background: url('${img}') no-repeat #FFF;`)
      $("#modalDetalleN").text(name)
      $("#modalDetalleP").text(price)

      $("#idProductD").attr("codigo", codigo)

      let codeProduct = $(this).attr("codigo")
      getProductDetail(codeProduct)

      $("#modalDetalle").modal("show")

      $(this).find(".preloaderProductDetail").fadeOut().remove();

      $('#img-zoomer-box').zoom();
    })

    $(document).on('click',function(e){
      if (e.target.className != 'modalAddedToCart' ) {
        $("#modalAddedToCart").css("display", "none");
      }
    }); 

    // Paginador
    $(document).on("click", ".addCart", function (e) {
      e.stopPropagation();
      let idProduct = $(this).attr("value");
      addProductCart(idProduct);
    })

    // Filtros
    $(document).on('click','.pagesList',function(){
      $(".pagesList").removeClass("active")
      $(this).addClass("active")
    });

    $(document).on('change','#selectByPrice',function(){
      sortByPrice($(this).val())
    });

    $(document).on('change','#selectNumberRange',function(){
      printPaginator();
      printProducts(0, Number($(this).val()) - 1)
    });

    $(document).on("click", ".selectView", function () {
      $("#preloader").show();

      setTimeout(() => {
        if (currentView == "tarjetas") {
          $("#catalogview").hide();
          $(".selectVer").css("visibility", "hidden")
          $("#tableView").show();
            
          printProductsTable(0, 8);
          printFilteredPaginator(0)
          // loadTable(dataProductsPrint)
          currentView = "tabla";
          setTimeout(() => {
            $("#iconSelectView").html('<i class="fas fa-tag" style="font-size: 15px" title="vista en Tarjetas"></i>')
          }, 200);
          return;
        }
        
        if (currentView == "tabla") {
          $("#tableView").hide();
          $(".selectVer").css("visibility", "inherit")
          $("#catalogview").show();
          
          printProducts(0, 8);
          printFilteredPaginator(0)
          currentView = "tarjetas";
          setTimeout(() => {
            $("#iconSelectView").html('<i class="fas fa-table" style="font-size: 15px" title="vista en tabla"></i>')
          }, 200);
          return;
        }
      }, 100);
    });

    $(document).on("click", ".addProductTableView", function () {
      let codigo = $(this).attr("value");
      let amount = ($(this).siblings(".inputAmount").val() ? Number($(this).siblings(".inputAmount").val()) : 1);
      addProductCart(codigo, amount)
    })

    // Im√°genes Secundarias
    $(document).on("click", ".imgsDetailCaontainer img", function () {
      $("#modalDetalleImg").attr("src", $(this).attr("src"))
      $("#img-zoom-effect").attr("style", `background: url('${$(this).attr("src")}') no-repeat #FFF;`)
      $('#img-zoomer-box').zoom();
    })

    // Paginador
    $(document).on("change", "#selectColorProduct",  async function (e) {
      let codeColor = $("#selectColorProduct option:selected").val();
      let subsStringProduct = currentProductDetail.codep || currentProductDetail.code;

      $("#loaderImagesDetailProduct").show()

      if (codeColor == -1) { return }

      fetch(`/catalogo/imagesItemsByCodeColor/${subsStringProduct}/${codeColor}`)
      .then(response => response.json())
      .then(data => {
        if (data) {
          printImagesFromArray(data)
        } else {
          $("#loaderImagesDetailProduct").hide()
        }
      }) 
      .catch(error => $("#loaderImagesDetailProduct").hide());
    });

    //  *** Funciones
    const printImagesFromArray = async (data) => {
      let imagesIdString = data.image_array;
      if (data.image_array.indexOf("[") != -1) { // I know this code it's shit 
        imagesIdString = data.image_array.slice(1, -1)
      }

      let responseService = await fetch("/catalogo/imagesAttachment/"+imagesIdString); 
          responseService = await responseService.json();

      $("#imgsDetailCaontainer").html("")
      for (let i = 0; i < responseService.result.length; i++) {
        let el = `
          <div class="splide__slide">
            <img src="${responseService.result[i]}" alt="">
          </div>
        `;
        $("#imgsDetailCaontainer").append(el)
      }

      var splide = new Splide( '.splide', {
        type   : 'loop',
        perPage: 3,
        rewind: false,
        focus  : 'center',
        pagination: false,
      } );

      splide.mount();

      $("#modalDetalleImg").attr("src", data.image)
      $("#img-zoom-effect").attr("style", `background: url('${data.image}') no-repeat #FFF;`)

      $("#loaderImagesDetailProduct").hide()
    }

    const printTags = () => {
      let groups = Object.keys(dataSidebar[dataTagsObjectName])

      $("#tagsContainer").html("")
      for (let i = 0; i < groups.length; i++) {
        let element = `
          <div class="badge tags choices-dark m-1 is-highlighted" key="grupo" value="${groups[i]}">
            <div style="display: inline" > ${groups[i]} </div> 
            <div class="removeFilterTag" style="display: inline" > <i class="fas fa-times ms-1 closeTag"></i> </div> 
          </div>
        `;
        $("#tagsContainer").append(element)
      }
    }

    function isPositiveInteger(str) {
      if (typeof str !== 'string') {
        return false;
      }

      const num = Number(str);

      if (Number.isInteger(num) && num > 0) {
        return true;
      }

      return false;
    }

    // Calcular la cantidad de elementos en el filtro
    const filterCollapseData = () => {
      dataSidebar = JSON.parse(JSON.stringify(dataSidebarMaster));

      for (let o = 0; o < dataProductsPrint.length; o++) {
        let data = dataProductsPrint[o];

        for (const key in dataSidebar) {
          if (key == "Color" || key == "Talla") {
            if (key == "Color") {
              for (let i = 0; i < data.color_array.length; i++) {
                let colorObj = _.findWhere(colorsProducts, {cod_color: data.color_array[i]});
                if (colorObj == undefined) {continue}

                if (!(colorObj.color in dataSidebar[key])) {
                  dataSidebar[key][colorObj.color] = 1;
                }
              }
            }
            if (key == "Talla") {
              for (let i = 0; i < data.talla_array.length; i++) {
                if (!(data.talla_array[i] in dataSidebar[key])) {
                  if (isPositiveInteger(data.talla_array[i])) { // Evitar tallas que no sean n√∫meros
                    if (Number(data.talla_array[i]) > 21 && Number(data.talla_array[i]) < 47) { // Evitar tallas fuera del rango
                      dataSidebar[key][data.talla_array[i]] = 1;
                    }
                  }
                }
              }
            }
            continue
          }
          
          if (data[key] != "" && data[key] != undefined) {
            if (data[key] in dataSidebar[key]) {
              dataSidebar[key][data[key]] = dataSidebar[key][data[key]] + 1;
            } else {
              dataSidebar[key][data[key]] = 1;
            }
          }
        }
        
      }

      printCollapse();
      printTags();
    }

    const printCollapse = () => {
      $("#collapseContainer").html("");
      let dataSidebarElements = Object.keys(dataSidebar)
      for (let i = 0; i < dataSidebarElements.length; i++) {
        let objLength = Object.keys(dataSidebar[dataSidebarElements[i]]).length;
 
        let element = `
          <div>
            <button class="d-flex w-100 justify-content-between border-0 p-0 mb-2 bg-transparent collapseIndicator" data-bs-toggle="collapse" href="#collapse${dataSidebarElements[i]}" role="button" aria-expanded="false">
              <h6 class="m-0" style="text-transform: capitalize"> ${dataSidebarElements[i].replace("_", " ").replace("x002F_", " ")} (${objLength})</h6>
              <div> <i class="fas fa-angle-left collapseAnimation2"></i> </div>
            </button>
            <div class="collapse p-0 rounded" id="collapse${dataSidebarElements[i]}"></div>
            <hr class="horizontal dark sidebarDropMenu">
          </div>
        `;
        if (objLength) {
          $("#collapseContainer").append(element)
        }

        let collapseElements = dataSidebar[dataSidebarElements[i]]
        for (const key in collapseElements) {
          let elementCollapse = `
            <div class="collapseProduct d-flex justify-content-between align-items-center ms-1" style="cursor: pointer" value="${dataSidebarElements[i]}">
              <p class="m-0 font-weight-bold" style="font-size: 14px; word-break: break-all;">${key} </p>
            </div>
          `;
          $(`#collapse${dataSidebarElements[i]}`).append(elementCollapse);
        }
      };
      fixOrderCollapse();
    }

    const printProducts = (nStart, nEnd)  => {
      let dataPaginated = dataProductsPrint.slice(nStart, nEnd + 1);

      $("#productsContainer").html("")
      for (let i = 0; i < dataPaginated.length; i++) {
        let element = `
          <div class="card cardItemHover productCard" style="width: 31%; position: relative" codigo="${dataPaginated[i].codep || dataPaginated[i].code}" name="${dataPaginated[i].descripcion}" price="${dataPaginated[i].format_precio}" marca="${dataPaginated[i].marca}" grupo="${dataPaginated[i].grupo}" subgrupo="${dataPaginated[i].sub_grupo}" modelo="${dataPaginated[i].modelo_moto}" talla="${dataPaginated[i].talla}" img="${dataPaginated[i].imagen}" data-object='${JSON.stringify(dataPaginated[i])}'>
            <div style="width: 100%; height: 50%; min-height: 200px; max-height: 200px"><img class="card-img-top" src="${(dataPaginated[i].imagen ? dataPaginated[i].imagen : dataPaginated[i].image)}" alt="" onerror="this.onerror=null; this.src='https://upload.wikimedia.org/wikipedia/commons/d/da/Imagen_no_disponible.svg'" style="max-width: 100%; max-height: 100%; object-fit: scale-down"></div>
            <div class="card-body pb-0 px-1 pt-2">
              <ul class="list-group list-group-flush d-flex h-100" >
                <li class="list-group-item flex-fill p-0 pb-2 ps-2 bg-transparent d-flex flex-column justify-content-between" >
                  <h6 class="card-title "><span style="font-weight: 400"> ${dataPaginated[i].codep || dataPaginated[i].code} </span>- ${dataPaginated[i].description}</h6>
                  <p class="card-text"> ${dataPaginated[i].format_precio || "<span style='font-style: italic'>Precio no disponible</span>"}</p>
                </li>
                <li class="list-group-item d-flex justify-content-between mx-1 my-1 bg-transparent">
                  <div class="d-flex align-items-center justify-content-center w-100" style="cursor: pointer; font-size: 13px" value="${dataPaginated[i].codigo}">
                    <i class="fas fa-shopping-cart me-1" style="font-size: 18px"></i>
                    Seleccionar Opciones 
                  </div>
                </li>
              </ul>
            </div>
          </div>
        `;
        $("#productsContainer").append(element)
      }

      if (dataPaginated.length === 0) {
        $("#productsContainer").html("<h6>No hay resultados para la busqueda</h6>")
      }

      $("#preloader").hide();
    };

    const appendPreloaderProduct = (productCard) => {
      let el = `
        <div class="preloaderProductDetail">
          <div class="d-flex justify-content-center align-items-center flex-column h-100">
            <div class="sk-chase">
              <div class="sk-chase-dot"></div>
              <div class="sk-chase-dot"></div>
              <div class="sk-chase-dot"></div>
              <div class="sk-chase-dot"></div>
              <div class="sk-chase-dot"></div>
              <div class="sk-chase-dot"></div>
            </div>
            <span class="mt-1" style="color: white">Cargando detalle</span>
          </div>
        </div>
      `;

      $(productCard).append(el)
    }

    // Vista Clasica
    const printProductsTable = (nStart, nEnd)  => {
      let dataPaginated = dataProductsPrint.slice(nStart, nEnd + 1);
      let body = dataPaginated;

      $("#tableBody").html("")
      let tableContent = "";
      for(let i = 0; i < body.length; i++){
        tableContent+= '<tr>';
        tableContent+= `<td class="text-center" style="cursor: pointer">
                          <div style="width: 60px; height: 60px"> <img class="card-img-top" src="${body[i].imagen}" alt="" onerror="this.onerror=null; this.src='https://upload.wikimedia.org/wikipedia/commons/d/da/Imagen_no_disponible.svg'" ></div>
                        </td>`;
        tableContent+= `<td style="font-size: 13px">
                          <div><strong >C√≥digo: </strong>${body[i].codigo}</div>
                          <div><strong >Descripci√≥n: </strong>${body[i].descripcion}</div>
                        </td>`;
        tableContent+= `<td style="font-size: 13px">
                          <div><strong >Marca: </strong>${body[i].marca}</div>
                          <div><strong >Grupo: </strong>${body[i].grupo}</div>
                          <div><strong >Subgrupo: </strong>${body[i].sub_grupo}</div>
                          ${(body[i].modelo ? '<div><strong >Modelo: </strong>'+body[i].modelo+'</div>': "")}
                          ${(body[i].tipo_llanta ? '<div><strong >Tipo LLanta: </strong>'+body[i].tipo_llanta+'</div>': "")}
                          ${(body[i].anchollanta ? '<div><strong >Ancho Llanta: </strong>'+body[i].anchollanta+'</div>': "")}
                          ${(body[i].perfil_llanta ? '<div><strong >Perfil Llanta: </strong>'+body[i].perfil_llanta+'</div>': "")}
                          ${(body[i].rin_llanta ? '<div><strong >Rin Llanta: </strong>'+body[i].rin_llanta+'</div>': "")}
                          ${(body[i].talla ? '<div><strong >Talla: </strong>'+body[i].talla+'</div>': "")}
                          ${(body[i].base ? '<div><strong >Base: </strong>'+body[i].base+'</div>': "")}
                        </td>`;
        tableContent+= `<td class="text-center ">${body[i].stock}</td>`;
        tableContent+= `<td>
                          <div class="d-flex align-items-center justify-content-center gap-1">
                            <input type="number" class="form-control inputAmount" id="" style="width: 70px" min="1">
                            <i class="fas fa-plus addProductTableView" style="cursor: pointer; margin-left: 5px" value="${body[i].codigo}"></i>
                          </div>
                        </td>`;
        tableContent+= '</tr>';
      };
      $("#tableBody").append(tableContent);
        $(".productCol").css("width", "30%")

      if (dataPaginated.length === 0) {
        $("#tableContainer").html("<h6>No hay resultados para la busqueda</h6>")
      }
      $("#preloader").hide();
    };

    let listItems = []
    const printPaginator = () => {
      let productsViewAmount = $("#selectNumberRange").val();
      let paginatorLenght = Math.ceil(dataProductsPrint.length / productsViewAmount);
      let nStart, nEnd;
      listItems = [];

      $(".pagesList").remove();
      for (let i = 1; i <= paginatorLenght; i++) {
        nEnd = productsViewAmount*i -1 ;
        nStart = productsViewAmount*i - productsViewAmount ;
        let element = `
          <li class="pagesList" onclick="printFilteredPaginator(${i - 1})"><a data-page="${i}" onclick="onSelectPage(${nStart}, ${nEnd})"> ${i}</a></li>
        `;
        listItems.push(element);
      };
      printFilteredPaginator(0);
    };

    const printFilteredPaginator = (actual) => {
      $(".pagesList").remove();
      for (let i = actual - 1; i < actual+5; i++) {
        $(listItems[i]).insertBefore($("#paginatorInsertBefore"))
      }
      let pagesList = $(".pagesList");
      if (actual == 0) {
        setTimeout(() => {
          $(pagesList[0]).toggleClass("active")
        }, 300);
      } else {
        setTimeout(() => {
          $(pagesList[1]).toggleClass("active")
        }, 300);
      }
    }

    const paginator = (move) => {
      let pages = $(".consolepaginatorUl").children();
      for (let i = 0; i < pages.length; i++) {
        if ($(pages[i]).hasClass("active")) {
          switch(move) {
            case "sum":
              if (i == pages.length-2) {break}
              $(pages[i]).removeClass("active");
              $(pages[i+1]).addClass("active");
              $(pages[i+1]).find("a").click();
              break;
            case "res":
              if (i == 1) {break};
              $(pages[i]).removeClass("active")
              $(pages[i-1]).addClass("active")
              $(pages[i-1]).find("a").click();
              break;
          }
          return;
        };
      };
    };

    const onSelectPage = (nStart, nEnd) => {
      if ($("#catalogview").is(":visible")) {
        printProducts(nStart, nEnd)
      } else {
        printProductsTable(nStart, nEnd)
      }
    };

    const sortByPrice = (state) => {
      switch (state) {
        case "0": //Por defecto
          dataProductsPrint = dataProductsComplete;
          selectView(0, 8);
          printFilteredPaginator(0)
          
        break;
        case "1": //Precio Menor
          dataProductsPrint = _.sortBy(dataProductsComplete, function(o) { return o.precio; });
          selectView(0, 8);
          printFilteredPaginator(0)
          
        break;
        case "2": //Precio mayor
          dataProductsPrint = _.sortBy(dataProductsComplete, function(o) { return o.precio; });
          dataProductsPrint.reverse()
          break;
      }
    };

    const filterTags = (value) => {
      dataProductsPrint = _.filter(dataProductsComplete, function (data) {
        return data[dataTagsObjectName] == value; 
      });
      selectView(0, 8)
      printPaginator()
    };

    const filterSearchField = () => {
      valueFilter = $("#searchField").val();
      if (valueFilter.length <= 1) {
        dataProductsPrint = dataProductsComplete;
        selectView(0, 8)
        return
      }

      dataProductsPrint = _.filter(dataProductsComplete, o => {
        if (o.description.toLowerCase().split(' ').join('').indexOf(valueFilter.toLowerCase()) > -1 ||
            o.code.toLowerCase().split(' ').join('').indexOf(valueFilter.toLowerCase()) > -1
        ) return o;
      }); 

      selectView(0, 8)
      printPaginator()
    };

    const filterCollapse = (key, value) => {
      valueFilter = value.replace(/\([^()]*\)/g, '').trim() // Remove parentesis
      dataFiltered = [];
      if (key == "Color" || key == "Talla") {
        if (key == "Talla") {
          for (let i = 0; i < dataProductsPrint.length; i++) {
            if (dataProductsPrint[i].talla_array.includes(valueFilter)) {
              dataFiltered.push(dataProductsPrint[i])
            }
          }
        }
        if (key == "Color") {
          let colorMaster = _.findWhere(colorsProducts, {color: valueFilter});
          if (colorMaster) {
            for (let i = 0; i < dataProductsPrint.length; i++) {
              if (dataProductsPrint[i].color_array.includes(colorMaster.cod_color)) {
                dataFiltered.push(dataProductsPrint[i])
              }
            }
          }
        }
      } else {
        for (let i = 0; i < dataProductsPrint.length; i++) {
          if (!(key in dataProductsPrint[i])) {  continue }
  
          if (dataProductsPrint[i][key] == valueFilter) {
            dataFiltered.push(dataProductsPrint[i])
          }
        }
      }

      dataProductsPrint = dataFiltered;

      // Reload collapse
      filterCollapseData();

      let element = `
          <div class="badge tags choices-dark m-1 is-highlighted" key="${key}" value="${valueFilter}">
            <div class="removeFilterTag" style="display: inline"> <i class="fas fa-times ms-1 closeTag"></i> </div> 
            <div style="display: inline"> ${key} / ${valueFilter} </div> 
          </div>
        `;
      $("#appliedFilters").append(element);
      $("#appliedFiltersContainer").fadeIn("fast");

      selectView(0, 8)
      printPaginator()
    };

    const getSelectedFilters = () => { // Lamanda cuando hay filtros seleccionados y se quita alguno de ellos
      dataProductsPrint = dataProductsComplete;
      let tagsSelected = $("#appliedFilters").children();
      for (let i = 0; i < tagsSelected.length; i++) {
        let key = $(tagsSelected[i]).attr("key");
        let value = $(tagsSelected[i]).attr("value")
        loadSelectedFilter(key, value)
      }
    };

    const loadSelectedFilter = (key, value) => {
      valueFilter = value.replace(/\([^()]*\)/g, '') //quitar parentesis del string
      dataProductsPrint = _.filter(dataProductsPrint, o => {
        if (o[key].toLowerCase().split(' ').join('').indexOf(valueFilter.toLowerCase().split(' ').join('')) > -1 ) return o;
      }); 

      filterCollapseData();
    }

    const addProductCart = (idProduct, amount) => {
      let numberProducts = Number($("#numberProductsD").val());
      let productID = $("#idProductD").attr("codigo");

      if (amount) {
        numberProducts = amount;
        productID = idProduct;
      }

      let size = $("#selectSizeProduct").val();
      if (size == "-1") {
        return Swal.fire({
          title: 'Selecciona un talla antes de agregar al carrito',
          confirmButtonText: 'Continuar',
        })
      }

      let color = $("#selectColorProduct").val();
      if (color == "-1") {
        return Swal.fire({
          title: 'Selecciona un color antes de agregar al carrito',
          confirmButtonText: 'Continuar',
        })
      }

      let productSelected = _.findWhere(dataProductsComplete, {"code": productID});
      let productToCar = {
        code: productSelected.code,
        description: productSelected.description,
        imagen: productSelected.image,
      }

      productToCar.qty = numberProducts;
      productToCar.code = productID + size + color;

      saveLocalStorage(productToCar);
    }

    const saveLocalStorage = (product) => {
      if (localStorage.getItem(cartName) === null) {
        localStorage.setItem(cartName, JSON.stringify([product]));
      } else {
        let localObject = JSON.parse(localStorage.getItem(cartName));

        let productExist = _.findWhere(localObject, {"code": product.code});
        if (productExist) {
          return Swal.fire({
          title: 'El producto ya fue agregado al carrito',
          confirmButtonText: 'Continuar',
        })
       } 
        localObject.push(product)
        localStorage.setItem(cartName, JSON.stringify(localObject));
      }
      loadPreviewCart();
      setCartIconAmount();
    }

    const loadPreviewCart = () => {
      $("#modalDetalle").modal("hide")
      
      let products = JSON.parse(localStorage.getItem(cartName))

      $("#addedToCartItems").html('')
      for (let i = 0; i < products.length; i++) {
        let element = `
          <div class="d-flex mb-2">
            <div style="min-width: 80px; height: 80px;" class="border">
              <img src="${products[i].imagen}" alt="" onerror="this.onerror=null; this.src='https://upload.wikimedia.org/wikipedia/commons/d/da/Imagen_no_disponible.svg'" style="max-height: 100%; max-width: 100%; min-height: 100%; min-width: 100%;">
            </div>
            <div class="d-flex flex-column align-items-start ms-2">
              <h6 class="m-0" style="word-break: break-all; text-align: left; font-weight: 900; font-size: 15px">${products[i].descripcion || products[i].description}</h6>
              <h6 class="m-0" style="font-size: 13px;">Cantidad: <span style="font-weight: 400;">${products[i].qty}</span></h6>
            </div>
          </div>
        `;
        $("#addedToCartItems").append(element)
      }

      setTimeout(() => {
        $("#modalAddedToCart").show()
      }, 300);
    }

    const getColorsCatalog = () => {
      fetch("/catalogo/colors") 
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          colorsProducts = data.result;          
        }
      }) 
      .catch(error => console.log('Request failed', error));
    } 

    const getAttributesCatalog = () => {
      fetch("/catalogo/getAttributes") 
      .then(response => response.json())
      .then(data => {
        let attributes = data.result.data.attributes;
        let attributesDetail = data.result.data.attributes_detail;

        for (let i = 0; i < attributes.length; i++) {
          dataSidebarMaster[attributes[i].description] = {};
        }

        for (let i = 0; i < attributes.length; i++) {
          let detailAttr = _.where(attributesDetail, {id_attribute: attributes[i].id});
          dataSidebar[attributes[i].description] = {};

          for (let e = 0; e < detailAttr.length; e++) {
            dataSidebar[attributes[i].description][detailAttr[e].description] = 1;
          }
        }
        
        filterCollapseData();
      }) 
      .catch(error => console.log('Request failed', error));
    } 

    const fixOrderCollapse = ()  => {
      let items = $("#collapseContainer>div")
      let newOrder = [items[2], items[0], items[1], items[3]]; 

      $("#collapseContainer").html("");
      for (let i = 0; i < newOrder.length; i++) {
        $("#collapseContainer").append(newOrder[i]);
      }
    }

    const getCalogGyW = () => {
      fetch("/catalogo/GyW") // Optener todos los objetos del catalogo
      .then(response => response.json())
      .then(async (response) => {
        createIndexedDB(response)
      }) 
      .catch(error => console.log('Request failed', error));
    }

    const printCatalogGyW = () => { // catalogo Grulla y Wellco, id company
      fetch("/catalogo/GyW") 
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          dataProductsComplete = data.result;
          dataProductsPrint = dataProductsComplete;
          printPaginator();
          selectView(0, 8);
        }
      }) 
      .catch(error => console.log('Request failed', error));
    } 

    const getProductDetail = (code) => { // Tallas y colores
      fetch("/catalogo/GyW/detail/"+code) 
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          data = data.result;

          let sizes = [];
          let colors = [];
          for (let i = 0; i < data.length; i++) {
            if (!sizes.includes(data[i].size)) {
              sizes.push(data[i].size)
            }
            if (!colors.includes(data[i].color)) {
              colors.push(data[i].color)
            }
          };

          $("#selectSizeProduct").html("")
          for (let i = 0; i < sizes.length; i++) {
            let el = `
              <option value="${sizes[i]}">${sizes[i]}</option>
            `;
            $("#selectSizeProduct").append(el)
          }
          $("#selectSizeProduct").append('<option value="-1" selected>Seleccionar</option>')

          $("#selectColorProduct").html("")
          for (let i = 0; i < colors.length; i++) {
            let colorObj = _.findWhere(colorsProducts, {cod_color: colors[i]});
            if (colorObj == undefined) {return}

            let el = `
              <option value="${colors[i]}">${colorObj.color}</option>
            `;
            $("#selectColorProduct").append(el)
          }
          $("#selectColorProduct").append('<option value="-1" selected>Seleccionar</option>')
        }
      }) 
      .catch(error => console.log('Request failed', error));
    }

    const selectView = (nS, nE) => {
      if (currentView == "tarjetas") {
        printProducts(nS, nE);
      }
      if (currentView == "tabla") {
        printProductsTable(nS, nE);
      }
    }

    const handlePermissions = () => {
      let permissions = session.user.permission;
      let permissionIndex; 

      permissionIndex = permissions.map(e => e.code).lastIndexOf( "8085_VIEW_CLASIC")
      if (permissionIndex  == -1 || permissions[permissionIndex].content == "N") {
        $("#iconSelectView").parent().hide();
      };

      // permissionIndex = permissions.map(e => e.code).lastIndexOf( "8005_CAN_PAY_INVOICES_EXTRANET");
      // if (permissionIndex  == -1 || permissions[permissionIndex].content == "N") {
      //   $("#iconCarritoFacturas").hide();
      // };

      // permissionIndex = permissions.map(e => e.code).lastIndexOf( "8065_VIEW_ECOMMERCE");
      // if (permissionIndex  == -1 || permissions[permissionIndex].content == "N") {
      //   currentView = "tabla"
      //   $("#catalogview").hide()
      //   $("#tableView").show()
      // };
    };

    const isItGreaterThan = (date1, date2, days) => { 
      var firstDate = new Date(date1);
      var secondDate = new Date(date2);
      var time = days * 60 * 60 * 24 * 1000
      if ((secondDate.getTime() - firstDate.getTime()) < time) {
        return false
      } else {
        return true
      }
    }

    async function databaseExists(dbname, callback) {
      const currentDate = new Date().toISOString().split("T")[0];
      const dbName = dbname;
      const isExisting = (await window.indexedDB.databases()).map(db => db.name).includes(dbName);

      if (!isExisting) {  // BD no existe
        localStorage.setItem(dbname, new Date().toISOString().split("T")[0]);
        return callback(false);
      } else {
        if (!localStorage.hasOwnProperty(dbname)) { // BD existe pero no hay registro de creaci√≥n en LS
          localStorage.setItem(dbname, new Date().toISOString().split("T")[0]);
          indexedDB.deleteDatabase(dbname);
          return callback(false);
        }

        if (isItGreaterThan(localStorage.getItem(dbname), currentDate, 3)) { // BD existe pero el registro de creaci√≥n es de hace m√°s de tres d√≠as
          localStorage.setItem(dbname, new Date().toISOString().split("T")[0]);
          indexedDB.deleteDatabase(dbname);
          return callback(false);
        }
      }

      return callback(true); // BD existe y el registro es de hace menos de tres d√≠as
    }

    const createIndexedDB = (data) => {
      if (!window.indexedDB) {
        console.error("Tu navegador no soporta indexedDB");
        return printCatalogGyW();
      }

      const request = indexedDB.open(catalogName, 1);
      request.onerror = (event) => {
        console.error(`Database error: ${event.target.errorCode}`);
      };
      request.onupgradeneeded = (event) => {
        const db = request.result;
        const store = db.createObjectStore("products", { keyPath: "id", autoIncrement: true });
      }
      request.onsuccess = (event) => {
        const db = request.result;
        const transaction = db.transaction("products", "readwrite");
        const store = transaction.objectStore("products");
        store.put(data)

        transaction.oncomplete = function () {
          db.close();
        };

        getDataFromIndexedDB()
        .then(function (response) {
          dataProductsComplete = response.result;
          dataProductsPrint = dataProductsComplete;

          printPaginator();
          selectView(0, 8);

          getColorsCatalog();
          getAttributesCatalog();
          setCartIconAmount();
        })
      };
    };

    const getDataFromIndexedDB = () => {
      return new Promise(function (resolve, reject) {
          const request = indexedDB.open(catalogName, 2);
          request.onerror = (event) => {
            console.error(`Database error: ${event.target.errorCode}`);
          };
          request.onsuccess = (event) => {
            const db = request.result;
            const transaction = db.transaction("products", "readwrite");
            const store = transaction.objectStore("products");
            const dataProductsDB = store.get(1);
            dataProductsDB.onsuccess = () => resolve(dataProductsDB);
          };
        }
      )
    };

    $("#repairCatalog").on("click", function () {
      Swal.fire({
        title: '¬øEst√° seguro de reparar y recargar el c√°talogo?',
        confirmButtonText: 'Aceptar',
        showDenyButton: true,
      }).then((result) => {
        if (result.isConfirmed) {
          let dbDelete = window.indexedDB.deleteDatabase(catalogName);
          dbDelete.onsuccess = function(event) {
            location.reload();

          };
        }
      })
    })

    $( document ).ready(function() {
      handlePermissions(); 
      $("#menuCatalogo").addClass("activeNav");

      databaseExists(catalogName, function (state) {
        if (state) {
          getDataFromIndexedDB()
          .then(function (response) {
            dataProductsComplete = response.result;
            dataProductsPrint = dataProductsComplete;
            printPaginator();
            selectView(0, 8);

            getColorsCatalog();
            getAttributesCatalog();
            setCartIconAmount();
          })
        } else {
          getCalogGyW();
        }
      });
    });
  </script>

</body>
</html> 