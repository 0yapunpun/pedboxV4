<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <link rel="shortcut icon" type="image/x-icon" href="https://app.pedbox.co/assets/logos/logo_blanco.png"/>
  <title>Helpdesk</title>
  
  <!-- Fonts and icons -->
  <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet" />
  <script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
  <link href="/css/nucleo-svg.css" rel="stylesheet" />
  <link href="/css/nucleo-icons.css" rel="stylesheet" />
  <link href="/css/nucleo-svg.css" rel="stylesheet" />
  <!-- CSS Files -->
  <link id="pagestyle" href="/css/soft-ui-dashboard.css?v=1.0.3" rel="stylesheet" />
  <!-- JQUERY UI -->
  <link rel="stylesheet" href="/css/jquery-ui.min.css">
  <!-- REPORTS CSS -->
  <link rel="stylesheet" href="/css/reports.css">
  <!-- DropzoneJS -->
  <link href="/css/dropzone_attached.css" type="text/css" rel="stylesheet" />
  <!-- Plumb -->
  <link href="/css/plumbClasses.css" type="text/css" rel="stylesheet" />
  <!-- Cutom -->
  <link href="/css/helpdesk.css" type="text/css" rel="stylesheet" />
  <!-- Color Page -->
  <%- include('./partials/colors.ejs') %> 

  <style>
    .incidentMain{
      border-radius: 1rem;
      transition: 0.5s;
    }
    .incidentMain:hover{
      background-color: #e9ecef;
    }
    .activeNav .icon{
      background-image: linear-gradient(310deg ,#7928ca,#ff0080);
      color: white !important
    }
    .activeNav i{
      color: white !important
    }
    .activeNav a{
      background-color: white;
      border-radius: 0.5rem;
      box-shadow: 0 20px 27px 0 rgb(0 0 0 / 5%);
    }
  </style>

</head>

<body class="g-sidenav-show  bg-gray-100">

  <!-- Menu -->
  <%- include('./partials/menu.ejs') %> 

  <main class="main-content position-relative max-height-vh-100 h-100 border-radius-lg" style="min-height: 100vh;">

    <!-- Cabecera -->
    <%- include('./partials/header.ejs') %>

    <!-- Content -->
    <div class="container-fluid py-4">

      <!-- Indicadores Incidencias -->
      <div>
        <div class="d-flex justify-content-center gap-2" id="helpdeskHeaderIndicators">
          <div class="card indicatorsHover cardsState indicatorsActive" data-state="0" style="cursor: pointer;">
            <div class="card-body p-3">
              <div class="d-flex">
                <div>
                  <div class="icon icon-shape text-center border-radius-md" style="background-color: #fd4a4a ">
                    <i class="far fa-handshake" style="font-size: 25px"></i>
                  </div>
                </div>
                <div class="ms-3">
                  <div class="numbers">
                    <p class="text-sm mb-0 text-capitalize font-weight-bold">Sin asignar</p>
                    <h5 class="font-weight-bolder mb-0" id="HeaderSinAsignar"></h5>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="card indicatorsHover cardsState" data-state="1" style="cursor: pointer;">
            <div class="card-body p-3">
              <div class="d-flex">
                <div>
                  <div class="icon icon-shape text-center border-radius-md" style="background-color: #ffa441">
                    <i class="fas fa-handshake" style="font-size: 25px"></i>
                  </div>
                </div>
                <div class="ms-3">
                  <div class="numbers">
                    <p class="text-sm mb-0 text-capitalize font-weight-bold">Asignadas</p>
                    <h5 class="font-weight-bolder mb-0" id="HeaderAsignadas"></h5>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="card indicatorsHover cardsState" data-state="2" style="cursor: pointer;">
            <div class="card-body p-3">
              <div class="d-flex">
                <div>
                  <div class="icon icon-shape text-center border-radius-md" style="background-color: #1fb7de">
                    <i class="fas fa-spinner" style="font-size: 25px"></i>
                  </div>
                </div>
                <div class="ms-3">
                  <div class="numbers">
                    <p class="text-sm mb-0 text-capitalize font-weight-bold">En curso</p>
                    <h5 class="font-weight-bolder mb-0" id="HeaderEnCurso"></h5>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="card indicatorsHover cardsState" data-state="3" style="cursor: pointer;">
            <div class="card-body p-3">
              <div class="d-flex">
                <div>
                  <div class="icon icon-shape text-center border-radius-md" style="background-color: #009688;">
                    <i class="far fa-circle" style="font-size: 25px"></i>
                  </div>
                </div>
                <div class="ms-3">
                  <div class="numbers">
                    <p class="text-sm mb-0 text-capitalize font-weight-bold">Completadas</p>
                    <h5 class="font-weight-bolder mb-0" id="HeaderCompletadas"></h5>
                  </div>
                </div>
              </div>
            </div>
          </div>       
          <div class="card indicatorsHover cardsState" data-state="4" style="cursor: pointer;">
            <div class="card-body p-3">
              <div class="d-flex">
                <div>
                  <div class="icon icon-shape text-center border-radius-md" style="background-color: #50c14e;">
                    <i class="fas fa-check" style="font-size: 25px"></i>
                  </div>
                </div>
                <div class="ms-3">
                  <div class="numbers">
                    <p class="text-sm mb-0 text-capitalize font-weight-bold">Cerradas</p>
                    <h5 class="font-weight-bolder mb-0" id="HeaderCerradas"></h5>
                  </div>
                </div>
              </div>
            </div>
          </div> 
        </div> 
        <div class="row mt-4">
          <div class="col-lg-3 d-flex flex-column" id>
            <div >
              <div class="d-flex justify-content-center align-items-center gap-1 mb-2" style="height: 40px;">
                <div onclick="loadConsultIncidencesModal()"  class="icon icon-shape icon-sm bg-gradient-primary shadow text-center border-radius-lg h-100 d-flex justify-content-center align-items-center" style="cursor: pointer; padding: 20px"> <i class="fas fa-search" style="font-size: 16px; top: 0"> </i></div>
                <button type="button" class="btn bg-gradient-primary px-1 m-0 h-100 w-100" onclick="loadNewIncidenceModal()" id="newIncidenceButton">
                  <i class="fa fa-plus"></i>
                  Nueva Incidencia
                </button>
              </div>
              <div id="helpdeskCharts"></div>
            </div>
          </div>
          <div class="col-lg-7 col-12">
            <div class="card" style="min-height: 60vh;">
              <div class="card-body p-3">
                <ul class="list-group list-group-flush" data-toggle="checklist" id="helpDeskMain">
                </ul>
              </div>
            </div>
          </div> 
          <div class="col-lg-2" id="usersContainer">
            <div class="card px-2 py-3 d-flex align-items-center gap-3" style="min-height: 60vh;" id="usersBar">
            </div>
          </div>
        </div>
      </div>

      <!-- Modales -->
      <!-- Modal nueva incidencia-->
      <div class="modal fade" id="nuevaIncidenciaModal" tabindex="-1" role="dialog" aria-labelledby="nuevaIncidenciaModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
          <div class="modal-content bg-gray-100">
            <div class="modal-header">
              <h5 class="modal-title" id="nuevaIncidenciaModalLabel">Seleccione un flujo de trabajo</h5>
              <button type="button" class="btn-close text-dark rounded-circle me-1" data-bs-dismiss="modal" aria-label="Close" style="background-color: gray;"> 
              </button>
            </div>
            <div class="modal-body">
              <div class="d-flex flex-column" style="min-height: 60vh;">
                <!-- slides -->
                <div class=" position-relative end-0 w-50 mx-auto" >
                  <ul class=" p-1 bg-transparent mb-3 navWrapper" id="slidesSelector" role="tablist">
                  </ul>
                </div>
                <div class="row px-2" id="workFlowContainer" style="overflow-x: hidden; position: relative; min-height: 45vh;"></div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Modal nueva tarea-->
      <div class="modal fade" id="nuevaTareaModal" tabindex="-1" role="dialog" aria-labelledby="nuevaTareaModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered 	modal-lg" role="document">
          <div class="modal-content bg-gray-100">
            <div class="modal-header">
              <h5 class="modal-title" >Formulario</h5>
              <button type="button" class="btn-close rounded-circle" style="background-color: gray;" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <div class="d-flex flex-column" style="min-height: 40vh;">
                <div type-field="8" class="d-flex flex-row justify-content-around typeField8">
                  <div class="dropdown">
                    <label for="">Prioridad</label> <br>
                    <button class="btn bg-gradient-default dropdown-toggle d-flex align-items-center justify-content-center" id="navbarDropdownMenuPrioridad" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="width: 200px; height: 50px;"></button>
                    <div id="dropMenuPrioridad" class="dropdown-menu me-sm-n4 me-n3 px-3" aria-labelledby="navbarDropdownMenuPrioridad">
                      <div class="d-flex justify-content-center align-items-center"> 
                        <div style="width: 15px; height: 15px; margin-right: 5px;">
                          <div style="width: 15px; height: 15px; clip-path: circle(50%); background-color: #d63b2f;"></div>
                        </div>
                        <a class="dropdown-item fw-bolder" data-value="8" href="javascript:;">Muy Urgente</a>
                      </div>  
                      <div class="d-flex justify-content-center align-items-center">
                        <div style="width: 15px; height: 15px; margin-right: 5px;">
                          <div style="width: 15px; height: 15px; clip-path: circle(50%); background-color: #e0ce33;"></div>
                        </div>
                        <a class="dropdown-item fw-bolder" data-value="9" href="javascript:;">Urgente</a>
                      </div>
                      <div class="d-flex justify-content-center align-items-center">
                        <div style="width: 15px; height: 15px; margin-right: 5px;">
                          <div style="width: 15px; height: 15px; clip-path: circle(50%); background-color: #1d84d5;"></div>
                        </div>
                        <a class="dropdown-item fw-bolder" data-value="10" href="javascript:;">Poco Urgente</a>
                      </div>
                    </div>
                  </div>
                  <div class="dropdown">
                    <label for="">Comportamiento</label> <br>
                    <button class="btn bg-gradient-default dropdown-toggle" id="navbarDropdownMenuComportamiento" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="width: 200px; height: 50px;"></button>
                    <div id="dropMenuComportamiento" class="dropdown-menu dropdown-menu-end me-sm-n4 me-n3 " aria-labelledby="navbarDropdownMenuComportamiento">
                      <a class="dropdown-item fw-bolder" data-value="4" href="javascript:;">Muy Frecuente</a>
                      <a class="dropdown-item fw-bolder" data-value="5" href="javascript:;">Frecuente</a>
                      <a class="dropdown-item fw-bolder" data-value="6" href="javascript:;">Poco Frecuente</a>
                      <a class="dropdown-item fw-bolder" data-value="7" href="javascript:;">Nuevo</a>
                      <a class="dropdown-item fw-bolder" data-value="8" href="javascript:;">Ajuste</a>
                    </div>
                  </div>
                  <div>
                    <label for="dateIncidencia">Fecha limite</label>
                    <input type="date" name="dateIncidencia" id="dateIncidencia" class="form-control" style="width: 200px; height: 50px; box-shadow: 0 4px 7px -1px rgb(0 0 0 / 11%), 0 2px 4px -1px rgb(0 0 0 / 7%);">
                  </div>
                </div>
                <div id="nuevaTareaModalContent"></div>
              </div>
            </div>
            <div class="modal-footer d-flex justify-content-center">
              <button  type="button" class="btn bg-gradient-secondary" data-bs-dismiss="modal">Omitir</button>
              <button onclick="sendFormNewIncidence()" type="button" class="btn bg-gradient-primary" >Enviar</button>
            </div>
          </div>
        </div>
      </div>

      <!-- Modal Timeline -->
      <div class="modal fade" tabindex="-1" id="timelineModal" role="dialog" aria-labelledby="timelineModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" style="min-width: 65vw;">
          <div class="modal-content">
            <div class="modal-header">
              <h5 id="timeLineTitle" class="modal-title"></h5>
              <div class="d-flex justify-content-center align-items-center gap-2">
                <button type="button" class="btn bg-gradient-primary my-0 procesoModal">Ver proceso</button>
                <button id="closeTimeLineModal" type="button" class="btn-close rounded-circle me-1" style="background-color: gray;" ></button>
              </div>
            </div>
            <div class="modal-body bg-gray-100">
              <div class="">
                <div class="progress-wrapper" style="height: 15px;">
                  <div class="progress align-items-center h-100">
                    <div id="timeLineBar" class="progress-bar bg-primary h-100" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100">
                      <div class="bg-gradient-primary">
                        <div class="progress-percentage">
                          <span id="timeLineBarN" class="text-sm font-weight-bold"></span>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <div id="timeLineHeadTags" class="d-flex my-3 gap-2 flex-wrap" ></div>
              </div>
              <div>
                <div class="card">
                  <div class="card-body p-3">
                    <div id="timeLineMain" class="timeline" data-timeline-axis-style="dotted">
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Modal Ver-formato/Ver-solicitud-->
      <div class="modal fade" tabindex="-1" id="verFormatoModal" role="dialog" aria-labelledby="formatoModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="verFormatoTitle"></h5>
              <div class="d-flex justify-content-center align-items-center gap-2">
                <button id="closeModalVerFormato" type="button" class="btn-close rounded-circle me-1 " style="background-color: gray;" ></button>
              </div>
            </div>
            <div class="modal-body bg-gray-100">
              <div>
                <div id="verFormatoBody" class="card"></div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Modal Editar Formato-->
      <div class="modal fade" tabindex="-1" id="editarFormatoModal" role="dialog" aria-labelledby="editarFormatoModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="editarFormatoModaltitle"></h5>
              <div class="d-flex justify-content-center align-items-center gap-2">
                <button type="button" class="btn-close rounded-circle me-1 closeFormatModal" style="background-color: gray;"></button>
              </div>
            </div>
            <div class="modal-body bg-gray-100">
              <div class="card">
                <div id="editarFormatoBody" class="p-3"></div>
              </div>
            </div>
            <div class="modal-footer d-flex justify-content-center bg-gray-100">
              <button  type="button" class="btn bg-gradient-secondary" data-bs-dismiss="modal">Omitir</button>
              <button onclick="sendFormEditIncidence()" type="button" class="btn bg-gradient-primary " >Enviar</button>
            </div>
          </div>
        </div>
      </div>

      <!-- Modal Proceso Flujo de trabajo-->
      <div class="modal fade" tabindex="-1" id="procesoModal" role="dialog" aria-labelledby="procesoModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" style="min-width: 70vw">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Ver progreso del flujo de trabajo</h5>
              <div class="d-flex justify-content-center align-items-center gap-2">
                <button type="button" class="btn-close rounded-circle me-1 closeProcesoModal" style="background-color: gray"></button>
              </div>
            </div>
            <div class="modal-body bg-gray-100" style="overflow: hidden; padding: 0;">
              <div id="diagramVPD" class="diagram-vpd platform-vpd" style="position: relative; width: 100%; height: 100%; min-height: 70vh; overflow-y: scroll;">  </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Modal Consulta solicitudes -->
      <div class="modal fade" id="consultaSolicitudModal" tabindex="-1" role="dialog" aria-labelledby="consultaSolicitudModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
          <div class="modal-content bg-gray-100">
            <div class="modal-header">
              <h5 class="modal-title">Lista de Incidentes</h5>
              <button type="button" class="btn-close rounded-circle" style="background-color: gray; margin-right: 5px" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <div class="d-flex justify-content-end gap-2 w-100">
                <div class="buttonsCircle iconsHover sortToggle m-0">
                  <i class="fas fa-sort-alpha-up sortToggle1" style="font-size: 20px;"></i>
                  <i class="fas fa-sort-alpha-down sortToggle2" style="display: none; font-size: 20px"></i>             
                </div>
                <div class="mx-1">
                  <div style="position: relative" class="buttonsCircle iconsHover" class="dropdown" data-bs-toggle="tooltip" data-bs-placement="top" title="Rango de fechas">
                    <i class="fas fa-calendar dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false"  style="font-size: 20px"></i>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="left: -20px;">
                      <li onclick="dateFilter(0)"><a class="dropdown-item" href="#">Hoy</a></li>
                      <li onclick="dateFilter(-1)"><a class="dropdown-item" href="#">Ayer</a></li>
                      <li onclick="dateFilter(30)"><a class="dropdown-item" href="#">Este mes</a></li>
                      <li onclick="dateFilter(-30)"><a class="dropdown-item" href="#">Mes anterior</a></li>
                      <li onclick="dateFilter('x')"><a class="dropdown-item" href="#">Personalizado</a></li>
                    </ul>
                    <div id="selectRangeDate" class="px-3 py-1" style="background-color: white; position: absolute; right: 0; top:55px; border-radius: 10px; box-shadow: 0 20px 27px 0 rgb(0 0 0 / 15%); display: none; z-index: 301111110;">
                      <div class="d-flex gap-2">  
                        <div>
                          <label for="date1">Desde</label> 
                          <input class="form-control" id="date1" type="date">
                        </div>
                        <div>
                          <label for="date2">Hasta</label> 
                          <input class="form-control"  id="date2" type="date">
                        </div>
                      </div>
                      <div class="mt-3  gap-2 d-flex justify-content-end align-items-center">
                        <button onclick="dateRange(1)" class="btn bg-gradient-secondary">Cancelar</button>
                        <button onclick="dateRange(2)" class="btn bg-gradient-primary">Enviar</button>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="d-flex align-items-center" style="position: relative">
                  <i onclick="console.log(filterByValue($('#searchFieldIncidents').val()))" class="fas fa-search" style="position: absolute; left: 10px; cursor: pointer"></i>
                  <input id="searchFieldIncidents" class="form-control fieldsSize" placeholder="Buscar" style="padding-left: 30px; width: 300px;" type="text" name="" > 
                </div>
              </div>
              <div class="d-flex flex-column" style="min-height: 60vh;">
                <div class="position-relative end-0 w-50 mx-auto">
                  <ul class="nav nav-fill p-1 bg-transparent mb-3" id="linksTachables" role="tablist">
                    <li class="nav-item " name="slide1" style="position: relative;">
                      <a class="nav-link mb-0 px-0 py-1 fw-bold link-dark" value="0" data-bs-toggle="tab" href="javascript:;" role="tab" >
                        <span class="ms-1" style="font-size: 20px;">Abiertas</span>
                        <div style="border-bottom: solid 3px blue;"></div>
                      </a>
                    </li>
                    <li class="nav-item" name="slide2" style="position: relative;">
                      <a class="nav-link mb-0 px-0 py-1 fw-bold link-dark" value="1" data-bs-toggle="tab" href="javascript:;" role="tab" >
                        <span class="ms-1" style="font-size: 20px;">En curso</span>
                        <div style="border-bottom: solid 3px #ff9800;"></div>
                      </a>
                    </li>
                    <li class="nav-item " name="slide1" style="position: relative;">
                      <a class="nav-link mb-0 px-0 py-1 fw-bold active link-dark linkTachado" value="2" data-bs-toggle="tab" href="javascript:;" role="tab" >
                        <span class="ms-1" style="font-size: 20px;">Completadas</span>
                        <div style="border-bottom: solid 3px green;"></div>
                      </a>
                    </li>
                    <li class="nav-item " name="slide1" style="position: relative;">
                      <a class="nav-link mb-0 px-0 py-1 fw-bold active link-dark linkTachado" value="3" data-bs-toggle="tab" href="javascript:;" role="tab" >
                        <span class="ms-1" style="font-size: 20px;">Cerradas</span>
                        <div style="border-bottom: solid 3px red;"></div>
                      </a>
                    </li>
                  </ul>
                </div>
                <div class="row px-2" >
                  <div class="col-4 my-2 list-group" >
                    <div id="consultaSolicitudModalSide" style="border-radius: 1rem;"></div>
                  </div>
                  <div class="col-8" >
                    <div class="row" id="consultaSolicitudModalMain"></div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Modal llenado de insidentes -->
      <div class="modal fade" tabindex="-1" id="llenadoModal" role="dialog" aria-labelledby="llenadoModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title"><span style="color: red;">REQ- <span id="llenadoModalNumber"></span></span> &nbsp;&nbsp; <span id="llenadoModalDate"></span></h5>
              <div class="d-flex justify-content-center align-items-center gap-2">
                <button type="button" class="btn-close rounded-circle closeLlenadoIncidencia" style="background-color: gray; margin-right: 5px;"></button>
              </div>
            </div>
            <div class="modal-body bg-gray-100" style="overflow: hidden; padding-bottom: 0;">
              <div class="d-flex flex-column justify-content-center align-items-center">
                <div class="d-flex align-items-center">
                  <div id="modalLlenadoColor" style="width: 20px; height: 20px; border-radius: 50%; background-color: transparent;"></div>
                  <h6 class="my-0 mx-2" id="llenadoModalTitle"></h6>
                </div>
                <p id="llenadoModalUserReport"></p>
                <div id="llenadoModalButtons">
                  <button id="showTimeLineFromDetail" type="button" class="btn bg-gradient-secondary">Ver Resumen</button>
                </div>
              </div>
              <hr class="horizontal dark my-3">
              <div class="d-flex flex-column justify-content-center align-items-center" id="llenadoModalState">
                <div class="d-flex align-items-center">
                  <h6 class="mb-0 small">Comportamiento:&nbsp;</h6> 
                  <span class="text-xs font-weight-bolder" id="llenadoModalStateComp"></span>
                </div>
                <div id="llenadoModalStateassigned"></div>
              </div>
              <hr class="horizontal dark my-3" id="horizontalSendButton">
              <div class="w-80 text-center" style="margin: 0 auto;"> 
                <div id="verFormatoLlenado"> 
                </div>
                <button id='sendDataFormularioDinamicoButton' class='btn bg-gradient-primary my-2' type='button' onclick='attendFormatFill()'>Enviar</button>
              </div>
              <hr class="horizontal dark my-3">
              <div id="hideFormGestion">
                <div class="d-flex justify-content-center align-items-center my-3">
                  <h5 class="mb-0">Seguimiento&nbsp;</h5> 
                  <button id="formGestionOpen" title="Crear Seguimiento" class="d-flex" style="border: none; background-color: transparent;">
                    <i class="fas fa-plus-circle" style="font-size: 22px;"></i>
                  </button>
                </div>
                <div id="formGestion" class="w-80 p-3 fieldLlenado" style="display: none; margin: 0 auto;"> 
                  <div class="d-flex w-100 justify-content-between">
                    <h5>Crear gestión</h5>
                    <button id="formGestionClose" type="button" class="btn-close rounded-circle" style="background-color: gray; margin-right: 5px;"></button>
                  </div>
                  <div class="d-flex py-2 gap-3">
                    <div class="w-50">
                      <label for="fechaI">Fecha Inicial</label><br>
                      <input type="date" name="" id="SeguimientofechaI" class="w-100 form-control">
                    </div>
                    <div class="w-50">
                      <label for="FechaF">Fecha Final</label><br>
                      <input type="date" name="" id="seguimientoFechaF" class="w-100 form-control">
                    </div>
                  </div>
                  <div class="d-flex py-2 gap-3">
                    <div>
                      <label for="combo1">Horas</label><br>
                      <input type="number" id="seguimientoHoras" class="form-control"/>
                    </div>
                    <div style="width: 33%;">
                      <label for="seguimientoCombo1">Estado</label><br>
                      <select id="seguimienState" class="form-control">
                        <option style='cursor: default' value='' selected disabled hidden>Seleccione</option>
                        <option value="Pendiente">Pendiente</option>
                        <option value="En Curso">En Curso</option>
                        <option value="Completado">Completado</option>
                      </select> 
                    </div>
                    <div style="width: 33%;">
                      <label for="seguimientoCombo2">Trabajo</label><br>
                      <select id="seguimienTrabajo" class="form-control">
                        <option style='cursor: default' value='' selected disabled hidden>Seleccione</option>
                        <option value="Análisis">Análisis</option>
                        <option value="Diseño">Diseño</option>
                        <option value="Implementación">Implementación</option>
                        <option value="Seguimiento">Seguimiento</option>
                        <option value="Código">Código</option>
                      </select> 
                    </div>
                  </div>
                  <div >
                    <label for="textNota">Nota</label><br>
                    <textarea name="" id="seguimientoTextarea" cols="30" rows="10" class="form-control" style="resize:none"></textarea>
                  </div>
                  <div class="text-center my-3">
                    <button class="btn bg-gradient-primary" onclick="sendFormSeguimiento()">Crear Seguimieto</button>
                  </div>
                </div>
                <hr class="horizontal dark my-3">
              </div> 
              <div class="d-flex justify-content-center align-items-center my-3 flex-column">
                <h5 class="mb-0">Lista de Gestiones&nbsp;</h5> 
                <p class="my-1" id="llenadoModalGestionesState"></p>
                <div class="w-80" style="margin: 10px auto;" id="llenadoModalGestiones"></div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Modal Cerrar Incidente-->
      <div class="modal fade" tabindex="-1" id="closeIncidence" role="dialog" aria-labelledby="closeIncidenceModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-sm" style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%);">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Cerrar Incidente</h5>
              <div class="d-flex justify-content-center align-items-center gap-2">
                <button type="button" class="btn-close rounded-circle me-1" style="background-color: gray" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
            </div>
            <div class="modal-body bg-gray-100" >
              <div>
                <textarea name="" id="" cols="30" rows="10" class="form-control" placeholder="Notas*"></textarea>
              </div>
            </div>
            <div class="modal-footer d-flex justify-content-center ">
              <button onclick="" type="button" class="btn bg-gradient-primary " >Aceptar</button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- preloader -->
    <%- include('./partials/preloader.ejs') %> 
  </main>

  <!-- Scripts -->
  <script src="/js/core/popper.min.js"></script>
  <script src="/js/core/bootstrap.min.js"></script>
  <script src="/js/plugins/perfect-scrollbar.min.js"></script>
  <script src="/js/plugins/smooth-scrollbar.min.js"></script>
  <script src="/js/plugins/choices.min.js"></script>
  <script src="/js/soft-ui-dashboard.min.js?v=1.0.3"></script>
  <script src="/js/plugins/dragula/dragula.min.js"></script>
  <script src="/js/plugins/jkanban/jkanban.js"></script>
  <script src="/js/jquery.js"></script>
  <script src="/js/jquery-ui.min.js"></script>
  <script src="/js/plugins/datatables.js"></script>
  <script src="/js/plugins/chartjs.min.js"></script>
  <script src="/js/underscore-min.js"></script>
  <script src="/js/helpers.js"></script>
  <script src="/js/jsplumb.js"></script>
  <script src="/js/plugins/countup.min.js"></script>
  <script src="/js/plugins/choices.min.js"></script>
  <script src="/js/dropzone_attached.js"></script>
  <script src="/js/sweetalert2.all.min.js"></script>
  <script src="/js/menu.js"></script>

  <script>
    let session = `<%- JSON.stringify(session) %>`;
        session = JSON.parse(session);
    let content = `<%- JSON.stringify(content) %>`;
        content = JSON.parse(content);
    let masters = `<%- JSON.stringify(masters) %>`;
        masters = JSON.parse(masters);
    let formats = `<%- JSON.stringify(formats) %>`;
        formats = JSON.parse(formats);
    let users = `<%- JSON.stringify(users) %>`;
        users = JSON.parse(users);

    // Dropzone js configuration
    var myDropzone
    Dropzone.autoDiscover = false;
    Dropzone.prototype.defaultOptions.dictDefaultMessage = "";
    Dropzone.prototype.defaultOptions.dictFallbackMessage = "";
    Dropzone.prototype.defaultOptions.dictInvalidFileType = "";
    Dropzone.prototype.defaultOptions.dictFileTooBig = "Archivo demasiado grande";
    Dropzone.prototype.defaultOptions.dictResponseError = "Error";
    Dropzone.prototype.defaultOptions.dictCancelUpload = "Cancelar";
    Dropzone.prototype.defaultOptions.dictCancelUploadConfirmation = "";
    Dropzone.prototype.defaultOptions.dictRemoveFile = "Quitar Archivo";
    Dropzone.prototype.defaultOptions.dictMaxFilesExceeded = "Cantidad máxima de imagenes exedida";
    
    let adminMasters;
    let dataIncidencesComplete;
    let currentIncidence;

    const loadHelpdeskIncidents = function (data) {
      $("#helpDeskMain").html("")
      if (data.length) {
        for (let i = 0; i < data.length; i++) {
          // Format date
          let date = data[i].date_create;
              date = date.replace(' ', ', ');
              date = date.substring(0, date.length - 3);

          let color;
          if (data[i].status == 0){color = "#fd4a4a"}
          if (data[i].status == 1){color = "#ffa441"}
          if (data[i].status == 2){color = "#1fb7de"}
          if (data[i].status == 3){color = "#009688"}
          if (data[i].status == 4){color = "#50c14e"}

          let colorPriority;
          if (data[i].priority == "Muy Urgente"){colorPriority = "#F44336"}
          if (data[i].priority == "Urgente"){colorPriority = "#FFEB3B"}
          if (data[i].priority == "Poco Urgente"){colorPriority = "#2196F3"}

          let incidenciaMain = `
            <li class="list-group-item border-0 flex-column align-items-start ps-0 py-0 mb-3 incidentMain" style="cursor: pointer" id="${data[i].id}">
              <div class=" ps-2 ms-3" style="position: relative">
                <div style="position: absolute; width: 3px; height: 100px; background-color: ${color}"></div>
                <div class="d-flex align-items-center justify-content-between ms-4 mt-3 ps-1 position-relative" style="height: 100px;">
                  <div>
                    <h5 class=" mb-0 ">${data[i].subject}</h5>
                    <div class="d-flex align-items-center">
                      <h6 class="mb-0 small">Tipo de proyecto:&nbsp</h6> 
                      <span class="text-xs font-weight-bolder">${data[i].workflow.description}</span>
                    </div>
                    <div class="d-flex align-items-center">
                      <h6 class="mb-0 small">Paso actual:&nbsp</h6> 
                      <span class="text-xs font-weight-bolder">${data[i].workflow.nodes[0].description_node}</span>
                    </div>
                    <div class="d-flex align-items-center">
                      <h6 class="mb-0 small">Solicitado:&nbsp</h6> 
                      <span class="text-xs font-weight-bolder">${data[i].workflow.nodes[0].first_name +" "+ data[i].workflow.nodes[0].second_name}</span>
                    </div>
                    <div class="d-flex align-items-center">
                        <div style="width: 15px; height: 15px; margin-right: 5px;">
                          <div style="width: 15px; height: 15px; clip-path: circle(50%); background-color:${colorPriority}"></div>
                        </div>
                        <h6 class="mb-0 small">${data[i].priority}</h6> 
                      </div>
                  </div>
                  <div class="h-100" >
                    <div class="d-flex align-items-center justify-content-end">
                      <h6 class="mb-0 ">REQ-${data[i].workflow.number}</h6> 
                    </div>
                    <div class="d-flex align-items-center justify-content-end">
                      <h6 class="mb-0 ">${date}</h6> 
                    </div>
                    <div class="d-flex align-items-center justify-content-end">
                      <button type="button" class="btn btn-secondary my-1 openTimeLine" data-id="${data[i].id}">ver resumen</button>
                    </div>
                  </div>
                </div>
              </div>
              <hr class="horizontal dark mt-4 mb-0">
            </li>
          `;
          $("#helpDeskMain").append(incidenciaMain)
        }
      } else {
        $("#helpDeskMain").append('<h6 class="text-center mb-0">No Hay Incidencias</h6>')
      }
    }

    const loadHelpdeskCharts = function (data) {
      $("#helpdeskCharts").html("");
      for (let i = 0; i < data.length; i++) {
        const indicator = `              
          <div class="card overflow-hidden my-1 chartSidebar chartHover ${i == 0 ? "chartActive" : ""}" style="cursor: pointer" data-id="${data[i].id}" unassigned="${data[i].pending_task}" assigned="${data[i].task_taken}" progress="${data[i].in_progress}" completed="${data[i].completed}" closed="${data[i].closed}">
            <div class="card-body p-0 py-1">
              <div class="d-flex flex-column align-items-center">
                <div class="col-lg-5" style="width: 100%">
                  <div class="d-flex flex-column h-100 align-items-center justify-content-center">
                    <p class="text-sm mb-0 text-capitalize font-weight-bold">${data[i].description}</p>
                    <h5 class="font-weight-bolder mb-0" id="tableNumber">${data[i].total_task}</h5>
                  </div>
                </div>
                <div class="col-lg-7 my-auto">
                  <div class="chart ms-auto">
                    <canvas id="chart${data[i].id}" class="chart-canvas" height="150"></canvas>
                  </div>
                </div>
              </div>
            </div>
          </div>
        `;  
        $("#helpdeskCharts").append(indicator);

        let porcentajePending = data[i].pending_task ;
        let porcentajeassigned = data[i].task_taken ; 
        let porcentajeCurso = data[i].in_progress ;
        let porcentajeCompleted = data[i].completed ;
        let porcentajeClosed = data[i].closed ;

        let dataChart = [porcentajePending, porcentajeassigned, porcentajeCurso, porcentajeCompleted, porcentajeClosed];
        let nameChart = "chart"+data[i].id;
        loadChart(nameChart, dataChart)
      }
    }

    const loadChart = function (name, data) {
      var name = document.getElementById(name).getContext("2d");
      new Chart(name, {
        type: "doughnut",
        data: {
          labels: ['Sin asignar', 'Asignadas', 'En curso', 'Completadas', 'Cerradas'],
          datasets: [{
            label: "Projects",
            weight: 9,
            cutout: 50,
            tension: 0.9,
            pointRadius: 2,
            borderWidth: 2,
            backgroundColor: ['#fd4a4a', '#ffa441', '#1fb7de', '#009688', '#50c14e'],
            data: data,
            fill: false
          }],
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: {
              display: false,
            }
          },
          interaction: {
            intersect: false,
            mode: 'index',
          },
          scales: {
            y: {
              grid: {
                drawBorder: false,
                display: false,
                drawOnChartArea: false,
                drawTicks: false,
              },
              ticks: {
                display: false
              }
            },
            x: {
              grid: {
                drawBorder: false,
                display: false,
                drawOnChartArea: false,
                drawTicks: false,
              },
              ticks: {
                display: false,
              }
            },
          },
        },
      });
    }

    const loadHelpdeskUsers = function (data) {
      const userBar = $("#usersBar");
      if (data.success) {
        data = data.user_helpdesk;
        let amount = (data.length > 24 ? 25 : data.length)
        for (let i = 0; i < amount; i++) {
          let userDiv = `
            <div style="position: relative; width: 100%"> 
              <div class="badge badge-sm badge-circle badge-floating badge-primary border-white" style="position: absolute; top: -10%; right: 20%; border: solid; color: white; padding: 10px !important; z-index: 30">1</div>
              <div class="text-center" >
                <a href="javascript:;" class="avatar avatar-lg border border-primary imageHover" style="border-radius: 50%">
                  <img style="border-radius: 50%; width: 100%; height: 100%; object-fit: cover;" class="p-1" src="${(data[i].photo ? "https://api.pedbox.co:8590/"+data[i].photo+"" : "https://app.pedbox.co/assets/images/avatars/profile.jpg")}"  onerror="this.style.display='none'">
                </a>
                <p class="mb-0 text-sm">${data[i].nombre}</p>
              </div>
            </div>
          `;
          userBar.append(userDiv)
        }
      }
    }

    const loadFormEdit = function(container, field) {
      let containerID = "#"+container;
      let description = (field.description ? field.description : field.question)
      let idField = (field.id ? field.id : field.id_field)
      let fieldDOM = getFormElement(field.id_type_field, description, idField, field.multiple, field.id_activity_detail);

      // Append element
      if (field.parent) {
        $('#'+field.parent).append(fieldDOM);
      } else {
        $(containerID).append(fieldDOM);
      }

      if (field.id_type_field == 1){
        let input = $(containerID).find('[fieldid='+field.id_field+']');
        if (field.content) {
          $(input).val(field.content)
        }
      };

      if (field.id_type_field == 3){
        let input = $(containerID).find('[fieldid='+field.id_field+']');
        if (field.content) {
          $(input).prop('checked', true);
        }
      };


      if (field.id_type_field == 4){
        let maestroInput = _.findWhere(adminMasters, {id : field.id_master})
        if (maestroInput) {
          let maestros = maestroInput.detail;
          for (let i = 0; i < maestros.length; i++) {
            let element = `
              <option value="${maestros[i].id}" data-code="${maestros[i].code}">${maestros[i].description}</option>
            `;
            $("#dropButton"+field.id).append(element)
          }
          $("#dropButton"+field.id).append(` <option value="-1" selected disabled hidden>Seleccione Aquí</option>`)
        }
      }

      if (field.id_type_field == 5){
        let currentDate = new Date();
        currentDate = currentDate.toISOString().substr(0, 10)
        let input = $(containerID).find('input[type=date]');

        for (let i = 0; i < input.length; i++) {
          $(input[i]).val(currentDate);
        }; // Set current date to all inputs date 

        input = $(containerID).find('[fieldid='+field.id_field+']');
        if (field.content) {
          $(input).val(field.content)
        } // Set content date to particular input date 
      };

      if (field.id_type_field == 6){
        let input = $(containerID).find('[fieldid='+field.id_field+']');
        if (field.content) {
          $(input).val(field.content)
        }
      };

      // TODO cargar respuesta almacenada en field.content para los input radio
      if (field.id_type_field == 9){
        let currentHour = new Date();
        currentHour = currentHour.toLocaleTimeString(navigator.language, {hour: '2-digit', minute:'2-digit'});
        let input = $(containerID).find('input[type=time]');
        
        for (let i = 0; i < input.length; i++) {
          $(input[i]).val(currentHour);
        }

        input = $(containerID).find('[fieldid='+field.id_field+']');
        if (field.content) {
          $(input).val(field.content)
        }
      };

      if (field.id_type_field == 11){
        var now = new Date();
        now.setMinutes(now.getMinutes() - now.getTimezoneOffset());
        let input = $(containerID).find('input[type=datetime-local]');

        for (let i = 0; i < input.length; i++) {
          $(input[i]).val(now.toISOString().slice(0,16));
        }

        input = $(containerID).find('[fieldid='+field.id_field+']');
        if (field.content) {
          $(input).val(field.content)
        }
      };

      if (field.id_type_field == 12){
        let input = $(containerID).find('[fieldid='+field.id_field+']');
        if (field.content) {
          $(input).val(field.content)
        }
      };

      if (field.id_type_field == 13){
        let input = $(containerID).find('[fieldid='+field.id_field+']');
        if (field.content) {
          $(input).val(field.content)
        }
      };

      // Init plugin Dropzone JS
      if (field.id_type_field == 2){
        let maxFiles = 1;
        if (field.multiple) {maxFiles = 4;}

        let input = $(containerID).find('.typeField2');
        try {
          myDropzone = new Dropzone(input[0]);
          myDropzone.options.autoProcessQueue = false;
          myDropzone.options.clickable = true;
          myDropzone.options.addRemoveLinks = true;
          myDropzone.options.maxFiles = maxFiles;
        } catch (error) { }
      }
    };

    const getFormElement = function(field, description, id, multiple, activity_detail) {
      if (field == 1) {
        var fieldReturn =` 
          <div type-field="1" class="typeField1">
            <label for="inputTextDinamico">`+(description ? description : "")+`</label>
            <div class="d-flex w-100" style="" >
              <input fieldID="${id}" data_activity_detail="${activity_detail}" data-kind="1" isMultiple="${multiple ? 'true' : 'false'}" type="text" class="form-control mb-1 ${multiple ? 'w-90' : 'w-100'}" id="inputTextDinamico">
              ${(multiple ? '<div onclick="addCopyField(this)" style="cursor: pointer" class="w-10 d-flex align-items-center justify-content-center classRemove"><i class="fas fa-plus" style="font-size: 20px"></i></div>' : '')}
            </div>
          </div>
        `;
      };
      if (field == 2) {
        var fieldReturn =`
          <div id="${id}">
            <div class="d-flex w-100" fieldID="${id}" data-kind="2" isMultiple="${multiple ? 'true' : 'false'}" data_activity_detail="${activity_detail}">
              <div class="w-100">
                <form class="typeField2" action="https://api.pedbox.co:8590/file-upload" id="drop_file" >
                  <div class="dz-message">`+(description ? description : "")+`<br><i class="fa fa-upload" style="font-size: 30px;padding-top: 10px;"></i></div>
                  <div class="fallback">
                    <input name="file" type="file" multiple="" >
                  </div>
                </form>
              </div>
            </div>
          </div>
        `;
      };
      if (field == 3) {
        var fieldReturn = `
          <div type-field="3" class="typeField3" >
            <label for="checkBoxDinamico">`+(description ? description : "")+`</label>
            <div ${(multiple) ? 'onclick="addCopyField(this)"' : ''} class="d-flex w-100" style="padding-left: 20px">
              <div class="${multiple ? 'w-90' : 'w-100'}" ">
                <input fieldID="${id}" data-kind="3" isMultiple="${multiple ? 'true' : 'false'}"  data_activity_detail="${activity_detail}" type="checkbox" name="" id="checkBoxDinamico">
              </div>
              ${(multiple ? '<div style="cursor: pointer" class="w-10 d-flex align-items-center justify-content-center classRemove"><i class="fas fa-plus" style="font-size: 20px"></i></div>' : '')}
            </div>
          </div>
        `;
      };
      if (field == 4) { 
        var fieldReturn = `
          <div type-field="4" class="typeField4 ${multiple ? 'w-90' : 'w-100'}" " >
            <label for="">`+(description ? description : "")+`</label> <br/>
            <select fieldID="${id}" data-kind="4" isMultiple="${multiple ? 'true' : 'false'}"  data_activity_detail="${activity_detail}" class="form-control" id="dropButton${id}" name="dropButton${id}"></select>
          </div>
        `;
      };
      if (field == 5) {
        var fieldReturn =`
          <div>
            <label for="dateDinamico">`+(description ? description : "")+`</label>
            <div ${(multiple) ? 'onclick="addCopyField(this)"' : ''}class="d-flex w-100" style="">
              <input fieldID="${id}" data-kind="5" isMultiple="${multiple ? 'true' : 'false'}" data_activity_detail="${activity_detail}" type="date" id="dateDinamico" class="form-control ${multiple ? 'w-90' : 'w-100'}"  mb-1">
              ${(multiple ? '<div style="cursor: pointer" class="w-10 d-flex align-items-center justify-content-center classRemove"><i class="fas fa-plus" style="font-size: 20px"></i></div>' : '')}
            </div>
          </div>
        `;
      };
      if (field == 6) {
        var fieldReturn =`
        <div type-field="6" class="typeField6">
          <label for="numberDinamico">`+(description ? description : "")+`</label>
          <div ${(multiple) ? 'onclick="addCopyField(this)"' : ''}class="d-flex w-100" style="">
            <input fieldID="${id}" data-kind="6" isMultiple="${multiple ? 'true' : 'false'}" data_activity_detail="${activity_detail}" type="text" class="form-control mb-1 ${multiple ? 'w-90' : 'w-100'}"  mb-1" id="numberDinamico"></input>
            ${(multiple ? '<div style="cursor: pointer" class="w-10 d-flex align-items-center justify-content-center classRemove"><i class="fas fa-plus" style="font-size: 20px"></i></div>' : '')}
          </div>
        </div>
        `;
      };
      if (field == 7) {
        var fieldReturn =`
          <div type-field="7" class="typeField7" fieldID="${id}" data-kind="7" isMultiple="${multiple ? 'true' : 'false'}" data_activity_detail="${activity_detail}">
            <label for="yes_no_radio">`+(description ? description : "")+`</label>
            <div ${(multiple) ? 'onclick="addCopyField(this)"' : ''} class="d-flex w-100" style="">
              <div class="${multiple ? 'w-90' : 'w-100'}" ">
                <input type="radio" name="yes_no" checked>Sí</input> <br>
                <input type="radio" name="yes_no">No</input>
              </div>
              ${(multiple ? '<div style="cursor: pointer" class="w-10 d-flex align-items-center justify-content-center classRemove"><i class="fas fa-plus" style="font-size: 20px"></i></div>' : '')}
            </div>
          </div>
        `;
      };
      if (field == 8) {
        var fieldReturn =`
          <div type-field="8" class="typeField8" id="${id}" fieldID="${id}" data-kind="8">
            <h6>`+(description ? description : "")+`</h6>
          </div>
        `;
      };
      if (field == 9) {
        var fieldReturn =`
          <div class="typeField9" type-field="9">
            <label for="timeDinamico">`+(description ? description : "")+`</label>
            <div ${(multiple) ? 'onclick="addCopyField(this)"' : ''} class="d-flex w-100" style="">
              <input fieldID="${id}" data-kind="9" isMultiple="${multiple ? 'true' : 'false'}" data_activity_detail="${activity_detail}" type="time" id="timeDinamico" name="appt" class="form-control ${multiple ? 'w-90' : 'w-100'}"  mb-1">
              ${(multiple ? '<div style="cursor: pointer" class="w-10 d-flex align-items-center justify-content-center classRemove"><i class="fas fa-plus" style="font-size: 20px"></i></div>' : '')}
            </div>
          </div>
        `;
      };
      if (field == 11) {
        var fieldReturn =`
          <div class="typeField11" type-field="11">
            <label for="dateTimeDinamico">`+(description ? description : "")+`</label>
            <div ${(multiple) ? 'onclick="addCopyField(this)"' : ''} class="d-flex w-100" style="">
              <input fieldID="${id}" data-kind="11" isMultiple="${multiple ? 'true' : 'false'}"  data_activity_detail="${activity_detail}" type="datetime-local" id="dateTimeDinamico" class="form-control ${multiple ? 'w-90' : 'w-100'}"  mb-1" onload="getDate(this)"> 
              ${(multiple ? '<div style="cursor: pointer" class="w-10 d-flex align-items-center justify-content-center classRemove"><i class="fas fa-plus" style="font-size: 20px"></i></div>' : '')}
            </div>
          </div>
        `;
      };
      if (field == 12) {
        var fieldReturn =`
          <div class="typeField12" type-field="12">
            <label for="moneyInput">`+(description ? description : "")+`</label>
            <div ${(multiple) ? 'onclick="addCopyField(this)"' : ''} class="d-flex w-100" style="">
              <input fieldID="${id}" data-kind="12" isMultiple="${multiple ? 'true' : 'false'}"  data_activity_detail="${activity_detail}" type="number" min="1" step="any" id="moneyInput" class="form-control ${multiple ? 'w-90' : 'w-100'}"  mb-1"/>
              ${(multiple ? '<div style="cursor: pointer" class="w-10 d-flex align-items-center justify-content-center classRemove"><i class="fas fa-plus" style="font-size: 20px"></i></div>' : '')}
            </div>
          </div>
        `;
      };
      if (field == 13) {
        var fieldReturn =`
          <div type-field="13" class="typeField13">
            <label for="textAreaDinamico">`+(description ? description : "")+`</label>
            <div ${(multiple) ? 'onclick="addCopyField(this)"' : ''} class="d-flex w-100" style="">
              <textarea fieldID="${id}" data-kind="13" isMultiple="${multiple ? 'true' : 'false'}" data_activity_detail="${activity_detail}"  id="textAreaDinamico" class="form-control mb-3 ${multiple ? 'w-90' : 'w-100'}"  mb-1" name="" id="" cols="30" rows="10"></textarea>
              ${(multiple ? '<div style="cursor: pointer" class="w-10 d-flex align-items-center justify-content-center classRemove"><i class="fas fa-plus" style="font-size: 20px"></i></div>' : '')}
            </div>
          </div>
        `;
      };
      return fieldReturn;
    }

    const getFormElementResponse = function (type, question, content, icon) {
      // Asociar iconos antiguos angular con iconos de fontAwesome
      let iconsFontAwesome = {
        "input-text":"fas fa-font",
        "checkbox":"far fa-check-square",
        "select" : "",
        "input-date":"far fa-calendar",
        "input-money" : "",
        "input-datetime" : "",
        "input-text" : "",
        "textarea":"fas fa-align-justify",
        "image":"fas fa-images",
        "slide-textarea" : ""
      }
      iconSelect = iconsFontAwesome[icon];

      // Remover contenido no deseado en el campo checkbox
      if (type == 3) {
        content = "";
      }

      if (type == 2 && content != "") {
        content = `
          <div class="d-flex justify-content-center">
            <img src="https://api.pedbox.co:8590/media/formats?strarchivo=${content}" alt="" class="imgFormView">
          </div> 
        `;
      }
    
      let fieldReturn = `
        <div class="d-flex mb-3"> 
          <div style="width: 50px" class="d-flex justify-content-center align-items-center"><i class="`+(iconSelect ? iconSelect : "fas fa-font")+`"></i></div>
          <div type-field="13" class="d-flex flex-column w-100">
            <span class="fs-13 font-weight-bold">`+(question ? question : "")+`</span>
            <span style="border-bottom: 1px solid rgba(0,0,0,.12)">`+(content ? content : "")+`</span>
          </div>
        </div>
      `;

      if (!question && !content) {fieldReturn = ""}
      return fieldReturn;
    }

    const addCopyField = function (element) {
      let elementClone = element.parentElement.cloneNode(true);
      $(elementClone).find(".classRemove").attr("onclick","$(this).parent().remove()");
      $(elementClone).find("i").replaceWith('<i class="fas fa-minus" style="font-size: 20px"></i>');
      $(element).parent().parent().append(elementClone);
    }

    // TODO: eliminar
    // const addFileField = function (id) {
    //   element = `
    //     <div class="d-flex">
    //       <div class="w-90">
    //         <form class="typeField2" action="https://api.pedbox.co:8590/file-upload" id="drop_file" fieldID="${id}">
    //           <div class="dz-message"><br><i class="fa fa-upload" style="font-size: 30px;padding-top: 10px;"></i></div>
    //           <div class="fallback">
    //             <input name="file" type="file" multiple="">
    //           </div>
    //         </form>
    //       </div>
    //       <div class="w-10 pt-7 text-center" style="cursor: pointer" title="Eliminar Campo" onclick="this.parentElement.remove()">
    //         <i class="fas fa-minus" style="font-size: 20px"></i>
    //       </div>
    //     </div>
    //   `;
    //   $("#"+id).append(element)

    //   let fieldArray = $("[fieldID="+id+"]");

    //   let myDropzone = new Dropzone(fieldArray[fieldArray.length - 1]);
    //   myDropzone.options.autoProcessQueue = false;
    //   myDropzone.options.clickable = true;
    //   myDropzone.options.addRemoveLinks = true;

    //     //Petición para guardar imagenes 
    //     // myDropzone.on("addedfile", (file) => {
    //     //     var objDataForm = new FormData();
    //     //     objDataForm.append('attachment', file);
    //     //     objDataForm.append('typeAttached', 'attached');
    //     //     $.ajax({
    //     //         url: server+'/upload',
    //     //         data: objDataForm,
    //     //         cache: false,
    //     //         contentType: false,
    //     //         processData: false,
    //     //         method: 'POST',
    //     //         type: 'POST'
    //     //     })
    //     //     .done((result) => {
    //     //         files_to_send.push({"file": file, "result": result});
    //     //         myDropzone.emit("complete", file);
    //     //     })
    //     // });
    // }

    // TODO funcion dberia ser eliminada
    // const loadCombobox = function (button, data) {
    //   for (let i = 0; i < data.length; i++) {
    //     element =`
    //       <option value="${data[i].description}">${data[i].description}</option>
    //     `;
    //     $("#"+button).append(element)
    //   }
    //   $("#"+button).append("<option style='cursor: default' value='' selected disabled hidden>Seleccione</option>")
    // }

    const loadNewFormatModal = function (id, id_node, id_workflow_header) { //Funcion de prueba
      fetch("/helpdesk/newFormat/"+id+"/"+id_node+"/"+id_workflow_header)
      .then(response => response.json())
      .then(data => {
        $('#nuevaIncidenciaModal').modal('hide');
        $('#nuevaTareaModal').modal("show");
        $('#nuevaTareaModal').attr("data-activity", id);
        $('#nuevaTareaModal').attr("data-idNode", id_node);
        $('#nuevaTareaModal').attr("data-idWorkflow", id_workflow_header);
        $("#nuevaTareaModalContent").html("");

        adminMasters = data[1].result.maestros;   
        let fields = data[0].result.detail_activity.detail;
        let sortedFields = _.sortBy(fields, 'order_f');
        let container = "nuevaTareaModalContent";
        sortedFields.forEach(field => loadFormEdit(container,field));
      })
      .catch(error => console.log('Request failed', error));
    }

    const loadFormatEdit = function (id, id_header, title, idWorkflowHeader) {
      fetch("/helpdesk/editFormat/"+id+"/"+id_header)
      .then(response => response.json())
      .then(data => {    
        field = data.result.detail_activity;

        $('#editarFormatoBody').html("");
        $("#editarFormatoModaltitle").html(title)

        $("#editarFormatoModal").attr("data_activity", id);
        $("#editarFormatoModal").attr("data_header", id_header);
        $("#editarFormatoModal").attr("data_workflowHeader", idWorkflowHeader);

        let container = "editarFormatoBody"
        field.forEach(field => loadFormEdit(container, field));
        $('#editarFormatoModal').modal('show');
       }) 
      .catch(error => console.log('Request failed', error));
    }

    const loadFormatRead = function(id_answer_format, title) {
      $("#verFormatoTitle").html("")
      fetch("/helpdesk/formatRead/"+id_answer_format)
      .then(response => response.json())
      .then(data => {
        $("#verFormatoTitle").html(title)
        let field = data.result.attendFormat.detail;

        $('#verFormatoBody').html('<div class=" p-3"></div>');
        for (let i = 0; i < field.length; i++) {
          let fieldDOM = getFormElementResponse(field[i].id_type_field, field[i].question, field[i].content, field[i].web_type);
          $('#verFormatoBody>div').append(fieldDOM);
        }
        $('#verFormatoModal').modal('show');

      }) 
      .catch(error => console.log('Request failed', error));
    }

    const prepareDataIncidence = function(data) {
      data.workflow['dateBeatiful'] = nvFormatDate(data.workflow.date, "mmmm DD, YYYY, hhhh:mm ampm");

      data.workflow['percentage'] = 0;
      if(data.workflow.actual && data.workflow.total) {
        data.workflow['percentage'] = (data.workflow.actual / data.workflow.total) * 100;
        data.workflow['percentage'] = data.workflow['percentage'].toFixed(0);
      }

      if(data.workflow.id_format_request) {
        data.workflow['infoFormatRequest'] = getFilterFormat(data.workflow.id_format_request);
      }

      for (let node of data.workflow.nodes) {
        node['dateBeatiful'] = nvFormatDate(node.date, "mmmm DD, YYYY, hhhh:mm ampm");
        node['infoArea'] = getFilterArea(node.id_area);
        node['infoClass'] = getFilterClass(node.id_class);
        node['infoFormat'] = getFilterFormat(node.id_format);
        if(typeof(node['resume']) != "undefined") {
          if(node['resume'] != null && node['resume'] != "" && node['resume']) {
            if(typeof(node['resume']) != 'object') {
              node['resume'] = eval(node['resume'].replace(/(\n)/g, ' '));
            }
          }else {
            node['resume'] = [];
          }
        }else {
          node['resume'] = [];
        }
      }
      return data
    }

    const loadTimeLineModal = function(data) {
      data = prepareDataIncidence(data);
      currentIncidence = data;

      let title = data.workflow.name+ "- REQ "+ data.workflow.number;
      $('#timeLineTitle').text(title);

      if (data.workflow.action_status == 'finish') {
        $('#timeLineBar').css("width", "100%")
        $('#timeLineBarN').text("100%")
      } else {
        $('#timeLineBar').css("width", data.workflow.percentage+"%")
        $('#timeLineBarN').text(data.workflow.percentage+"%")
      }

      const timeLineHeadTags = $('#timeLineHeadTags');
      
      timeLineHeadTags.html("")
      timeLineHeadTags.append(`<div class="card p-1 rounded"> <h6 class="m-0">Tipo de proyecto:</h6> `+data.workflow.description+`</div>`);
      for (var i in data.workflow.nodes[0].resume) {
        timeLineHeadTags.append(`<div class="card p-1 rounded"> <h6 class="m-0">`+data.workflow.nodes[0].resume[i].question+`:</h6> `+data.workflow.nodes[0].resume[i].answer+`</div>`);
      };

      timeLineHeadTags.append(`<div class="card p-1 rounded"> <h6 class="m-0">Paso:</h6> `+data.workflow.nodes[(data.workflow.nodes.length - 1)].description_node+`</div>`);

      if (data.workflow.user_request) {
        timeLineHeadTags.append(`<div class="card p-1 rounded"> <h6 class="m-0"> Solicitado: </h6>`+data.workflow.user_request+`</div>`);
      } else {
        timeLineHeadTags.append(`<div class="card p-1 rounded"> <h6 class="m-0"> Solicitado: </h6>`+data.workflow.nodes[0].first_name + " " +  data.workflow.nodes[0].second_name+`</div>`);
      }

      //Modal body 
      const timeLineMain = $("#timeLineMain");
      timeLineMain.html("");
      let timeLineKind = data.workflow.id_request;
      if (timeLineKind){
        let timeLineElement = ` 
          <div class="timeline-block mb-3" id="${data.workflow.id}">
            <div class="timeline-content" style="margin: 0 auto;">
              <div class="d-flex justify-content-lg-between align-items-center">
                <h6 class="text-dark text-sm font-weight-bold mb-0">Llenado Aut 1 </h6>
                <div style="width: 50px; height: 50px; background-color: gray; border-radius: 50%;">
                  <img src="${(data.workflow.photo_user_request ? "https://api.pedbox.co:8590/"+data.workflow.photo_user_request+"" : "https://app.pedbox.co/assets/images/avatars/profile.jpg")}" alt="" style="max-width: 100%; max-height: 100%; border-radius: 50%">
                </div>
              </div>
              <p class="text-sm mt-1 mb-2">
                <span class="font-weight-bold">Formato:</span> `+data.workflow.infoFormatRequest.description+`<br>
                <span class="font-weight-bold">Grupo:</span> `+data.workflow.user_group+` <br>
                <span class="font-weight-bold">Subgrupo:</span> `+data.workflow.user_subgroup+` <br>
                <span class="font-weight-bold">fecha:</span> `+data.workflow.dateBeatiful+`
              </p>
              <div class="d-flex justify-content-center mt-3"><button type="button" class="btn btn-secondary m-0 verSolicitudTimeline" data-format="${data.workflow.id_request}" data-title="${data.workflow.infoFormatRequest.description}">Ver Solicitud</button></div>
            </div>
          </div>
        `;
        timeLineMain.append(timeLineElement)
      }

      for (let i = 0; i < data.workflow.nodes.length; i++) {
        x = data.workflow.nodes;

        let timeLineElement = ` 
          <div class="timeline-block mb-3" id="${data.workflow.id}" idWorkflow="${data.workflow.id_workflow}" idNode="${x[i].id_node}" idFormat="${x[i].id_format}" idFormatAnswer="${x[i].id_format_answer}" data-title="${x[i].infoFormat.description}">
            <span class="timeline-step">
              <div style="width: 50px; height: 50px; background-color: gray; border-radius: 50%;">
                <img src="${(x[i].photo ? "https://api.pedbox.co:8590/"+x[i].photo+"" : "https://app.pedbox.co/assets/images/avatars/profile.jpg")}" alt="" style="max-width: 100%; max-height: 100%; border-radius: 50%">
              </div>
            </span>
            <span class="timeline-step" style="left: `+( timeLineKind ? (i % 2 ? "66%" : "33%") : (i % 2 ? "33%" : "66%"))+`; width: 150px !important; font-size: small;">
              `+x[i].dateBeatiful+`  <br>
              `+x[i].first_name+` `+x[i].first_lastname+`
            </span>
            <div class="timeline-content">
              <h6 class="text-dark text-sm font-weight-bold mb-0">`+x[i].description_node+`</h6>
              <p class="text-sm mt-3 mb-2">
                <span class="font-weight-bold">Mesa de ayuda:</span> `+x[i].infoArea.description+`<br>
                `+(x[i].infoClass.description ? "<span class='font-weight-bold'>Formato: </span> "+x[i].infoClass.description+"<br>" : "")+` 
                <span class="font-weight-bold">Formato:</span>  `+x[i].infoFormat.description+`
              </p>
              <button type="button" class="btn btn-secondary formatModal" data-format="${x[i].id_format_answer}" data-title="${x[i].description_node + " - " + x[i].first_name + " " + x[i].first_lastname}">Ver formato</button>
              <button type="button" class="btn btn-primary editarFormatoModal">Editar</button>
            </div>
          </div>
        `;
        timeLineMain.append(timeLineElement)
      }
      $('#timelineModal').modal('show');
    }

    const loadRequests = function (data) {
      const consultaSolicitudModalMain = $("#consultaSolicitudModalMain");
      consultaSolicitudModalMain.html("")
      let amount = (data.length > 99 ? 100 : data.length)
      for (let i = 0; i < amount; i++) { // limitada a 100 por problemas de optimización
        let consultaSolicitudElement = `
          <div class="col-6 my-2 px-2 cardParent" id="${data[i].id_answer_format}" userId="${data[i].id_user}">
            <div class="card" style="height: 100%">
              <div class="p-3">
                <h5>${data[i].format_name}</h5>
              </div>
              <div class="card-body p-3 cardBodySolicitud">
                <div><h6># Solicitud:&nbsp;</h6> ${data[i].id_answer_format}</div>
                <div><h6>Usuario:&nbsp;</h6> ${data[i].user}</div>       
                <div><h6>Fecha:&nbsp;</h6> ${data[i].dateB}</div>       
                <div><h6>Hora:&nbsp;</h6> ${data[i].hourB}</div>       
                <div><h6>Estado:&nbsp;</h6> ${(data[i].info_status ? data[i].info_status.description : '')}&nbsp <div style="background-color:${(data[i].info_status ? data[i].info_status.bg : "")}; width: 10px; height: 10px; border-radius: 50%; align-self: center; margin-top: 3px; margin-left: 5px"></div></div>  
                ${(data[i].comment ? "<div><h6>Notas:&nbsp;</h6>"+data[i].comment+"</div>" : "")} 
              </div>
              <div class="d-flex justify-content-center align-items-center">
                <div style="width: 50px; height: 50px; background-color: gray; border-radius: 50%;">
                  <img src="${(data[i].photo ? "https://api.pedbox.co:8590/"+data[i].photo+"" : "https://app.pedbox.co/assets/images/avatars/profile.jpg")}" alt="" style="max-width: 100%; max-height: 100%; border-radius: 50%">
                </div>
              </div>
              <hr class="horizontal dark">
              <div class="d-flex justify-content-center align-items-center gap-2">
                ${(!data[i].id_workflow_header && !data[i].comment ? "<button class='btn btn-danger solicitudesCerrarBtn'>Cerrar</button>" : "")}
                <button class="btn btn-info solicitudesVerBtn" data-format="${data[i].id_answer_format}" data-title="${data[i].format_name + " - " +data[i].user}">Ver</button>
                ${(!data[i].id_workflow_header && !data[i].comment ? "<button class='btn btn-success solicitudesIniciarBtn'>Iniciar</button>" : "")}
                ${(data[i].comment ? "<button class='btn btn-success solicitudesReabrirBtn'>Reabrir</button>" : "")}
              </div>
            </div>
          </div>
        `;
        consultaSolicitudModalMain.append(consultaSolicitudElement)
      };
      if (!data.length) {
        consultaSolicitudModalMain.append("<div class='text-center'><h6>No hay resultados para la busqueda</h6></div>")
      }
    }

    // consulta solicitud funcion
    let solicitudesListaCompleta = {};
    const loadConsultIncidencesModal= function () {
      fetch("/helpdesk/solicitudes")
      .then(response => response.json())
      .then(data => { 
        data = data.res;
        solicitudesListaCompleta = data;

        let filtrados = _.groupBy(data.cards, o => { return o.info_status.description })['Abiertas'].concat(_.groupBy(data.cards, o => { return o.info_status.description })['En curso'])
        loadRequests(filtrados)

        // Modal sidebar
        const consultaSolicitudModalSide = $("#consultaSolicitudModalSide");
        consultaSolicitudModalSide.html("");
        for (let i = 0; i < data.sideBar.length; i++) {
          let sideElement = `
            <div class="list-group-item" style="border: none;">
              <div class="d-flex justify-content-between" style="margin-bottom: 5px;">
                <a class="font-weight-bold" data-bs-toggle="collapse" href="#`+data.sideBar[i].uid+`" role="button" aria-expanded="false" aria-controls="`+data.sideBar[i].uid+`">
                  `+data.sideBar[i].description+`
                </a>
                <span class="badge badge-primary badge-pill" style="margin-right: 15px; font-size:17px; background-color: transparent; color: #495057">`+data.sideBar[i].count+`</span>
              </div>
            </div>
          `;
          consultaSolicitudModalSide.append(sideElement)

          // En caso de que sea un solo collapse
          if (data.sideBar[i].subgroups.length == 1){
            let y =`
              <div class="collapse" id="`+data.sideBar[i].uid+`">
                <ul class="list-group" style="border: none;">
                </ul> 
              </div>
            `;
            $("#consultaSolicitudModalSide>div:last").append(y)

            for (let e = 0; e < data.sideBar[i].subgroups[0].users.length; e++) {
              let x = `
                <a href="#" class="list-group-item d-flex justify-content-between align-items-center linkName" style="border: none; color: #a3017e; padding-top: 0 !important; padding-bottom: 0 !important" value="`+data.sideBar[i].subgroups[0].users[e].id_user+`">
                  `+data.sideBar[i].subgroups[0].users[e].description+`
                  <span class="badge badge-primary badge-pill" style="font-size:17px; background-color: transparent; color: #495057">`+data.sideBar[i].subgroups[0].users[e].count+`</span>
                </a>
              `;
              $("#consultaSolicitudModalSide>div:last ul").append(x)
            }
          } else { //En caso de que sea un collapse anidado 
            let y =`
              <div class="list-group"></div>
            `;
            $("#consultaSolicitudModalSide>div:last").append(y)

            for (let e = 0; e < data.sideBar[i].subgroups.length; e++) {
              let x = `
              <div class="collapse list-group-item ps-3" id="`+data.sideBar[i].uid+`" style="border: none; padding-top: 0 !important; padding-bottom: 0 !important">
                  <div class="" id="gg`+data.sideBar[i].uid+`">

                  </div>
              </div>
              `;
              $("#consultaSolicitudModalSide>div:last").find(".list-group").append(x)

              let z = `
                <div class="d-flex justify-content-between" style="margin-bottom: 5px;">
                  <a class="" data-bs-toggle="collapse" href="#`+data.sideBar[i].subgroups[e].uid+`" role="button" aria-expanded="false" aria-controls="collapseExampleaa">
                    `+data.sideBar[i].subgroups[e].description+`
                  </a>
                  <span class="badge badge-primary badge-pill" style="font-size:17px; background-color: transparent; color: #495057">14</span>
                </div>
                <div class="collapse ps-3" id="`+data.sideBar[i].subgroups[e].uid+`"></div>
              `;
              $("#gg"+data.sideBar[i].uid).append(z)

              for (let w = 0; w < data.sideBar[i].subgroups[e].users.length; w++) {
                let o = `
                <div class="d-flex justify-content-between" style="margin-bottom: 5px;">
                  <a href="#" class="linkName" style="color: #a3017e" value="`+data.sideBar[i].subgroups[e].users[w].id_user+`">`+data.sideBar[i].subgroups[e].users[w].description+`</a>
                  <span class="badge badge-primary badge-pill" style="font-size:17px; background-color: transparent; color: #495057">`+data.sideBar[i].subgroups[e].users[w].count+`</span>
                </div>
                `;
                $("#"+data.sideBar[i].subgroups[e].uid).append(o)
              }
            }
          }
        }
        $("#consultaSolicitudModal").modal('show')
      })
      .catch(error => console.log('Request failed', error));
    }

    const loadNewIncidenceModal = function() {
      let id_company = session.user.id_company;
      let id_area = content.result.helpdesk[0].id;

      fetch('/helpdesk/worflow/'+id_company+'/'+id_area)
      .then(response => response.json())
      .then(data => { 

        data = data.result.groups;

        $("#workFlowContainer").html("");
        $("#slidesSelector").html("")

        const slidesSelector = $("#slidesSelector");
        const workFlowContainer = $("#workFlowContainer");
        
        for (let i = 0; i < data.length; i++) {
          slideIndicator = `
            <li class="selectSlide nav-item flex-fill text-center" name="slide`+(i+1)+`">
              <a class="nav-link mb-0 px-0 py-1 fw-bold"  href="javascript:;" >
                <span class="ms-1 text-capitalize">`+data[i].description.toLowerCase()+`</span>
              </a>
            </li>
          `;
          slidesSelector.append(slideIndicator)

          slidesContainer = `
            <div id="slide`+(i+1)+`"></div>
          `;
          workFlowContainer.append(slidesContainer)

          for (let e = 0; e < data[i].workflow.length; e++) {
            let id = data[i].workflow[e].first_node[0].node.id_format;
            let id_node = data[i].workflow[e].first_node[0].node.id;
            let id_workflow_header = data[i].workflow[e].first_node[0].id_workflow;

            let slideContainerItem = `
              <div class="col-lg-4 col-md-6 mb-4">
                <div class="card" style="min-height: 150px">
                  <div class="card-body p-3">
                    <div class="d-flex">
                      <div class="m-3 my-auto">
                        <h5>`+data[i].workflow[e].name+`</h5>
                        <div>
                          <h6 class="my-0">Nombre nodo: </h6> <span class="text-sm mt-3">`+data[i].workflow[e].first_node[0].node.description+`</span>
                        </div>
                      </div>
                      <div class="ms-auto">
                        <div>
                          <button onclick="loadNewFormatModal(${id}, ${id_node}, ${id_workflow_header})" id="nuevaTarea" type="button" class="btn btn-link text-secondary ps-0 pe-2 closeNuevaIncidenciaModal" >
                            <i class="fa fa-plus text-secondary mb-3" style="font-size: 21px"></i>
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            `;
            $("#slide"+(i+1)).append(slideContainerItem)
          }
        }

        $("#workFlowContainer>div").hide();
        $("#workFlowContainer>div:first").show();
        $("#nuevaIncidenciaModal").modal("show");
        
        $("#slidesSelector>li:first").addClass("navCustom")
      })
      .catch(error => console.log('Request failed', error));
    }

    const loadIncidenceFill = function (data) { //1-Ver 2-Editar
      $('#verFormatoLlenado').html(""); // Clean previus content
      $("#llenadoModalGestiones").html("");

      //*** Section 1
      $("#llenadoModalNumber").html(data.workflow.number);
      $("#llenadoModalDate").html(data.workflow.due_date);
      $("#llenadoModalTitle").html(data.subject);
      $("#llenadoModalUserReport").html(data.user_report);
      $("#llenadoModalStateComp").html(data.frequency);
      $("#llenadoModalStateassigned").html("")
      $("#llenadoModalButtons").find(".takeIncidence").remove();

      if (userCanTakeTask && data.status != 3 && data.status != 1) {
        $("#llenadoModalButtons").append(`<button data-activitie="${data.id}" data-user="${session.user.id}" type="button" class="btn bg-gradient-primary takeIncidence">Tomar Incidencia</button>`)
      }

      if (data.status == 4) {
        $("#horizontalSendButton").hide()
        $("#sendDataFormularioDinamicoButton").hide()
      } else {
        $("#horizontalSendButton").show()
        $("#sendDataFormularioDinamicoButton").show()
      }

      if (data.user_take) {
        let element =` 
          <div class="d-flex align-items-center">
            <h6 class="mb-0 small">Asignado a:&nbsp;</h6> 
            <span class="text-xs font-weight-bolder">${data.user_take}</span>
          </div>
        `;
        $("#llenadoModalStateassigned").append(element)
      };
      if (data.class) {
        let element =` 
          <div class="d-flex align-items-center">
            <h6 class="mb-0 small">Asignado a:&nbsp;</h6> 
            <span class="text-xs font-weight-bolder">${data.class}</span>
          </div>
        `;
        $("#llenadoModalStateassigned").append(element)
      };

      let color;
      if(data.id_priority == 8){color = "#F44336"}
      if(data.id_priority == 9){color = "#FFEB3B"}
      if(data.id_priority == 10){color = "#2196F3"}
      $("#modalLlenadoColor").css("background-color", color)

      //** Section 2 
      let idFormatAnswer = data.workflow.nodes[data.workflow.nodes.length - 1].id_format_answer || false;
      let route = '/helpdesk/detail/'+data.id_format+'/'+data.id_node+'/'+data.id_workflow_header+'/'+data.id_workflow+'/'+data.id+'/'+idFormatAnswer;
      fetch(route)
      .then(response => response.json())
      .then(response => { 
        if (response.response.result.success) {
          if (data.status != 4) { //Incidente cerrado
            if (data.status == 3 ) { // Incidente completados
              $("#sendDataFormularioDinamicoButton").css("display", "none")
              let field = response.attendFormat.result.attendFormat.detail;
              let containerID = "verFormatoLlenado"
      
              $('#verFormatoLlenado').append('<div class="fieldLlenado p-3"></div>');
              for (let i = 0; i < field.length; i++) {
                let fieldDOM = getFormElementResponse(field[i].id_type_field, field[i].question, field[i].content, field[i].web_type); 
                $('#verFormatoLlenado>div').append(fieldDOM);
              }  
            } else {
              let data = response.response.result.detail_activity.detail
              let sortedFields = _.sortBy(data, 'order_f');
              let container = "verFormatoLlenado";
              sortedFields.forEach(field => loadFormEdit(container, field)); 
            }
          }
        }

        const llenadoGestiones = $("#llenadoModalGestiones");
        let seguimiento = response.activitie.result;
        if (seguimiento.success) {
          seguimiento = seguimiento.management
          
          if (seguimiento.length == 0) {$("#llenadoModalGestionesState").html("No hay gestiones creadas")}
          
          for (let i = 0; i < seguimiento.length; i++) {
            let state; 
            if (seguimiento[i].state == 1 || seguimiento[i].state == 0) {state = "Pendiente"}
            if (seguimiento[i].state == 2) {state = "En curso"}
            if (seguimiento[i].state == 3) {state = "Completado"}

            let element = `
              <div class="fieldLlenado p-3" >
                <div class="d-flex justify-content-between">
                  <div class="d-flex align-items-center">
                    <div class="mx-3" style="width: 50px; height: 50px; border-radius: 50%; background-color: gray;">
                      <img src="${(seguimiento[i].photo ? "https://api.pedbox.co:8590/"+seguimiento[i].photo+"" : "https://app.pedbox.co/assets/images/avatars/profile.jpg")}" alt="" style="max-width: 100%; max-height: 100%; border-radius: 50%">  
                    </div>
                    <div>
                      <h6>${seguimiento[i].user}</h6>
                      <div class="d-flex align-items-center"> 
                      <h6 class="my-0">Fecha Inicial:&nbsp; </h6> <span class="text-xs font-weight-bolder" style="position: relative; top: 1px">${seguimiento[i].date_begin}</span> &nbsp;&nbsp;
                      <h6 class="my-0">Fecha Final:&nbsp; </h6> <span class="text-xs font-weight-bolder" style="position: relative; top: 1px">${seguimiento[i].date_end}</span>
                      </div>
                    </div>
                  </div>
                  <div style="cursor: pointer" class="activeTextarea" idGestion="gestion${seguimiento[i].id}">
                    <i class="fas fa-pen" style="font-size:22px"></i>
                  </div>
                </div>
                <div class="my-2">
                  <textarea id="gestion${seguimiento[i].id}"class="my-0 px-1 textareaReadOnly activeTextareaX form-control" style="resize:none" ">${seguimiento[i].note}</textarea>
                  <div class="d-flex mt-1">
                    <h6 class="my-0 ps-1">horas:&nbsp; </h6> <span style="position: relative; top: 1px">${seguimiento[i].hour ? seguimiento[i].hour : "0"}</span> &nbsp;&nbsp;&nbsp;
                    <h6 class="my-0">Estado:&nbsp; </h6> <span style="position: relative; top: 1px">${state}</span> &nbsp;&nbsp;&nbsp;
                    ${seguimiento[i].description ? '<h6 class="my-0">Trabajo:&nbsp; </h6> <span style="position: relative; top: 1px">'+seguimiento[i].description+'</span>' : ''}
                  </div>
                </div>
              </div>
            `;
            llenadoGestiones.append(element)
          }
        }
      })
      .catch(error => console.log('Request failed', error));
      $("#llenadoModal").modal("show");
    }

    // PlumbJs 
    const loadFlowDiagram = function () {
      $('#diagramVPD').html('');
      $('#procesoModal').modal('show');

      let dataGetDiagram = {
        actual : currentIncidence.workflow.actual,
        id_group : currentIncidence.workflow.id_group,
        id_workflow : currentIncidence.workflow.id_workflow,
        nodes : currentIncidence.workflow.nodes,
      }

      fetch('/helpdesk/proceso', {
        method: 'POST',
        headers: {'Accept': 'application/json', 'Content-Type': 'application/json'},
        body: JSON.stringify(dataGetDiagram)
      })
      .then(res => res.json())
      .then(res =>{   
        res.selected = currentIncidence.workflow;
        setData(res);
      })
    }

    var rows = {};
    var master = { "nodes": [] };
    var diagramVPD = {
      "elements": [],
      "instances": {},
      "endpoints": {},
      "nodeStart": null,
      "nodeEnd": null
    } 

    const setData = function(x) {
      rows = x;
      master = rows.master;
      printPlumb(rows.workflow.nodes);
    }

    const printPlumb = function(input) {// this.rows.workflow
      if(diagramVPD.instances['default']) {
        diagramVPD.instances['default'].reset();
      }
      diagramVPD.elements = [];
      initJsPlumb();

      setTimeout(() => {
        for (let value of input) {
            let filterNode = master.nodes.filter((a) => {
              return (""+a.id == ""+value.id_node)? true: false;
            })[0];

            if(filterNode) {              
              addNodeToPlumb(filterNode, {
                "offsetleft": value.offsetleft,
                "offsettop": value.offsettop,
                "identifier": value.identifier,
                "connections": value.connections
              });
          }
        }

        setTimeout(() => {
          for (let value of input) {
            addConnectionsPlumb(value);
          }
          // this.setStartEndNode(input);
        }, 800);
      }, 0);
    }

    const initJsPlumb = function() {
      jsPlumb.ready(() => {
        jsPlumb.setContainer("diagramVPD");
        diagramVPD.instances['default'] = jsPlumb.getInstance({
          "Endpoint": ["Dot", {"radius": 2}],
          "Connector": ["Flowchart", {"cornerRadius": 5}],
          "HoverPaintStyle": {"stroke": "#1e8151", "strokeWidth": 2},
          "ConnectionOverlays": [["Arrow", {"location": 1,"id": "arrow","length": 10,"foldback": 0.8, "width": 14}]],
          "Container": "diagramVPD"
        });

        diagramVPD.instances['default'].registerConnectionType("basic", {
          "anchor": "Continuous",
          "connector": ["Flowchart", {"cornerRadius": 5}]
        });
      });
    }

    const addNodeToPlumb = function(input, options) {
      let newId = ((options.identifier)? options.identifier: "node"+input.id+"plumb"+(new Date().getTime()));
      let newIdEndpoint = newId.replace("node", "endpoint");

      let actualN =  false;
      let beforeN = false;
      let afterN = false;
      let auxClass = "";

      if(rows.before.indexOf(input.id) != -1) {
        beforeN = true;
        auxClass += " beforeN";
      }else {
        afterN = true;
        auxClass += " afterN";
      }

      diagramVPD.elements.push({
        "id": newId,
        "class": input.infoFigure.class+auxClass,
        "description": input.infoFigure.description,
        "actualN": actualN,
        "beforeN": beforeN,
        "afterN": afterN,
        "info": input
      });

      elementPrint = diagramVPD.elements.slice(-1)[0]
      let flujoElement = `
        <div id="`+elementPrint.id+`" class="item itemPlumb `+elementPrint.class+`" >
            <div class="ep"></div>
            <div class="content">
                <div >
                  <span class="description">`+elementPrint.info.description+`</span>
                  <div class="description">`+(elementPrint.info.infoArea.description ? elementPrint.info.infoArea.description : "")+`</div>  
                  <i class="fas fa-eye formatModal" data-id="${elementPrint.info.id_format}" data-title="${elementPrint.info.description}" style="font-size: 22px, margin-top: 5px" title="Ver Formato" ></i>
                </div>
            </div>
        </div>
      `;
      $('#diagramVPD').append(flujoElement);

      setTimeout(() => {
        if(options.offsetleft && options.offsettop) {
          $("#"+newId).css({
            "left": parseFloat(options.offsetleft),
            "top": parseFloat(options.offsettop)
          });
        }
        setTimeout(() => {
          var elNode = document.getElementById(newId);
          diagramVPD.instances['default'].makeSource(elNode, {
            "filter": ".ep",
            "anchor": "Continuous",
            "connectorStyle": {
              "stroke": "#858585",
              "strokeWidth": 2,
              "outlineStroke": "transparent",
              "outlineWidth": 4
            },
            "connectionType": "basic",
            "extract": {
              "action": "the-action"
            },
            "maxConnections": 2
          });

          diagramVPD.instances['default'].makeTarget(elNode, {
            "dropOptions": {
              "hoverClass": "dragHover"
            },
            "anchor": "Continuous",
            "allowLoopback": true
          });
        }, 0);
      }, 300);
    }

    const addConnectionsPlumb = function(options) {
      if(options.connections) {
        if(options.connections.length) {
          for (let connection of options.connections) {
            if(connection.source && connection.target) {
              diagramVPD.instances['default'].connect({
                source: connection.source,
                target: connection.target,
                type: "basic"
              });
            }
          }
        }
      }
    };

    const attendFormatFill = function () {
      let data = {
        "date": nvFormatDate(new Date(), "YYYY-MM-DD HH:mm:ss"),
        "detail_format": [],
        "id_activity": Number($("#showTimeLineFromDetail").attr("data-id")),
        "id_company": session.user.id_company,
        "id_person": "",
        "id_user": session.user.id,
        "id_user_take": session.user.id,
        "longitude": "",
        "latitude": "",
        "matrix": [],
        "version": "",
      };
      let formList = $("#verFormatoLlenado").find("[fieldID]");
      for (let i = 0; i < formList.length; i++) {
        data.detail_format.push({
          "id_field": $(formList[i]).attr("fieldID"),
          "content": $(formList[i]).val(), 
          "multiple": 0,
          "id_option": 0, 
          "seq": 0,
          "code": "",
          "id_master": 0
        })  
      };

      fetch('/helpdesk/formatPost', {
        method: 'POST',
        headers: {'Accept': 'application/json', 'Content-Type': 'application/json'},
        body: JSON.stringify(data)
      })
      .then(res => res.json())
      .then(res =>{
        if (!res.result.success) {
          return Swal.fire({
            icon: 'error',
            title: 'No fue posible crear el radicado',
            confirmButtonText: 'Continuar',
          })
        }

        let dataWorkflow = {
          "id_activity": res.result.format.id_activity,
          "id_behavior": Number($("#showTimeLineFromDetail").attr("data-behavior")) || 8,
          "id_company": session.user.id_company,
          "id_format": Number($("#showTimeLineFromDetail").attr("data-format")),
          "id_header": Number($("#showTimeLineFromDetail").attr("data-header")),
          "id_node": Number($("#showTimeLineFromDetail").attr("data-node")),
          "id_priority": Number($("#showTimeLineFromDetail").attr("data-prority")),
          "id_user": session.user.id,
          "id_workflow": Number($("#showTimeLineFromDetail").attr("data-workflow"))
        };

        fetch('/helpdesk/continueWorkflow', {
          method: 'POST',
          headers: {'Accept': 'application/json', 'Content-Type': 'application/json'},
          body: JSON.stringify(dataWorkflow)
        })
        .then(res => res.json())
        .then(res2 =>{  
          if (res2.result.success) {
            $("#helpDeskMain").find(`[id='${dataWorkflow.id_activity}']`).remove();
            Swal.fire({
              icon: 'success',
              title: 'Formulario llenado con exito',
              confirmButtonText: 'Continuar',
              timer: 1500
            })
          } else {
            Swal.fire({
              icon: 'error',
              title: 'No fue posible crear el radicado',
              confirmButtonText: 'Continuar',
            })
          }
          $('#llenadoModal').modal("hide");
        })
      })
    };

    const sendDataSeguimiento = function () {
      let dataSeguimienti = {
        "fechaInicial" : $("#SeguimientofechaI").val(),
        "fechaFinal" :$("#seguimientoFechaF").val(),
        "horas" :$("#seguimientoHoras").val(),
        "estado" :$("#seguimientoCombo1").val(),
        "trabajo":$("#seguimientoCombo2").val(),
        "nota" :$("#seguimientoTextarea").val(),
      }
      console.log(dataSeguimienti)
    }

    const dateRange = function (x) {
      if (x == 1) {
        $("#selectRangeDate").fadeOut("fast");
      }
      if (x == 2) {
        let dateStart = $("#date1").val();
        let dateEnd = $("#date2").val();

        $("#selectRangeDate").fadeOut("fast");

        var filteredByDate = _.filter(solicitudesListaCompleta.cards, function(data){
          let dataFormated = data.date.split(' ')[0];
          return dataFormated >= dateStart && dataFormated <= dateEnd;
        });
        $("#consultaSolicitudModalMain").html("")

        if (filteredByDate[0] != undefined) {
          loadRequests(filteredByDate);
        } else {
          $("#consultaSolicitudModalMain").html("<h6 class='my-0 text-center'>No se encontraron solicitudes</h6> ")
        }
      }
    }

    const dateFilter = function (date) {
      if (date == "x") {
        $("#selectRangeDate").fadeIn("fast");
        return
      }
      var now = new Date();
      var dateStart = JSON.parse(JSON.stringify(now));

      now.setDate(now.getDate() + date);
      var dateEnd = JSON.parse(JSON.stringify(now));

      var filteredByDate = _.filter(solicitudesListaCompleta.cards, function(data){
        let dataFormated = data.date.split(' ')[0];
        return dataFormated >= dateStart && dataFormated <= dateEnd;
      });
      $("#consultaSolicitudModalMain").html("")

      if (filteredByDate[0] != undefined) {
        loadRequests(filteredByDate);
      } else {
        $("#consultaSolicitudModalMain").html("<h6 class='my-0 text-center'>No se encontraron solicitudes</h6> ")
      }
    }

    const filterByValue = function (stringFilter) {
      let filteredByText = _.filter(solicitudesListaCompleta.cards, o => {
        if (o.user.toLowerCase().split(' ').join('').indexOf(stringFilter.toLowerCase()) > -1 || o.format_name.toLowerCase().split(' ').join('').indexOf(stringFilter.toLowerCase()) > -1) return o;
      });
      if (filteredByText.length != 0) {
        $("#consultaSolicitudModalMain").html("")
        loadRequests(filteredByText);
      } else {
        loadRequests({});
      }
    }

    const sendFormNewIncidence = async function () { 
      let data = {
        "date": nvFormatDate(new Date(), "YYYY-MM-DD HH:mm:ss"),
        "detail_format": [],
        "id_activity": Number($('#nuevaTareaModal').attr("data-activity")),
        "id_company": session.user.id_company,
        "id_person": "",
        "id_user": session.user.id,
        "id_user_take": session.user.id,
        "longitude": "",
        "latitude": "",
        "matrix": [],
        "version": "",
      };
      
      let inputs = $("#nuevaTareaModalContent").find("[fieldID]");
      for (let i = 0; i < inputs.length; i++) {
        let type = $(inputs[i]).attr("data-kind");
        if (type == "8") {continue} // Contenedor secciones no es tenido en cuenta

        let id = $(inputs[i]).attr("fieldID");
        let isMultiple = ($(inputs[i]).attr("isMultiple") == "true") ? 1 : 0;
        let content = $(inputs[i]).val();
        let code = "";
        let id_master = 0;

        if (type == 3) {
          let checkboxVal = $(inputs[i]).is(":checked");
          if (checkboxVal) {content = "1"}
          else {content = ""}
        }

        if (type == 4) {
          let idSelect = "#"+$(inputs[i]).attr("id");
          content = $(idSelect).find(":selected").text()
          code = $(idSelect).find(":selected").attr("data-code")
          id_master = $(idSelect).find(":selected").val()
        }

        if (type == 2) {
          let dataImages = await uploadDropzoneImages();
          for (let e = 0; e < dataImages.length; e++) {
            let objt = {
              "id_field": id,
              "multiple": isMultiple,
              "content": dataImages[e].ruta_archivo,
              "id_option": id_master,
              "code": code,
              "id_master": id_master,
              "seq": 0
            };
            data.detail_format.push(objt)
          }
          continue
        }
        let objt = {
          "id_field": id,
          "multiple": isMultiple,
          "content": content,
          "id_option": id_master,
          "code": code,
          "id_master": id_master,
          "seq": 0
        };
        data.detail_format.push(objt)
      }

      fetch('/helpdesk/formatPost', {
        method: 'POST',
        headers: {'Accept': 'application/json', 'Content-Type': 'application/json'},
        body: JSON.stringify(data)
      })
      .then(res => res.json())
      .then(res =>{  
        if (!res.result.success) {
          return Swal.fire({
            icon: 'error',
            title: 'No fue posible crear el radicado',
            confirmButtonText: 'Continuar',
          })
        }
        let dataWorkflow = {
          "id_company": session.user.id_company,
          "id_user": session.user.id,
          "id_workflow": Number($("#nuevaTareaModal").attr("data-idWorkflow")),
          "id_node": Number($("#nuevaTareaModal").attr("data-idNode")),
          "id_format": res.result.format.id,
          "id_priority": Number($("#navbarDropdownMenuPrioridad a").attr("data-value")),
          "id_behavior": $("#navbarDropdownMenuComportamiento").text(),
          "due_date": $("#dateIncidencia").val()
        };

        let masterPriority = _.findWhere(masters.comportamientos.datos, {description: dataWorkflow.id_behavior});
        dataWorkflow.id_behavior = masterPriority.id || 8 // Ajuste por default

        fetch('/helpdesk/startWorkflow', {
          method: 'POST',
          headers: {'Accept': 'application/json', 'Content-Type': 'application/json'},
          body: JSON.stringify(dataWorkflow)
        })
        .then(res => res.json())
        .then(res2 =>{  
          if (res2.result.success) {
            Swal.fire({
              icon: 'success',
              title: 'Radicado creado con éxito',
              text: "Número de radicado: REQ - "+ res2.result.data.number,
              confirmButtonText: 'Continuar',
            })
          } else {
            Swal.fire({
              icon: 'error',
              title: 'No fue posible crear el radicado',
              confirmButtonText: 'Continuar',
            })
          }
          $('#nuevaTareaModal').modal("hide");
        })
      })
    };

    const uploadDropzoneImages = async function () {
      let files = myDropzone.getAcceptedFiles();
      let data = [];
      for (let i = 0; i < files.length; i++) {
        let formData = new FormData();
            formData.append('idFoto', randomIndetifier());
            formData.append('typeAttached', "format");
            formData.append('attachment', files[i]);
        
        let response = await fetch('https://api.pedbox.co:8590/uploadFormat', {
          method: 'POST',
          body: formData,
          contentType: false,
          processData: false,
        })
        .then(response => response.json())
        .then(data => {
          
          return data
        })
        .catch(error => {
          console.log('Request failed', error);
          return {}
        });
        data.push(response)
      }
      return data
    }

    const sendFormEditIncidence = async function () {
      let data = {
        "date": nvFormatDate(new Date(), "YYYY-MM-DD HH:mm:ss"),
        "detail_format": [],
        "id_activity": Number($('#editarFormatoModal').attr("data_activity")),
        "id_header": Number($('#editarFormatoModal').attr("data_header")),
        "id_company": session.user.id_company,
        "id_person": "",
        "id_user": session.user.id,
        "id_user_take": session.user.id,
        "longitude": "",
        "latitude": "",
        "matrix": [],
        "version": "",
        "workflow_log" : {
          "id_workflow_header": Number($('#editarFormatoModal').attr("data_workflowHeader")),
          "id_user": session.user.id,
          "id_format": Number($('#editarFormatoModal').attr("data_activity")),
          "add": [],
          "update": [],
          "delete": []
        }
      };
      
      let inputs = $("#editarFormatoBody").find("[fieldID]");
      for (let i = 0; i < inputs.length; i++) {
        let type = $(inputs[i]).attr("data-kind");
        if (type == "8") {continue} // Contenedor secciones no es tenido en cuenta

        let id = $(inputs[i]).attr("fieldID");
        let isMultiple = ($(inputs[i]).attr("isMultiple") == "true") ? 1 : 0;
        let activitieDetail = $(inputs[i]).attr("data_activity_detail");
        let content = $(inputs[i]).val();
        let code = "";
        let id_master = 0;

        if (type == 3) {
          let checkboxVal = $(inputs[i]).is(":checked");
          if (checkboxVal) {content = "1"}
          else {content = ""}
        }

        if (type == 4) {
          let idSelect = "#"+$(inputs[i]).attr("id");
          content = $(idSelect).find(":selected").text()
          code = $(idSelect).find(":selected").attr("data-code")
          id_master = $(idSelect).find(":selected").val()
        }

        if (type == 2) {
          let dataImages = await uploadDropzoneImages();
          for (let e = 0; e < dataImages.length; e++) {
            let objt = {
              "id_field": id,
              "id_activity_detail": Number(activitieDetail),
              "multiple": isMultiple,
              "content": dataImages[e].ruta_archivo,
              "id_option": id_master,
              "code": code,
              "id_master": id_master,
              "seq": 0
            };
            data.detail_format.push(objt)
          }
          continue
        }
        let objt = {
          "id_field": id,
          "id_activity_detail": Number(activitieDetail),
          "multiple": isMultiple,
          "content": content,
          "id_option": id_master,
          "code": code,
          "id_master": id_master,
          "seq": 0
        };
        data.detail_format.push(objt)
      }



      fetch('/helpdesk/formatPut', {
        method: 'POST',
        headers: {'Accept': 'application/json', 'Content-Type': 'application/json'},
        body: JSON.stringify(data)
      })
      .then(res => res.json())
      .then(res =>{  
        if (res.result.success) {
          return Swal.fire({
            icon: 'success',
            title: 'Radicado actualizado con éxito',
            confirmButtonText: 'Continuar',
          }).then((result) => {
            $("#editarFormatoModal").modal("hide")
            $("#timelineModal").modal("show")
          });
        } else {
          return Swal.fire({
            icon: 'error',
            title: 'No fue posible actualizar el radicado',
            confirmButtonText: 'Continuar',
          })
        }
      })
    };

    const sendFormDetailIncidence = function () {
      let dataToSend = {
          "id_company": 1,
          "id_activity": 213,
          "id_person": "",
          "date": new Date(),
          "id_user": 12214,
          "longitude": "",
          "latitude": "",
          "version": "",
          "detail_format": [],
          "matrix": [],
          "id_user_take": 12214
      };
      
      let inputs = $("#verFormatoLlenado").find("[fieldID]");
      for (let i = 0; i < inputs.length; i++) {
        let id = $(inputs[i]).attr("fieldID");
        let content = $(inputs[i]).val();
        let objt = {
          "id_field": id,
          "multiple": 0,
          "content": content,
          "id_option": 0,
          "seq": 0,
          "code": "",
          "id_master": 0
        };
        dataToSend.detail_format.push(objt);
      }
    };

    const sendFormSeguimiento = function () {
      let dataToSend = {
        "date_begin": $("#SeguimientofechaI").val(), 
        "date_end": $("#seguimientoFechaF").val(),
        "hour": $("#seguimientoHoras").val(),
        "id_activitie": 1,
        "id_user": 1,
        "id_work": 1,
        "note": $("#seguimientoTextarea").val(),
        "state": $("#seguimienState").val() 
      }
    }

    
    // Event Handlers
    // Modal Consulta Solicitudes
    $(document).on("click", ".solicitudesCerrarBtn", function () {
      // id_company
      let userId = $(this).parents(".cardParent").attr("userID");
      $("#closeIncidence").modal("show")
    });

    $(document).on("click", ".solicitudesVerBtn", function () {
      let id_answer_format = $(this).attr("data-format");
      let title = $(this).attr("data-title");
      $("#closeModalVerFormato").attr("onclick", "$('#verFormatoModal').modal('hide'); $('#consultaSolicitudModal').modal('show')")
      $('#consultaSolicitudModal').modal('hide');

      loadFormatRead(id_answer_format, title)
    });

    $(document).on("click", ".solicitudesIniciarBtn", function () {
      $('#consultaSolicitudModal').modal('hide');
      loadNewIncidenceModal()
    });

    $(document).on("click", ".solicitudesReabrirBtn", function () {
      // id_company
      let userId = $(this).parents(".cardParent").attr("userID");
    });

    $('#searchFieldIncidents').keyup(function(e) {
      if (e.which == 13) {
        let stringFilter = $(this).val();
        filterByValue(stringFilter);
      };
    });

    $('.sortToggle').click(function(e) {
      if ($(".sortToggle1").is(":visible")) {
        $(".sortToggle1").hide()
        $(".sortToggle2").show()
        let filteredDescending = _.sortBy(solicitudesListaCompleta.cards, function(date) {
          return date;
        }); 
        $("#consultaSolicitudModalMain").html("")
        loadRequests(filteredDescending.reverse());
      } else {
        $(".sortToggle2").hide()
        $(".sortToggle1").show()
        let filteredAscending = _.sortBy(solicitudesListaCompleta.cards, function(date) {
            return date;
        }); 
        $("#consultaSolicitudModalMain").html("")
        
        loadRequests(filteredAscending);
      }
    });

    let statusRequest = [
      {id: "1", description: "Abiertas", "bg": "blue", "active": true},
      {id: "2", description: "En curso", "bg": "#ff9800", "active": true},
      {id: "3", description: "Completadas", "bg": "green", "active": false},
      {id: "0", description: "Cerradas", "bg": "red", "active": false}
    ];

    $('#linksTachables a').on('click', function(e) {
      $(this).toggleClass("linkTachado")
      valueLink = $(this).attr("value")

      if (statusRequest[valueLink].active == true) {
        statusRequest[valueLink].active = false
      } else if (statusRequest[valueLink].active == false){
        statusRequest[valueLink].active = true
      }

      let objtPrint = [];
      let filtrados = [];
      for (let i = 0; i < statusRequest.length; i++) {
        if (statusRequest[i].active == true) {
          objtPrint.push(statusRequest[i].description);
        }
      }

      for (let i = 0; i < objtPrint.length; i++) {
        filtrados = filtrados.concat(_.groupBy(solicitudesListaCompleta.cards, o => { return o.info_status.description })[objtPrint[i]])
      }
      
      $("#consultaSolicitudModalMain").html("")
      if (filtrados.length >= 1 && filtrados[0] != undefined){
        loadRequests(filtrados)
      } else {
        $("#consultaSolicitudModalMain").html("<h6 class='my-0 text-center'>No se encontró ninguna solicitud</h6> ")
      }
    });

    // Filtrar por nombre consulta solicitudes
    $(document).on( "click", "#consultaSolicitudModalSide a.linkName", function(){
      let personFilter = $(this).attr("value");
      filtrados = _.groupBy(solicitudesListaCompleta.cards, o => { return o.id_user })[personFilter]

      $("#consultaSolicitudModalMain").html("")
      if (filtrados.length >= 1 && filtrados[0] != undefined){
        loadRequests(filtrados)
      } else {
        $("#consultaSolicitudModalMain").html("<h6 class='my-0'>No se encontraron solicitudes</h6> ")
      }
    });

    // Modal Nueva Incidencia
    var activeSlide = "slide1";
    $(document).on( "click", ".selectSlide", function(){
      $(".navCustom").removeClass("navCustom");
      $(this).addClass("navCustom");

      var selectedSlide = $(this).attr("name"),
          activeN = parseInt(activeSlide[activeSlide.length - 1], 10),
          selectedN = parseInt(selectedSlide[selectedSlide.length - 1], 10);

      if (activeSlide == selectedSlide) {return} 

      if (activeN < selectedN) {
        $("#"+activeSlide ).hide("slide", { direction: "right" }, 400);
        $("#"+selectedSlide).delay(200).show("slide", { direction: "left" }, 400);
      } else {
        $("#"+activeSlide ).hide("slide", { direction: "left" }, 400);
        $("#"+selectedSlide).delay(200).show("slide", { direction: "right" }, 400);
      }
      activeSlide = selectedSlide;
    });

    $("#dropMenuPrioridad div").on("click", function() {
      let clone = $(this).clone();;
      $('#navbarDropdownMenuPrioridad').html("");
      $('#navbarDropdownMenuPrioridad').html(clone);
    });

    $("#dropMenuComportamiento a").on("click", function() {
      $('#navbarDropdownMenuComportamiento').text($(this).text());
    });

    // Events Timeline
    $(document).on("click", ".openTimeLine", function (e) {
      e.stopPropagation(); 

      let id = Number($(this).attr("data-id"));
      let data = _.findWhere(dataIncidencesComplete, {id: id});
      loadTimeLineModal(data);

      $("#closeTimeLineModal").attr("onclick", "$('#timelineModal').modal('hide')")
    })

    $(document).on( "click", "#timeLineMain .formatModal", function(){
      let id_answer_format = $(this).attr("data-format");
      let title = $(this).attr("data-title");

      $("#closeModalVerFormato").attr("onclick", "$('#verFormatoModal').modal('hide'); $('#timelineModal').modal('show')")
      $('#procesoModal').modal('hide');
      $('#timelineModal').modal('hide');
      loadFormatRead(id_answer_format, title)
    });

    $(document).on( "click", "#timeLineMain .editarFormatoModal", function(){
      let idFormat = $(this).parents(".timeline-block").attr("idFormat");
      let idHeader = $(this).parents(".timeline-block").attr("idFormatAnswer");
      let title = $(this).parents(".timeline-block").attr("data-title");
      let idWorkflowHeader = $(this).parents(".timeline-block").attr("id");

      $('#timelineModal').modal('hide');
      loadFormatEdit(idFormat, idHeader, title, idWorkflowHeader);
    });

    $(document).on( "click", ".takeIncidence", function(){
      let activitie = $(this).attr("data-activitie");
      let user = $(this).attr("data-user");

      fetch('/helpdesk/takeOcurrence/'+activitie+'/'+user)
      .then(res => res.json())
      .then(res =>{   
        if (res.result.success) {
          fetch('/helpdesk/indicators')
          .then(res => res.json())
          .then(res => {
            if (res.result.success) {
              loadHelpdeskCharts(res.result.helpdesk);
              content = res
            }
            $("#llenadoModalButtons").find(".takeIncidence").remove();
            let element =` 
              <div class="d-flex align-items-center">
                <h6 class="mb-0 small">Asignado a:&nbsp;</h6> 
                <span class="text-xs font-weight-bolder">${session.user.name}</span>
              </div>
            `;
            $("#llenadoModalStateassigned").append(element)

            $("#helpdeskCharts>div")[0].click();
            setTimeout(() => {
              $("#helpdeskHeaderIndicators>div")[0].click();
            }, 300);

            Swal.fire({
              icon: 'success',
              title: 'Incidencia asignada con éxito',
              confirmButtonText: 'Continuar',
            })
          })
        } else {
          return Swal.fire({
            icon: 'error',
            title: 'No fue posible asignar la incidencia',
            confirmButtonText: 'Continuar',
          })
        }
      })
    });

    $(document).on( "click", "#timeLineMain .verSolicitudTimeline", function(){
      let id = $(this).attr("data-format")
      let title = $(this).attr("data-title")

      $("#closeModalVerFormato").attr("onclick", "$('#verFormatoModal').modal('hide'); $('#timelineModal').modal('show')")
      $('#timelineModal').modal('hide');
      loadFormatRead(id, title)
    });

    $(document).on("click", ".procesoModal", function(){
      $('#timelineModal').modal('hide');
      loadFlowDiagram();
    });

    $(document).on( "click", ".closeProcesoModal", function(){
      $('#procesoModal').modal('hide');
      $('#timelineModal').modal('show');
    });

    $(document).on( "click", ".closeFormatModal", function(){
      $('#verFormatoModal').modal('hide');
      $('#editarFormatoModal').modal('hide');
      $('#timelineModal').modal('show');
    });

    // Events Llenado de incidencia
    $(document).on("click", ".incidentMain", function (){
      let id = Number($(this).attr("id"));
      let data = _.findWhere(dataIncidencesComplete, {id: id});

      // Buffer data
      $("#showTimeLineFromDetail").attr("data-id", id);
      $("#showTimeLineFromDetail").attr("data-behavior", data.id_behavior);
      $("#showTimeLineFromDetail").attr("data-prority", data.id_priority);
      $("#showTimeLineFromDetail").attr("data-workflow", data.id_workflow);
      $("#showTimeLineFromDetail").attr("data-header", data.id_workflow_header);
      $("#showTimeLineFromDetail").attr("data-format", data.id_format);
      $("#showTimeLineFromDetail").attr("data-node", data.workflow.nodes[0].id_node);

      loadIncidenceFill(data)
    })

    $(document).on( "click", ".closeLlenadoIncidencia", function(){
      $('#llenadoModal').modal('hide');
    });

    $(document).on( "click", "#formGestionOpen", function(){
      $("#formGestion").slideDown("slow");
    });

    $(document).on( "click", "#formGestionClose", function(){
      $("#formGestion").slideUp("slow")
    });

    $(document).on( "click", ".activeTextarea", function(){
      if($(this).children(":first").attr("class") == "fas fa-pen"){
        $(this).children(":first").toggleClass('fa-pen fa-check');
      } else {
        $(this).children(":first").toggleClass('fa-check fa-pen');
        // Evneto para guardar la nueva info
      }
      let idGestion = $(this).attr("idGestion")
      $("#"+idGestion).toggleClass("textareaReadOnly");
    });

    $(document).on("click", "#showTimeLineFromDetail", function (e) {
      $('#llenadoModal').modal('hide')
      $("#closeTimeLineModal").attr("onclick", "$('#timelineModal').modal('hide'); $('#llenadoModal').modal('show')")

      let id = Number($(this).attr("data-id"));
      let data = _.findWhere(dataIncidencesComplete, {id: id});

      loadTimeLineModal(data);
    })

    // Event Plumb JS
    $(document).on( "click", ".itemPlumb .formatModal", function(){
      $("#procesoModal").modal("hide");
      $("#closeModalVerFormato").attr("onclick", "$('#verFormatoModal').modal('hide'); $('#procesoModal').modal('show')")

      let id = Number($(this).attr("data-id"));
      let title = $(this).attr("data-title"); 

      $("#verFormatoTitle").html("")
      fetch("/helpdesk/detailfFormat/"+id)
      .then(response => response.json())
      .then(data => {
        $("#verFormatoTitle").html(title)
        let field = data.result.detail_activity.detail;

        $('#verFormatoBody').html('<div class=" p-3"></div>');
        for (let i = 0; i < field.length; i++) {
          let fieldDOM = getFormElementResponse(field[i].id_type_field, field[i].description, field[i].content, field[i].web_type);
          $('#verFormatoBody>div').append(fieldDOM);
        }
        $('#verFormatoModal').modal('show');
      }) 
      .catch(error => console.log('Request failed', error));
    });

    // ChoicesJS
    if (document.getElementById("seguimientoCombo1")) {
      var comboBoxSelector = document.getElementById("seguimientoCombo1");
      const combo = new Choices(comboBoxSelector);
    }
    if (document.getElementById("seguimientoCombo2")) {
      var comboBoxSelector = document.getElementById("seguimientoCombo2");
      const combo = new Choices(comboBoxSelector);
    }
    if (document.getElementById("seguimienState")) {
      var comboBoxSelector = document.getElementById("seguimienState");
      const combo = new Choices(comboBoxSelector);
    }
    if (document.getElementById("seguimienTrabajo")) {
      var comboBoxSelector = document.getElementById("seguimienTrabajo");
      const combo = new Choices(comboBoxSelector);
    }

    // HelpDesk Indicators events
    $(document).on( "click", ".chartSidebar", function(){
      $(".chartSidebar").removeClass("chartActive")
      $(this).addClass("chartActive")

      let idOcurrence = $(this).attr("data-id");

      let unassigned = $(this).attr("unassigned");
      let assigned = $(this).attr("assigned");
      let progress = $(this).attr("progress");
      let completed = $(this).attr("completed");
      let closed = $(this).attr("closed");

      // Libreria countUP JS
      $("#HeaderSinAsignar").closest(".cardsState").attr("data-ocurrence", idOcurrence)
      const countUp1 = new CountUp('HeaderSinAsignar', unassigned, {duration: 1});
      if (!countUp1.error) { countUp1.start();} else {console.error(countUp1.error);}

      $("#HeaderAsignadas").closest(".cardsState").attr("data-ocurrence", idOcurrence)
      const countUp2 = new CountUp('HeaderAsignadas', assigned, {duration: 1});
      if (!countUp2.error) { countUp2.start();} else {console.error(countUp2.error);}

      $("#HeaderEnCurso").closest(".cardsState").attr("data-ocurrence", idOcurrence)
      const countUp3 = new CountUp('HeaderEnCurso', progress, {duration: 1});
      if (!countUp3.error) { countUp3.start();} else {console.error(countUp3.error);}

      $("#HeaderCompletadas").closest(".cardsState").attr("data-ocurrence", idOcurrence)
      const countUp4 = new CountUp('HeaderCompletadas', completed, {duration: 1});
      if (!countUp4.error) { countUp4.start();} else {console.error(countUp4.error);}

      $("#HeaderCerradas").closest(".cardsState").attr("data-ocurrence", idOcurrence)
      const countUp5 = new CountUp('HeaderCerradas', closed, {duration: 1});
      if (!countUp5.error) { countUp5.start();} else {console.error(countUp5.error);}
    });

    $(".cardsState").on("click", function () {
      $(".cardsState").removeClass("indicatorsActive")
      $(this).addClass("indicatorsActive")

      let state = $(this).attr("data-state");
      let ocurrence = $(this).attr("data-ocurrence");

      fetch('/helpdesk/ocurrence/'+state+'/'+ocurrence)
      .then(res => res.json())
      .then(res =>{   
        if (res.res.err) {
          console.log("Error obteniendo ocurrencias")
        } else {
          dataIncidencesComplete = res.res.result.ocurrence_helpdesk;
          loadHelpdeskIncidents(res.res.result.ocurrence_helpdesk)
        }
      })
    })

    // Permissions
    let userCanTakeTask = true;
    const handlePermissions = function (data) {
      let permissions = data;
      let permissionIndex; 
      
      permissionIndex = permissions.map(e => e.code).lastIndexOf("4000_CAN_ACCESS_HELPDESK");
      if (permissionIndex  != -1 && permissions[permissionIndex].content == "N") {
        // Nothing by moment
      };

      permissionIndex = permissions.map(e => e.code).lastIndexOf("4010_IS_ADMIN_HELPDESK");
      if (permissionIndex  != -1 && permissions[permissionIndex].content == "N") {
        // Nothing by moment
      };

      permissionIndex = permissions.map(e => e.code).lastIndexOf("4015_CAN_CREATE_INCIDENCE_HELPDESK");
      if (permissionIndex  != -1 && permissions[permissionIndex].content == "N") {
        $("#newIncidenceButton").hide() // Botón nueva incidencia y ver usuarios solo se muestra si el usuario tiene este permiso
        $("#usersContainer").hide();
      };

      permissionIndex = permissions.map(e => e.code).lastIndexOf("4000_CAN_TAKE_TASK");
      if (permissionIndex  != -1 && permissions[permissionIndex].content == "N") {
        userCanTakeTask = false;
      };

      permissionIndex = permissions.map(e => e.code).lastIndexOf("4000_CAN_EDIT_FORMAT_INCIDENCE");
      if (permissionIndex  != -1 && permissions[permissionIndex].content == "N") {
        // Nothing by moment
      };

      permissionIndex = permissions.map(e => e.code).lastIndexOf("4000_CAN_CREATE_MANAGEMENT_HELPDESK");
      if (permissionIndex  != -1 && permissions[permissionIndex].content == "N") {
        $("#hideFormGestion").hide();
      };

      permissionIndex = permissions.map(e => e.code).lastIndexOf("5000_FILTRO_TIPO_DE_REPORTE_PROCESOS");
      if (permissionIndex  != -1 && permissions[permissionIndex].content == "N") {
        // Nothing by moment
      };

      permissionIndex = permissions.map(e => e.code).lastIndexOf("6060_CAN_VIEW_REPORTS_FORMATS");
      if (permissionIndex  != -1 && permissions[permissionIndex].content == "N") {
        // Nothing by moment
      };
    }

    //filtros
    function getFilterArea(input) {
      let filterArea = masters.categorias.datos.filter((a) => {
          return (""+a.id == ""+input)? true: false;
      })[0];
      return ((filterArea)? filterArea: {});
    }
    function getFilterClass(input) {
      let filterClass = masters.clases.datos.filter((a) => {
          return (""+a.id == ""+input)? true: false;
      })[0];
      return ((filterClass)? filterClass: {});
    }
    function getFilterFormat(input) {
      let filterFormat = formats.filter((a) => {
          return (""+a.id == ""+input)? true: false;
      })[0];
      return ((filterFormat)? filterFormat: {});
    }

    $( document ).ready(function() {
      loadHelpdeskCharts(content.result.helpdesk);
      loadHelpdeskUsers(users.result);
      handlePermissions(session.user.permission);

      $("#dropMenuPrioridad .dropdown-item")[$("#dropMenuPrioridad .dropdown-item").length -1].click();
      $("#dropMenuComportamiento .dropdown-item")[$("#dropMenuComportamiento .dropdown-item").length -1].click();
      $('#dateIncidencia').val(new Date().toDateInputValue());
      
      $("#helpdeskCharts>div:first").click();
      setTimeout(() => {
        $("#helpdeskHeaderIndicators>div:first").click()
      }, 300);

      $("#menuHelpdesk").addClass("activeNav");
      $("#preloader").hide();
    }); 
  </script>

</body>
</html>

